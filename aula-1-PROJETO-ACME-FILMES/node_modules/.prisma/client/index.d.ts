
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbl_filmes
 * 
 */
export type tbl_filmes = $Result.DefaultSelection<Prisma.$tbl_filmesPayload>
/**
 * Model tbl_atores
 * 
 */
export type tbl_atores = $Result.DefaultSelection<Prisma.$tbl_atoresPayload>
/**
 * Model tbl_classificacoes
 * 
 */
export type tbl_classificacoes = $Result.DefaultSelection<Prisma.$tbl_classificacoesPayload>
/**
 * Model tbl_diretores
 * 
 */
export type tbl_diretores = $Result.DefaultSelection<Prisma.$tbl_diretoresPayload>
/**
 * Model tbl_filmes_ator
 * 
 */
export type tbl_filmes_ator = $Result.DefaultSelection<Prisma.$tbl_filmes_atorPayload>
/**
 * Model tbl_filmes_diretor
 * 
 */
export type tbl_filmes_diretor = $Result.DefaultSelection<Prisma.$tbl_filmes_diretorPayload>
/**
 * Model tbl_genero_filme
 * 
 */
export type tbl_genero_filme = $Result.DefaultSelection<Prisma.$tbl_genero_filmePayload>
/**
 * Model tbl_generos
 * 
 */
export type tbl_generos = $Result.DefaultSelection<Prisma.$tbl_generosPayload>
/**
 * Model tbl_nacionalidades
 * 
 */
export type tbl_nacionalidades = $Result.DefaultSelection<Prisma.$tbl_nacionalidadesPayload>
/**
 * Model tbl_nacionalidades_ator
 * 
 */
export type tbl_nacionalidades_ator = $Result.DefaultSelection<Prisma.$tbl_nacionalidades_atorPayload>
/**
 * Model tbl_nacionalidades_diretor
 * 
 */
export type tbl_nacionalidades_diretor = $Result.DefaultSelection<Prisma.$tbl_nacionalidades_diretorPayload>
/**
 * Model tbl_sexo
 * 
 */
export type tbl_sexo = $Result.DefaultSelection<Prisma.$tbl_sexoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tbl_filmes
 * const tbl_filmes = await prisma.tbl_filmes.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tbl_filmes
   * const tbl_filmes = await prisma.tbl_filmes.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbl_filmes`: Exposes CRUD operations for the **tbl_filmes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_filmes
    * const tbl_filmes = await prisma.tbl_filmes.findMany()
    * ```
    */
  get tbl_filmes(): Prisma.tbl_filmesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_atores`: Exposes CRUD operations for the **tbl_atores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_atores
    * const tbl_atores = await prisma.tbl_atores.findMany()
    * ```
    */
  get tbl_atores(): Prisma.tbl_atoresDelegate<ExtArgs>;

  /**
   * `prisma.tbl_classificacoes`: Exposes CRUD operations for the **tbl_classificacoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_classificacoes
    * const tbl_classificacoes = await prisma.tbl_classificacoes.findMany()
    * ```
    */
  get tbl_classificacoes(): Prisma.tbl_classificacoesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_diretores`: Exposes CRUD operations for the **tbl_diretores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_diretores
    * const tbl_diretores = await prisma.tbl_diretores.findMany()
    * ```
    */
  get tbl_diretores(): Prisma.tbl_diretoresDelegate<ExtArgs>;

  /**
   * `prisma.tbl_filmes_ator`: Exposes CRUD operations for the **tbl_filmes_ator** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_filmes_ators
    * const tbl_filmes_ators = await prisma.tbl_filmes_ator.findMany()
    * ```
    */
  get tbl_filmes_ator(): Prisma.tbl_filmes_atorDelegate<ExtArgs>;

  /**
   * `prisma.tbl_filmes_diretor`: Exposes CRUD operations for the **tbl_filmes_diretor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_filmes_diretors
    * const tbl_filmes_diretors = await prisma.tbl_filmes_diretor.findMany()
    * ```
    */
  get tbl_filmes_diretor(): Prisma.tbl_filmes_diretorDelegate<ExtArgs>;

  /**
   * `prisma.tbl_genero_filme`: Exposes CRUD operations for the **tbl_genero_filme** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_genero_filmes
    * const tbl_genero_filmes = await prisma.tbl_genero_filme.findMany()
    * ```
    */
  get tbl_genero_filme(): Prisma.tbl_genero_filmeDelegate<ExtArgs>;

  /**
   * `prisma.tbl_generos`: Exposes CRUD operations for the **tbl_generos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_generos
    * const tbl_generos = await prisma.tbl_generos.findMany()
    * ```
    */
  get tbl_generos(): Prisma.tbl_generosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_nacionalidades`: Exposes CRUD operations for the **tbl_nacionalidades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_nacionalidades
    * const tbl_nacionalidades = await prisma.tbl_nacionalidades.findMany()
    * ```
    */
  get tbl_nacionalidades(): Prisma.tbl_nacionalidadesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_nacionalidades_ator`: Exposes CRUD operations for the **tbl_nacionalidades_ator** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_nacionalidades_ators
    * const tbl_nacionalidades_ators = await prisma.tbl_nacionalidades_ator.findMany()
    * ```
    */
  get tbl_nacionalidades_ator(): Prisma.tbl_nacionalidades_atorDelegate<ExtArgs>;

  /**
   * `prisma.tbl_nacionalidades_diretor`: Exposes CRUD operations for the **tbl_nacionalidades_diretor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_nacionalidades_diretors
    * const tbl_nacionalidades_diretors = await prisma.tbl_nacionalidades_diretor.findMany()
    * ```
    */
  get tbl_nacionalidades_diretor(): Prisma.tbl_nacionalidades_diretorDelegate<ExtArgs>;

  /**
   * `prisma.tbl_sexo`: Exposes CRUD operations for the **tbl_sexo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_sexos
    * const tbl_sexos = await prisma.tbl_sexo.findMany()
    * ```
    */
  get tbl_sexo(): Prisma.tbl_sexoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.9.1
   * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbl_filmes: 'tbl_filmes',
    tbl_atores: 'tbl_atores',
    tbl_classificacoes: 'tbl_classificacoes',
    tbl_diretores: 'tbl_diretores',
    tbl_filmes_ator: 'tbl_filmes_ator',
    tbl_filmes_diretor: 'tbl_filmes_diretor',
    tbl_genero_filme: 'tbl_genero_filme',
    tbl_generos: 'tbl_generos',
    tbl_nacionalidades: 'tbl_nacionalidades',
    tbl_nacionalidades_ator: 'tbl_nacionalidades_ator',
    tbl_nacionalidades_diretor: 'tbl_nacionalidades_diretor',
    tbl_sexo: 'tbl_sexo'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'tbl_filmes' | 'tbl_atores' | 'tbl_classificacoes' | 'tbl_diretores' | 'tbl_filmes_ator' | 'tbl_filmes_diretor' | 'tbl_genero_filme' | 'tbl_generos' | 'tbl_nacionalidades' | 'tbl_nacionalidades_ator' | 'tbl_nacionalidades_diretor' | 'tbl_sexo'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      tbl_filmes: {
        payload: Prisma.$tbl_filmesPayload<ExtArgs>
        fields: Prisma.tbl_filmesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_filmesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_filmesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload>
          }
          findFirst: {
            args: Prisma.tbl_filmesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_filmesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload>
          }
          findMany: {
            args: Prisma.tbl_filmesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload>[]
          }
          create: {
            args: Prisma.tbl_filmesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload>
          }
          createMany: {
            args: Prisma.tbl_filmesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_filmesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload>
          }
          update: {
            args: Prisma.tbl_filmesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_filmesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_filmesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_filmesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_filmesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_filmes>
          }
          groupBy: {
            args: Prisma.tbl_filmesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_filmesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_filmesCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_filmesCountAggregateOutputType> | number
          }
        }
      }
      tbl_atores: {
        payload: Prisma.$tbl_atoresPayload<ExtArgs>
        fields: Prisma.tbl_atoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_atoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_atoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload>
          }
          findFirst: {
            args: Prisma.tbl_atoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_atoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload>
          }
          findMany: {
            args: Prisma.tbl_atoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload>[]
          }
          create: {
            args: Prisma.tbl_atoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload>
          }
          createMany: {
            args: Prisma.tbl_atoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_atoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload>
          }
          update: {
            args: Prisma.tbl_atoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload>
          }
          deleteMany: {
            args: Prisma.tbl_atoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_atoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_atoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_atoresPayload>
          }
          aggregate: {
            args: Prisma.Tbl_atoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_atores>
          }
          groupBy: {
            args: Prisma.tbl_atoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_atoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_atoresCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_atoresCountAggregateOutputType> | number
          }
        }
      }
      tbl_classificacoes: {
        payload: Prisma.$tbl_classificacoesPayload<ExtArgs>
        fields: Prisma.tbl_classificacoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_classificacoesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_classificacoesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload>
          }
          findFirst: {
            args: Prisma.tbl_classificacoesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_classificacoesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload>
          }
          findMany: {
            args: Prisma.tbl_classificacoesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload>[]
          }
          create: {
            args: Prisma.tbl_classificacoesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload>
          }
          createMany: {
            args: Prisma.tbl_classificacoesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_classificacoesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload>
          }
          update: {
            args: Prisma.tbl_classificacoesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_classificacoesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_classificacoesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_classificacoesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_classificacoesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_classificacoesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_classificacoes>
          }
          groupBy: {
            args: Prisma.tbl_classificacoesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_classificacoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_classificacoesCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_classificacoesCountAggregateOutputType> | number
          }
        }
      }
      tbl_diretores: {
        payload: Prisma.$tbl_diretoresPayload<ExtArgs>
        fields: Prisma.tbl_diretoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_diretoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_diretoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload>
          }
          findFirst: {
            args: Prisma.tbl_diretoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_diretoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload>
          }
          findMany: {
            args: Prisma.tbl_diretoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload>[]
          }
          create: {
            args: Prisma.tbl_diretoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload>
          }
          createMany: {
            args: Prisma.tbl_diretoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_diretoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload>
          }
          update: {
            args: Prisma.tbl_diretoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload>
          }
          deleteMany: {
            args: Prisma.tbl_diretoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_diretoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_diretoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_diretoresPayload>
          }
          aggregate: {
            args: Prisma.Tbl_diretoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_diretores>
          }
          groupBy: {
            args: Prisma.tbl_diretoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_diretoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_diretoresCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_diretoresCountAggregateOutputType> | number
          }
        }
      }
      tbl_filmes_ator: {
        payload: Prisma.$tbl_filmes_atorPayload<ExtArgs>
        fields: Prisma.tbl_filmes_atorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_filmes_atorFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_filmes_atorFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload>
          }
          findFirst: {
            args: Prisma.tbl_filmes_atorFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_filmes_atorFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload>
          }
          findMany: {
            args: Prisma.tbl_filmes_atorFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload>[]
          }
          create: {
            args: Prisma.tbl_filmes_atorCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload>
          }
          createMany: {
            args: Prisma.tbl_filmes_atorCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_filmes_atorDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload>
          }
          update: {
            args: Prisma.tbl_filmes_atorUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload>
          }
          deleteMany: {
            args: Prisma.tbl_filmes_atorDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_filmes_atorUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_filmes_atorUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_atorPayload>
          }
          aggregate: {
            args: Prisma.Tbl_filmes_atorAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_filmes_ator>
          }
          groupBy: {
            args: Prisma.tbl_filmes_atorGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_filmes_atorGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_filmes_atorCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_filmes_atorCountAggregateOutputType> | number
          }
        }
      }
      tbl_filmes_diretor: {
        payload: Prisma.$tbl_filmes_diretorPayload<ExtArgs>
        fields: Prisma.tbl_filmes_diretorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_filmes_diretorFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_filmes_diretorFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload>
          }
          findFirst: {
            args: Prisma.tbl_filmes_diretorFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_filmes_diretorFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload>
          }
          findMany: {
            args: Prisma.tbl_filmes_diretorFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload>[]
          }
          create: {
            args: Prisma.tbl_filmes_diretorCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload>
          }
          createMany: {
            args: Prisma.tbl_filmes_diretorCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_filmes_diretorDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload>
          }
          update: {
            args: Prisma.tbl_filmes_diretorUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload>
          }
          deleteMany: {
            args: Prisma.tbl_filmes_diretorDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_filmes_diretorUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_filmes_diretorUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_filmes_diretorPayload>
          }
          aggregate: {
            args: Prisma.Tbl_filmes_diretorAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_filmes_diretor>
          }
          groupBy: {
            args: Prisma.tbl_filmes_diretorGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_filmes_diretorGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_filmes_diretorCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_filmes_diretorCountAggregateOutputType> | number
          }
        }
      }
      tbl_genero_filme: {
        payload: Prisma.$tbl_genero_filmePayload<ExtArgs>
        fields: Prisma.tbl_genero_filmeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_genero_filmeFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_genero_filmeFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload>
          }
          findFirst: {
            args: Prisma.tbl_genero_filmeFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_genero_filmeFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload>
          }
          findMany: {
            args: Prisma.tbl_genero_filmeFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload>[]
          }
          create: {
            args: Prisma.tbl_genero_filmeCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload>
          }
          createMany: {
            args: Prisma.tbl_genero_filmeCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_genero_filmeDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload>
          }
          update: {
            args: Prisma.tbl_genero_filmeUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload>
          }
          deleteMany: {
            args: Prisma.tbl_genero_filmeDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_genero_filmeUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_genero_filmeUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_genero_filmePayload>
          }
          aggregate: {
            args: Prisma.Tbl_genero_filmeAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_genero_filme>
          }
          groupBy: {
            args: Prisma.tbl_genero_filmeGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_genero_filmeGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_genero_filmeCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_genero_filmeCountAggregateOutputType> | number
          }
        }
      }
      tbl_generos: {
        payload: Prisma.$tbl_generosPayload<ExtArgs>
        fields: Prisma.tbl_generosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_generosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_generosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload>
          }
          findFirst: {
            args: Prisma.tbl_generosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_generosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload>
          }
          findMany: {
            args: Prisma.tbl_generosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload>[]
          }
          create: {
            args: Prisma.tbl_generosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload>
          }
          createMany: {
            args: Prisma.tbl_generosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_generosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload>
          }
          update: {
            args: Prisma.tbl_generosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_generosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_generosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_generosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_generosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_generosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_generos>
          }
          groupBy: {
            args: Prisma.tbl_generosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_generosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_generosCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_generosCountAggregateOutputType> | number
          }
        }
      }
      tbl_nacionalidades: {
        payload: Prisma.$tbl_nacionalidadesPayload<ExtArgs>
        fields: Prisma.tbl_nacionalidadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_nacionalidadesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_nacionalidadesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload>
          }
          findFirst: {
            args: Prisma.tbl_nacionalidadesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_nacionalidadesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload>
          }
          findMany: {
            args: Prisma.tbl_nacionalidadesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload>[]
          }
          create: {
            args: Prisma.tbl_nacionalidadesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload>
          }
          createMany: {
            args: Prisma.tbl_nacionalidadesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_nacionalidadesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload>
          }
          update: {
            args: Prisma.tbl_nacionalidadesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_nacionalidadesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_nacionalidadesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_nacionalidadesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidadesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_nacionalidadesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_nacionalidades>
          }
          groupBy: {
            args: Prisma.tbl_nacionalidadesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_nacionalidadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_nacionalidadesCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_nacionalidadesCountAggregateOutputType> | number
          }
        }
      }
      tbl_nacionalidades_ator: {
        payload: Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>
        fields: Prisma.tbl_nacionalidades_atorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_nacionalidades_atorFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_nacionalidades_atorFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload>
          }
          findFirst: {
            args: Prisma.tbl_nacionalidades_atorFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_nacionalidades_atorFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload>
          }
          findMany: {
            args: Prisma.tbl_nacionalidades_atorFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload>[]
          }
          create: {
            args: Prisma.tbl_nacionalidades_atorCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload>
          }
          createMany: {
            args: Prisma.tbl_nacionalidades_atorCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_nacionalidades_atorDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload>
          }
          update: {
            args: Prisma.tbl_nacionalidades_atorUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload>
          }
          deleteMany: {
            args: Prisma.tbl_nacionalidades_atorDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_nacionalidades_atorUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_nacionalidades_atorUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_atorPayload>
          }
          aggregate: {
            args: Prisma.Tbl_nacionalidades_atorAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_nacionalidades_ator>
          }
          groupBy: {
            args: Prisma.tbl_nacionalidades_atorGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_nacionalidades_atorGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_nacionalidades_atorCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_nacionalidades_atorCountAggregateOutputType> | number
          }
        }
      }
      tbl_nacionalidades_diretor: {
        payload: Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>
        fields: Prisma.tbl_nacionalidades_diretorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_nacionalidades_diretorFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_nacionalidades_diretorFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload>
          }
          findFirst: {
            args: Prisma.tbl_nacionalidades_diretorFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_nacionalidades_diretorFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload>
          }
          findMany: {
            args: Prisma.tbl_nacionalidades_diretorFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload>[]
          }
          create: {
            args: Prisma.tbl_nacionalidades_diretorCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload>
          }
          createMany: {
            args: Prisma.tbl_nacionalidades_diretorCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_nacionalidades_diretorDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload>
          }
          update: {
            args: Prisma.tbl_nacionalidades_diretorUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload>
          }
          deleteMany: {
            args: Prisma.tbl_nacionalidades_diretorDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_nacionalidades_diretorUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_nacionalidades_diretorUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_nacionalidades_diretorPayload>
          }
          aggregate: {
            args: Prisma.Tbl_nacionalidades_diretorAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_nacionalidades_diretor>
          }
          groupBy: {
            args: Prisma.tbl_nacionalidades_diretorGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_nacionalidades_diretorGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_nacionalidades_diretorCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_nacionalidades_diretorCountAggregateOutputType> | number
          }
        }
      }
      tbl_sexo: {
        payload: Prisma.$tbl_sexoPayload<ExtArgs>
        fields: Prisma.tbl_sexoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_sexoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_sexoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          findFirst: {
            args: Prisma.tbl_sexoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_sexoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          findMany: {
            args: Prisma.tbl_sexoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>[]
          }
          create: {
            args: Prisma.tbl_sexoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          createMany: {
            args: Prisma.tbl_sexoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_sexoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          update: {
            args: Prisma.tbl_sexoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_sexoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_sexoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_sexoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_sexoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_sexo>
          }
          groupBy: {
            args: Prisma.tbl_sexoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_sexoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_sexoCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_sexoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Tbl_filmesCountOutputType
   */

  export type Tbl_filmesCountOutputType = {
    tbl_filmes_ator: number
    tbl_filmes_diretor: number
    tbl_genero_filme: number
  }

  export type Tbl_filmesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_filmes_ator?: boolean | Tbl_filmesCountOutputTypeCountTbl_filmes_atorArgs
    tbl_filmes_diretor?: boolean | Tbl_filmesCountOutputTypeCountTbl_filmes_diretorArgs
    tbl_genero_filme?: boolean | Tbl_filmesCountOutputTypeCountTbl_genero_filmeArgs
  }

  // Custom InputTypes

  /**
   * Tbl_filmesCountOutputType without action
   */
  export type Tbl_filmesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_filmesCountOutputType
     */
    select?: Tbl_filmesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tbl_filmesCountOutputType without action
   */
  export type Tbl_filmesCountOutputTypeCountTbl_filmes_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmes_atorWhereInput
  }


  /**
   * Tbl_filmesCountOutputType without action
   */
  export type Tbl_filmesCountOutputTypeCountTbl_filmes_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmes_diretorWhereInput
  }


  /**
   * Tbl_filmesCountOutputType without action
   */
  export type Tbl_filmesCountOutputTypeCountTbl_genero_filmeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_genero_filmeWhereInput
  }



  /**
   * Count Type Tbl_atoresCountOutputType
   */

  export type Tbl_atoresCountOutputType = {
    tbl_filmes_ator: number
    tbl_nacionalidades_ator: number
  }

  export type Tbl_atoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_filmes_ator?: boolean | Tbl_atoresCountOutputTypeCountTbl_filmes_atorArgs
    tbl_nacionalidades_ator?: boolean | Tbl_atoresCountOutputTypeCountTbl_nacionalidades_atorArgs
  }

  // Custom InputTypes

  /**
   * Tbl_atoresCountOutputType without action
   */
  export type Tbl_atoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_atoresCountOutputType
     */
    select?: Tbl_atoresCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tbl_atoresCountOutputType without action
   */
  export type Tbl_atoresCountOutputTypeCountTbl_filmes_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmes_atorWhereInput
  }


  /**
   * Tbl_atoresCountOutputType without action
   */
  export type Tbl_atoresCountOutputTypeCountTbl_nacionalidades_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_nacionalidades_atorWhereInput
  }



  /**
   * Count Type Tbl_classificacoesCountOutputType
   */

  export type Tbl_classificacoesCountOutputType = {
    tbl_filmes: number
  }

  export type Tbl_classificacoesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_filmes?: boolean | Tbl_classificacoesCountOutputTypeCountTbl_filmesArgs
  }

  // Custom InputTypes

  /**
   * Tbl_classificacoesCountOutputType without action
   */
  export type Tbl_classificacoesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_classificacoesCountOutputType
     */
    select?: Tbl_classificacoesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tbl_classificacoesCountOutputType without action
   */
  export type Tbl_classificacoesCountOutputTypeCountTbl_filmesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmesWhereInput
  }



  /**
   * Count Type Tbl_diretoresCountOutputType
   */

  export type Tbl_diretoresCountOutputType = {
    tbl_filmes_diretor: number
    tbl_nacionalidades_diretor: number
  }

  export type Tbl_diretoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_filmes_diretor?: boolean | Tbl_diretoresCountOutputTypeCountTbl_filmes_diretorArgs
    tbl_nacionalidades_diretor?: boolean | Tbl_diretoresCountOutputTypeCountTbl_nacionalidades_diretorArgs
  }

  // Custom InputTypes

  /**
   * Tbl_diretoresCountOutputType without action
   */
  export type Tbl_diretoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_diretoresCountOutputType
     */
    select?: Tbl_diretoresCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tbl_diretoresCountOutputType without action
   */
  export type Tbl_diretoresCountOutputTypeCountTbl_filmes_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmes_diretorWhereInput
  }


  /**
   * Tbl_diretoresCountOutputType without action
   */
  export type Tbl_diretoresCountOutputTypeCountTbl_nacionalidades_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_nacionalidades_diretorWhereInput
  }



  /**
   * Count Type Tbl_generosCountOutputType
   */

  export type Tbl_generosCountOutputType = {
    tbl_genero_filme: number
  }

  export type Tbl_generosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_genero_filme?: boolean | Tbl_generosCountOutputTypeCountTbl_genero_filmeArgs
  }

  // Custom InputTypes

  /**
   * Tbl_generosCountOutputType without action
   */
  export type Tbl_generosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_generosCountOutputType
     */
    select?: Tbl_generosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tbl_generosCountOutputType without action
   */
  export type Tbl_generosCountOutputTypeCountTbl_genero_filmeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_genero_filmeWhereInput
  }



  /**
   * Count Type Tbl_nacionalidadesCountOutputType
   */

  export type Tbl_nacionalidadesCountOutputType = {
    tbl_nacionalidades_ator: number
    tbl_nacionalidades_diretor: number
  }

  export type Tbl_nacionalidadesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_nacionalidades_ator?: boolean | Tbl_nacionalidadesCountOutputTypeCountTbl_nacionalidades_atorArgs
    tbl_nacionalidades_diretor?: boolean | Tbl_nacionalidadesCountOutputTypeCountTbl_nacionalidades_diretorArgs
  }

  // Custom InputTypes

  /**
   * Tbl_nacionalidadesCountOutputType without action
   */
  export type Tbl_nacionalidadesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_nacionalidadesCountOutputType
     */
    select?: Tbl_nacionalidadesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tbl_nacionalidadesCountOutputType without action
   */
  export type Tbl_nacionalidadesCountOutputTypeCountTbl_nacionalidades_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_nacionalidades_atorWhereInput
  }


  /**
   * Tbl_nacionalidadesCountOutputType without action
   */
  export type Tbl_nacionalidadesCountOutputTypeCountTbl_nacionalidades_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_nacionalidades_diretorWhereInput
  }



  /**
   * Count Type Tbl_sexoCountOutputType
   */

  export type Tbl_sexoCountOutputType = {
    tbl_atores: number
    tbl_diretores: number
  }

  export type Tbl_sexoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_atores?: boolean | Tbl_sexoCountOutputTypeCountTbl_atoresArgs
    tbl_diretores?: boolean | Tbl_sexoCountOutputTypeCountTbl_diretoresArgs
  }

  // Custom InputTypes

  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_sexoCountOutputType
     */
    select?: Tbl_sexoCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_atoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_atoresWhereInput
  }


  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_diretoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_diretoresWhereInput
  }



  /**
   * Models
   */

  /**
   * Model tbl_filmes
   */

  export type AggregateTbl_filmes = {
    _count: Tbl_filmesCountAggregateOutputType | null
    _avg: Tbl_filmesAvgAggregateOutputType | null
    _sum: Tbl_filmesSumAggregateOutputType | null
    _min: Tbl_filmesMinAggregateOutputType | null
    _max: Tbl_filmesMaxAggregateOutputType | null
  }

  export type Tbl_filmesAvgAggregateOutputType = {
    id: number | null
    valor_unitario: number | null
    id_classificacao: number | null
  }

  export type Tbl_filmesSumAggregateOutputType = {
    id: number | null
    valor_unitario: number | null
    id_classificacao: number | null
  }

  export type Tbl_filmesMinAggregateOutputType = {
    id: number | null
    nome: string | null
    sinopse: string | null
    duracao: Date | null
    data_lancamento: Date | null
    data_relancamento: Date | null
    foto_capa: string | null
    valor_unitario: number | null
    id_classificacao: number | null
  }

  export type Tbl_filmesMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    sinopse: string | null
    duracao: Date | null
    data_lancamento: Date | null
    data_relancamento: Date | null
    foto_capa: string | null
    valor_unitario: number | null
    id_classificacao: number | null
  }

  export type Tbl_filmesCountAggregateOutputType = {
    id: number
    nome: number
    sinopse: number
    duracao: number
    data_lancamento: number
    data_relancamento: number
    foto_capa: number
    valor_unitario: number
    id_classificacao: number
    _all: number
  }


  export type Tbl_filmesAvgAggregateInputType = {
    id?: true
    valor_unitario?: true
    id_classificacao?: true
  }

  export type Tbl_filmesSumAggregateInputType = {
    id?: true
    valor_unitario?: true
    id_classificacao?: true
  }

  export type Tbl_filmesMinAggregateInputType = {
    id?: true
    nome?: true
    sinopse?: true
    duracao?: true
    data_lancamento?: true
    data_relancamento?: true
    foto_capa?: true
    valor_unitario?: true
    id_classificacao?: true
  }

  export type Tbl_filmesMaxAggregateInputType = {
    id?: true
    nome?: true
    sinopse?: true
    duracao?: true
    data_lancamento?: true
    data_relancamento?: true
    foto_capa?: true
    valor_unitario?: true
    id_classificacao?: true
  }

  export type Tbl_filmesCountAggregateInputType = {
    id?: true
    nome?: true
    sinopse?: true
    duracao?: true
    data_lancamento?: true
    data_relancamento?: true
    foto_capa?: true
    valor_unitario?: true
    id_classificacao?: true
    _all?: true
  }

  export type Tbl_filmesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_filmes to aggregate.
     */
    where?: tbl_filmesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes to fetch.
     */
    orderBy?: tbl_filmesOrderByWithRelationInput | tbl_filmesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_filmesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_filmes
    **/
    _count?: true | Tbl_filmesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_filmesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_filmesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_filmesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_filmesMaxAggregateInputType
  }

  export type GetTbl_filmesAggregateType<T extends Tbl_filmesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_filmes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_filmes[P]>
      : GetScalarType<T[P], AggregateTbl_filmes[P]>
  }




  export type tbl_filmesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmesWhereInput
    orderBy?: tbl_filmesOrderByWithAggregationInput | tbl_filmesOrderByWithAggregationInput[]
    by: Tbl_filmesScalarFieldEnum[] | Tbl_filmesScalarFieldEnum
    having?: tbl_filmesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_filmesCountAggregateInputType | true
    _avg?: Tbl_filmesAvgAggregateInputType
    _sum?: Tbl_filmesSumAggregateInputType
    _min?: Tbl_filmesMinAggregateInputType
    _max?: Tbl_filmesMaxAggregateInputType
  }

  export type Tbl_filmesGroupByOutputType = {
    id: number
    nome: string
    sinopse: string
    duracao: Date
    data_lancamento: Date
    data_relancamento: Date | null
    foto_capa: string
    valor_unitario: number | null
    id_classificacao: number
    _count: Tbl_filmesCountAggregateOutputType | null
    _avg: Tbl_filmesAvgAggregateOutputType | null
    _sum: Tbl_filmesSumAggregateOutputType | null
    _min: Tbl_filmesMinAggregateOutputType | null
    _max: Tbl_filmesMaxAggregateOutputType | null
  }

  type GetTbl_filmesGroupByPayload<T extends tbl_filmesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_filmesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_filmesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_filmesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_filmesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_filmesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    sinopse?: boolean
    duracao?: boolean
    data_lancamento?: boolean
    data_relancamento?: boolean
    foto_capa?: boolean
    valor_unitario?: boolean
    id_classificacao?: boolean
    tbl_classificacoes?: boolean | tbl_classificacoesDefaultArgs<ExtArgs>
    tbl_filmes_ator?: boolean | tbl_filmes$tbl_filmes_atorArgs<ExtArgs>
    tbl_filmes_diretor?: boolean | tbl_filmes$tbl_filmes_diretorArgs<ExtArgs>
    tbl_genero_filme?: boolean | tbl_filmes$tbl_genero_filmeArgs<ExtArgs>
    _count?: boolean | Tbl_filmesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_filmes"]>

  export type tbl_filmesSelectScalar = {
    id?: boolean
    nome?: boolean
    sinopse?: boolean
    duracao?: boolean
    data_lancamento?: boolean
    data_relancamento?: boolean
    foto_capa?: boolean
    valor_unitario?: boolean
    id_classificacao?: boolean
  }

  export type tbl_filmesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_classificacoes?: boolean | tbl_classificacoesDefaultArgs<ExtArgs>
    tbl_filmes_ator?: boolean | tbl_filmes$tbl_filmes_atorArgs<ExtArgs>
    tbl_filmes_diretor?: boolean | tbl_filmes$tbl_filmes_diretorArgs<ExtArgs>
    tbl_genero_filme?: boolean | tbl_filmes$tbl_genero_filmeArgs<ExtArgs>
    _count?: boolean | Tbl_filmesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_filmesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_filmes"
    objects: {
      tbl_classificacoes: Prisma.$tbl_classificacoesPayload<ExtArgs>
      tbl_filmes_ator: Prisma.$tbl_filmes_atorPayload<ExtArgs>[]
      tbl_filmes_diretor: Prisma.$tbl_filmes_diretorPayload<ExtArgs>[]
      tbl_genero_filme: Prisma.$tbl_genero_filmePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      sinopse: string
      duracao: Date
      data_lancamento: Date
      data_relancamento: Date | null
      foto_capa: string
      valor_unitario: number | null
      id_classificacao: number
    }, ExtArgs["result"]["tbl_filmes"]>
    composites: {}
  }


  type tbl_filmesGetPayload<S extends boolean | null | undefined | tbl_filmesDefaultArgs> = $Result.GetResult<Prisma.$tbl_filmesPayload, S>

  type tbl_filmesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_filmesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_filmesCountAggregateInputType | true
    }

  export interface tbl_filmesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_filmes'], meta: { name: 'tbl_filmes' } }
    /**
     * Find zero or one Tbl_filmes that matches the filter.
     * @param {tbl_filmesFindUniqueArgs} args - Arguments to find a Tbl_filmes
     * @example
     * // Get one Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_filmesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmesFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_filmes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_filmesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_filmes
     * @example
     * // Get one Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_filmesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_filmes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmesFindFirstArgs} args - Arguments to find a Tbl_filmes
     * @example
     * // Get one Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_filmesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmesFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_filmes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmesFindFirstOrThrowArgs} args - Arguments to find a Tbl_filmes
     * @example
     * // Get one Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_filmesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_filmes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.findMany()
     * 
     * // Get first 10 Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_filmesWithIdOnly = await prisma.tbl_filmes.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_filmesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_filmes.
     * @param {tbl_filmesCreateArgs} args - Arguments to create a Tbl_filmes.
     * @example
     * // Create one Tbl_filmes
     * const Tbl_filmes = await prisma.tbl_filmes.create({
     *   data: {
     *     // ... data to create a Tbl_filmes
     *   }
     * })
     * 
    **/
    create<T extends tbl_filmesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmesCreateArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_filmes.
     *     @param {tbl_filmesCreateManyArgs} args - Arguments to create many Tbl_filmes.
     *     @example
     *     // Create many Tbl_filmes
     *     const tbl_filmes = await prisma.tbl_filmes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_filmesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_filmes.
     * @param {tbl_filmesDeleteArgs} args - Arguments to delete one Tbl_filmes.
     * @example
     * // Delete one Tbl_filmes
     * const Tbl_filmes = await prisma.tbl_filmes.delete({
     *   where: {
     *     // ... filter to delete one Tbl_filmes
     *   }
     * })
     * 
    **/
    delete<T extends tbl_filmesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmesDeleteArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_filmes.
     * @param {tbl_filmesUpdateArgs} args - Arguments to update one Tbl_filmes.
     * @example
     * // Update one Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_filmesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmesUpdateArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_filmes.
     * @param {tbl_filmesDeleteManyArgs} args - Arguments to filter Tbl_filmes to delete.
     * @example
     * // Delete a few Tbl_filmes
     * const { count } = await prisma.tbl_filmes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_filmesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_filmes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_filmesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_filmes.
     * @param {tbl_filmesUpsertArgs} args - Arguments to update or create a Tbl_filmes.
     * @example
     * // Update or create a Tbl_filmes
     * const tbl_filmes = await prisma.tbl_filmes.upsert({
     *   create: {
     *     // ... data to create a Tbl_filmes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_filmes we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_filmesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmesUpsertArgs<ExtArgs>>
    ): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_filmes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmesCountArgs} args - Arguments to filter Tbl_filmes to count.
     * @example
     * // Count the number of Tbl_filmes
     * const count = await prisma.tbl_filmes.count({
     *   where: {
     *     // ... the filter for the Tbl_filmes we want to count
     *   }
     * })
    **/
    count<T extends tbl_filmesCountArgs>(
      args?: Subset<T, tbl_filmesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_filmesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_filmes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_filmesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_filmesAggregateArgs>(args: Subset<T, Tbl_filmesAggregateArgs>): Prisma.PrismaPromise<GetTbl_filmesAggregateType<T>>

    /**
     * Group by Tbl_filmes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_filmesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_filmesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_filmesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_filmesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_filmesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_filmes model
   */
  readonly fields: tbl_filmesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_filmes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_filmesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_classificacoes<T extends tbl_classificacoesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_classificacoesDefaultArgs<ExtArgs>>): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_filmes_ator<T extends tbl_filmes$tbl_filmes_atorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_filmes$tbl_filmes_atorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_filmes_diretor<T extends tbl_filmes$tbl_filmes_diretorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_filmes$tbl_filmes_diretorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_genero_filme<T extends tbl_filmes$tbl_genero_filmeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_filmes$tbl_genero_filmeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_filmes model
   */ 
  interface tbl_filmesFieldRefs {
    readonly id: FieldRef<"tbl_filmes", 'Int'>
    readonly nome: FieldRef<"tbl_filmes", 'String'>
    readonly sinopse: FieldRef<"tbl_filmes", 'String'>
    readonly duracao: FieldRef<"tbl_filmes", 'DateTime'>
    readonly data_lancamento: FieldRef<"tbl_filmes", 'DateTime'>
    readonly data_relancamento: FieldRef<"tbl_filmes", 'DateTime'>
    readonly foto_capa: FieldRef<"tbl_filmes", 'String'>
    readonly valor_unitario: FieldRef<"tbl_filmes", 'Float'>
    readonly id_classificacao: FieldRef<"tbl_filmes", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_filmes findUnique
   */
  export type tbl_filmesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes to fetch.
     */
    where: tbl_filmesWhereUniqueInput
  }


  /**
   * tbl_filmes findUniqueOrThrow
   */
  export type tbl_filmesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes to fetch.
     */
    where: tbl_filmesWhereUniqueInput
  }


  /**
   * tbl_filmes findFirst
   */
  export type tbl_filmesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes to fetch.
     */
    where?: tbl_filmesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes to fetch.
     */
    orderBy?: tbl_filmesOrderByWithRelationInput | tbl_filmesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_filmes.
     */
    cursor?: tbl_filmesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_filmes.
     */
    distinct?: Tbl_filmesScalarFieldEnum | Tbl_filmesScalarFieldEnum[]
  }


  /**
   * tbl_filmes findFirstOrThrow
   */
  export type tbl_filmesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes to fetch.
     */
    where?: tbl_filmesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes to fetch.
     */
    orderBy?: tbl_filmesOrderByWithRelationInput | tbl_filmesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_filmes.
     */
    cursor?: tbl_filmesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_filmes.
     */
    distinct?: Tbl_filmesScalarFieldEnum | Tbl_filmesScalarFieldEnum[]
  }


  /**
   * tbl_filmes findMany
   */
  export type tbl_filmesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes to fetch.
     */
    where?: tbl_filmesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes to fetch.
     */
    orderBy?: tbl_filmesOrderByWithRelationInput | tbl_filmesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_filmes.
     */
    cursor?: tbl_filmesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes.
     */
    skip?: number
    distinct?: Tbl_filmesScalarFieldEnum | Tbl_filmesScalarFieldEnum[]
  }


  /**
   * tbl_filmes create
   */
  export type tbl_filmesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_filmes.
     */
    data: XOR<tbl_filmesCreateInput, tbl_filmesUncheckedCreateInput>
  }


  /**
   * tbl_filmes createMany
   */
  export type tbl_filmesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_filmes.
     */
    data: tbl_filmesCreateManyInput | tbl_filmesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_filmes update
   */
  export type tbl_filmesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_filmes.
     */
    data: XOR<tbl_filmesUpdateInput, tbl_filmesUncheckedUpdateInput>
    /**
     * Choose, which tbl_filmes to update.
     */
    where: tbl_filmesWhereUniqueInput
  }


  /**
   * tbl_filmes updateMany
   */
  export type tbl_filmesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_filmes.
     */
    data: XOR<tbl_filmesUpdateManyMutationInput, tbl_filmesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_filmes to update
     */
    where?: tbl_filmesWhereInput
  }


  /**
   * tbl_filmes upsert
   */
  export type tbl_filmesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_filmes to update in case it exists.
     */
    where: tbl_filmesWhereUniqueInput
    /**
     * In case the tbl_filmes found by the `where` argument doesn't exist, create a new tbl_filmes with this data.
     */
    create: XOR<tbl_filmesCreateInput, tbl_filmesUncheckedCreateInput>
    /**
     * In case the tbl_filmes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_filmesUpdateInput, tbl_filmesUncheckedUpdateInput>
  }


  /**
   * tbl_filmes delete
   */
  export type tbl_filmesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    /**
     * Filter which tbl_filmes to delete.
     */
    where: tbl_filmesWhereUniqueInput
  }


  /**
   * tbl_filmes deleteMany
   */
  export type tbl_filmesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_filmes to delete
     */
    where?: tbl_filmesWhereInput
  }


  /**
   * tbl_filmes.tbl_filmes_ator
   */
  export type tbl_filmes$tbl_filmes_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    where?: tbl_filmes_atorWhereInput
    orderBy?: tbl_filmes_atorOrderByWithRelationInput | tbl_filmes_atorOrderByWithRelationInput[]
    cursor?: tbl_filmes_atorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_filmes_atorScalarFieldEnum | Tbl_filmes_atorScalarFieldEnum[]
  }


  /**
   * tbl_filmes.tbl_filmes_diretor
   */
  export type tbl_filmes$tbl_filmes_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    where?: tbl_filmes_diretorWhereInput
    orderBy?: tbl_filmes_diretorOrderByWithRelationInput | tbl_filmes_diretorOrderByWithRelationInput[]
    cursor?: tbl_filmes_diretorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_filmes_diretorScalarFieldEnum | Tbl_filmes_diretorScalarFieldEnum[]
  }


  /**
   * tbl_filmes.tbl_genero_filme
   */
  export type tbl_filmes$tbl_genero_filmeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    where?: tbl_genero_filmeWhereInput
    orderBy?: tbl_genero_filmeOrderByWithRelationInput | tbl_genero_filmeOrderByWithRelationInput[]
    cursor?: tbl_genero_filmeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_genero_filmeScalarFieldEnum | Tbl_genero_filmeScalarFieldEnum[]
  }


  /**
   * tbl_filmes without action
   */
  export type tbl_filmesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
  }



  /**
   * Model tbl_atores
   */

  export type AggregateTbl_atores = {
    _count: Tbl_atoresCountAggregateOutputType | null
    _avg: Tbl_atoresAvgAggregateOutputType | null
    _sum: Tbl_atoresSumAggregateOutputType | null
    _min: Tbl_atoresMinAggregateOutputType | null
    _max: Tbl_atoresMaxAggregateOutputType | null
  }

  export type Tbl_atoresAvgAggregateOutputType = {
    id: number | null
    id_sexo: number | null
  }

  export type Tbl_atoresSumAggregateOutputType = {
    id: number | null
    id_sexo: number | null
  }

  export type Tbl_atoresMinAggregateOutputType = {
    id: number | null
    nome: string | null
    foto_ator: string | null
    dt_nasc: Date | null
    dt_falec: Date | null
    sobre: string | null
    id_sexo: number | null
  }

  export type Tbl_atoresMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    foto_ator: string | null
    dt_nasc: Date | null
    dt_falec: Date | null
    sobre: string | null
    id_sexo: number | null
  }

  export type Tbl_atoresCountAggregateOutputType = {
    id: number
    nome: number
    foto_ator: number
    dt_nasc: number
    dt_falec: number
    sobre: number
    id_sexo: number
    _all: number
  }


  export type Tbl_atoresAvgAggregateInputType = {
    id?: true
    id_sexo?: true
  }

  export type Tbl_atoresSumAggregateInputType = {
    id?: true
    id_sexo?: true
  }

  export type Tbl_atoresMinAggregateInputType = {
    id?: true
    nome?: true
    foto_ator?: true
    dt_nasc?: true
    dt_falec?: true
    sobre?: true
    id_sexo?: true
  }

  export type Tbl_atoresMaxAggregateInputType = {
    id?: true
    nome?: true
    foto_ator?: true
    dt_nasc?: true
    dt_falec?: true
    sobre?: true
    id_sexo?: true
  }

  export type Tbl_atoresCountAggregateInputType = {
    id?: true
    nome?: true
    foto_ator?: true
    dt_nasc?: true
    dt_falec?: true
    sobre?: true
    id_sexo?: true
    _all?: true
  }

  export type Tbl_atoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_atores to aggregate.
     */
    where?: tbl_atoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_atores to fetch.
     */
    orderBy?: tbl_atoresOrderByWithRelationInput | tbl_atoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_atoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_atores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_atores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_atores
    **/
    _count?: true | Tbl_atoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_atoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_atoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_atoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_atoresMaxAggregateInputType
  }

  export type GetTbl_atoresAggregateType<T extends Tbl_atoresAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_atores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_atores[P]>
      : GetScalarType<T[P], AggregateTbl_atores[P]>
  }




  export type tbl_atoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_atoresWhereInput
    orderBy?: tbl_atoresOrderByWithAggregationInput | tbl_atoresOrderByWithAggregationInput[]
    by: Tbl_atoresScalarFieldEnum[] | Tbl_atoresScalarFieldEnum
    having?: tbl_atoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_atoresCountAggregateInputType | true
    _avg?: Tbl_atoresAvgAggregateInputType
    _sum?: Tbl_atoresSumAggregateInputType
    _min?: Tbl_atoresMinAggregateInputType
    _max?: Tbl_atoresMaxAggregateInputType
  }

  export type Tbl_atoresGroupByOutputType = {
    id: number
    nome: string
    foto_ator: string
    dt_nasc: Date
    dt_falec: Date | null
    sobre: string | null
    id_sexo: number
    _count: Tbl_atoresCountAggregateOutputType | null
    _avg: Tbl_atoresAvgAggregateOutputType | null
    _sum: Tbl_atoresSumAggregateOutputType | null
    _min: Tbl_atoresMinAggregateOutputType | null
    _max: Tbl_atoresMaxAggregateOutputType | null
  }

  type GetTbl_atoresGroupByPayload<T extends tbl_atoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_atoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_atoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_atoresGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_atoresGroupByOutputType[P]>
        }
      >
    >


  export type tbl_atoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    foto_ator?: boolean
    dt_nasc?: boolean
    dt_falec?: boolean
    sobre?: boolean
    id_sexo?: boolean
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    tbl_filmes_ator?: boolean | tbl_atores$tbl_filmes_atorArgs<ExtArgs>
    tbl_nacionalidades_ator?: boolean | tbl_atores$tbl_nacionalidades_atorArgs<ExtArgs>
    _count?: boolean | Tbl_atoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_atores"]>

  export type tbl_atoresSelectScalar = {
    id?: boolean
    nome?: boolean
    foto_ator?: boolean
    dt_nasc?: boolean
    dt_falec?: boolean
    sobre?: boolean
    id_sexo?: boolean
  }

  export type tbl_atoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    tbl_filmes_ator?: boolean | tbl_atores$tbl_filmes_atorArgs<ExtArgs>
    tbl_nacionalidades_ator?: boolean | tbl_atores$tbl_nacionalidades_atorArgs<ExtArgs>
    _count?: boolean | Tbl_atoresCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_atoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_atores"
    objects: {
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs>
      tbl_filmes_ator: Prisma.$tbl_filmes_atorPayload<ExtArgs>[]
      tbl_nacionalidades_ator: Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      foto_ator: string
      dt_nasc: Date
      dt_falec: Date | null
      sobre: string | null
      id_sexo: number
    }, ExtArgs["result"]["tbl_atores"]>
    composites: {}
  }


  type tbl_atoresGetPayload<S extends boolean | null | undefined | tbl_atoresDefaultArgs> = $Result.GetResult<Prisma.$tbl_atoresPayload, S>

  type tbl_atoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_atoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_atoresCountAggregateInputType | true
    }

  export interface tbl_atoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_atores'], meta: { name: 'tbl_atores' } }
    /**
     * Find zero or one Tbl_atores that matches the filter.
     * @param {tbl_atoresFindUniqueArgs} args - Arguments to find a Tbl_atores
     * @example
     * // Get one Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_atoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_atoresFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_atores that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_atoresFindUniqueOrThrowArgs} args - Arguments to find a Tbl_atores
     * @example
     * // Get one Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_atoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_atoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_atores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_atoresFindFirstArgs} args - Arguments to find a Tbl_atores
     * @example
     * // Get one Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_atoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_atoresFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_atores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_atoresFindFirstOrThrowArgs} args - Arguments to find a Tbl_atores
     * @example
     * // Get one Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_atoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_atoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_atores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_atoresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.findMany()
     * 
     * // Get first 10 Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_atoresWithIdOnly = await prisma.tbl_atores.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_atoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_atoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_atores.
     * @param {tbl_atoresCreateArgs} args - Arguments to create a Tbl_atores.
     * @example
     * // Create one Tbl_atores
     * const Tbl_atores = await prisma.tbl_atores.create({
     *   data: {
     *     // ... data to create a Tbl_atores
     *   }
     * })
     * 
    **/
    create<T extends tbl_atoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_atoresCreateArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_atores.
     *     @param {tbl_atoresCreateManyArgs} args - Arguments to create many Tbl_atores.
     *     @example
     *     // Create many Tbl_atores
     *     const tbl_atores = await prisma.tbl_atores.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_atoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_atoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_atores.
     * @param {tbl_atoresDeleteArgs} args - Arguments to delete one Tbl_atores.
     * @example
     * // Delete one Tbl_atores
     * const Tbl_atores = await prisma.tbl_atores.delete({
     *   where: {
     *     // ... filter to delete one Tbl_atores
     *   }
     * })
     * 
    **/
    delete<T extends tbl_atoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_atoresDeleteArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_atores.
     * @param {tbl_atoresUpdateArgs} args - Arguments to update one Tbl_atores.
     * @example
     * // Update one Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_atoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_atoresUpdateArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_atores.
     * @param {tbl_atoresDeleteManyArgs} args - Arguments to filter Tbl_atores to delete.
     * @example
     * // Delete a few Tbl_atores
     * const { count } = await prisma.tbl_atores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_atoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_atoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_atores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_atoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_atoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_atoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_atores.
     * @param {tbl_atoresUpsertArgs} args - Arguments to update or create a Tbl_atores.
     * @example
     * // Update or create a Tbl_atores
     * const tbl_atores = await prisma.tbl_atores.upsert({
     *   create: {
     *     // ... data to create a Tbl_atores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_atores we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_atoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_atoresUpsertArgs<ExtArgs>>
    ): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_atores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_atoresCountArgs} args - Arguments to filter Tbl_atores to count.
     * @example
     * // Count the number of Tbl_atores
     * const count = await prisma.tbl_atores.count({
     *   where: {
     *     // ... the filter for the Tbl_atores we want to count
     *   }
     * })
    **/
    count<T extends tbl_atoresCountArgs>(
      args?: Subset<T, tbl_atoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_atoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_atores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_atoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_atoresAggregateArgs>(args: Subset<T, Tbl_atoresAggregateArgs>): Prisma.PrismaPromise<GetTbl_atoresAggregateType<T>>

    /**
     * Group by Tbl_atores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_atoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_atoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_atoresGroupByArgs['orderBy'] }
        : { orderBy?: tbl_atoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_atoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_atoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_atores model
   */
  readonly fields: tbl_atoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_atores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_atoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_sexo<T extends tbl_sexoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexoDefaultArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_filmes_ator<T extends tbl_atores$tbl_filmes_atorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_atores$tbl_filmes_atorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_nacionalidades_ator<T extends tbl_atores$tbl_nacionalidades_atorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_atores$tbl_nacionalidades_atorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_atores model
   */ 
  interface tbl_atoresFieldRefs {
    readonly id: FieldRef<"tbl_atores", 'Int'>
    readonly nome: FieldRef<"tbl_atores", 'String'>
    readonly foto_ator: FieldRef<"tbl_atores", 'String'>
    readonly dt_nasc: FieldRef<"tbl_atores", 'DateTime'>
    readonly dt_falec: FieldRef<"tbl_atores", 'DateTime'>
    readonly sobre: FieldRef<"tbl_atores", 'String'>
    readonly id_sexo: FieldRef<"tbl_atores", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_atores findUnique
   */
  export type tbl_atoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_atores to fetch.
     */
    where: tbl_atoresWhereUniqueInput
  }


  /**
   * tbl_atores findUniqueOrThrow
   */
  export type tbl_atoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_atores to fetch.
     */
    where: tbl_atoresWhereUniqueInput
  }


  /**
   * tbl_atores findFirst
   */
  export type tbl_atoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_atores to fetch.
     */
    where?: tbl_atoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_atores to fetch.
     */
    orderBy?: tbl_atoresOrderByWithRelationInput | tbl_atoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_atores.
     */
    cursor?: tbl_atoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_atores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_atores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_atores.
     */
    distinct?: Tbl_atoresScalarFieldEnum | Tbl_atoresScalarFieldEnum[]
  }


  /**
   * tbl_atores findFirstOrThrow
   */
  export type tbl_atoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_atores to fetch.
     */
    where?: tbl_atoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_atores to fetch.
     */
    orderBy?: tbl_atoresOrderByWithRelationInput | tbl_atoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_atores.
     */
    cursor?: tbl_atoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_atores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_atores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_atores.
     */
    distinct?: Tbl_atoresScalarFieldEnum | Tbl_atoresScalarFieldEnum[]
  }


  /**
   * tbl_atores findMany
   */
  export type tbl_atoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_atores to fetch.
     */
    where?: tbl_atoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_atores to fetch.
     */
    orderBy?: tbl_atoresOrderByWithRelationInput | tbl_atoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_atores.
     */
    cursor?: tbl_atoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_atores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_atores.
     */
    skip?: number
    distinct?: Tbl_atoresScalarFieldEnum | Tbl_atoresScalarFieldEnum[]
  }


  /**
   * tbl_atores create
   */
  export type tbl_atoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_atores.
     */
    data: XOR<tbl_atoresCreateInput, tbl_atoresUncheckedCreateInput>
  }


  /**
   * tbl_atores createMany
   */
  export type tbl_atoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_atores.
     */
    data: tbl_atoresCreateManyInput | tbl_atoresCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_atores update
   */
  export type tbl_atoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_atores.
     */
    data: XOR<tbl_atoresUpdateInput, tbl_atoresUncheckedUpdateInput>
    /**
     * Choose, which tbl_atores to update.
     */
    where: tbl_atoresWhereUniqueInput
  }


  /**
   * tbl_atores updateMany
   */
  export type tbl_atoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_atores.
     */
    data: XOR<tbl_atoresUpdateManyMutationInput, tbl_atoresUncheckedUpdateManyInput>
    /**
     * Filter which tbl_atores to update
     */
    where?: tbl_atoresWhereInput
  }


  /**
   * tbl_atores upsert
   */
  export type tbl_atoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_atores to update in case it exists.
     */
    where: tbl_atoresWhereUniqueInput
    /**
     * In case the tbl_atores found by the `where` argument doesn't exist, create a new tbl_atores with this data.
     */
    create: XOR<tbl_atoresCreateInput, tbl_atoresUncheckedCreateInput>
    /**
     * In case the tbl_atores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_atoresUpdateInput, tbl_atoresUncheckedUpdateInput>
  }


  /**
   * tbl_atores delete
   */
  export type tbl_atoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    /**
     * Filter which tbl_atores to delete.
     */
    where: tbl_atoresWhereUniqueInput
  }


  /**
   * tbl_atores deleteMany
   */
  export type tbl_atoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_atores to delete
     */
    where?: tbl_atoresWhereInput
  }


  /**
   * tbl_atores.tbl_filmes_ator
   */
  export type tbl_atores$tbl_filmes_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    where?: tbl_filmes_atorWhereInput
    orderBy?: tbl_filmes_atorOrderByWithRelationInput | tbl_filmes_atorOrderByWithRelationInput[]
    cursor?: tbl_filmes_atorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_filmes_atorScalarFieldEnum | Tbl_filmes_atorScalarFieldEnum[]
  }


  /**
   * tbl_atores.tbl_nacionalidades_ator
   */
  export type tbl_atores$tbl_nacionalidades_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    where?: tbl_nacionalidades_atorWhereInput
    orderBy?: tbl_nacionalidades_atorOrderByWithRelationInput | tbl_nacionalidades_atorOrderByWithRelationInput[]
    cursor?: tbl_nacionalidades_atorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_nacionalidades_atorScalarFieldEnum | Tbl_nacionalidades_atorScalarFieldEnum[]
  }


  /**
   * tbl_atores without action
   */
  export type tbl_atoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
  }



  /**
   * Model tbl_classificacoes
   */

  export type AggregateTbl_classificacoes = {
    _count: Tbl_classificacoesCountAggregateOutputType | null
    _avg: Tbl_classificacoesAvgAggregateOutputType | null
    _sum: Tbl_classificacoesSumAggregateOutputType | null
    _min: Tbl_classificacoesMinAggregateOutputType | null
    _max: Tbl_classificacoesMaxAggregateOutputType | null
  }

  export type Tbl_classificacoesAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_classificacoesSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_classificacoesMinAggregateOutputType = {
    id: number | null
    sigla: string | null
    classificacao: string | null
    legenda: string | null
    imagem: string | null
  }

  export type Tbl_classificacoesMaxAggregateOutputType = {
    id: number | null
    sigla: string | null
    classificacao: string | null
    legenda: string | null
    imagem: string | null
  }

  export type Tbl_classificacoesCountAggregateOutputType = {
    id: number
    sigla: number
    classificacao: number
    legenda: number
    imagem: number
    _all: number
  }


  export type Tbl_classificacoesAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_classificacoesSumAggregateInputType = {
    id?: true
  }

  export type Tbl_classificacoesMinAggregateInputType = {
    id?: true
    sigla?: true
    classificacao?: true
    legenda?: true
    imagem?: true
  }

  export type Tbl_classificacoesMaxAggregateInputType = {
    id?: true
    sigla?: true
    classificacao?: true
    legenda?: true
    imagem?: true
  }

  export type Tbl_classificacoesCountAggregateInputType = {
    id?: true
    sigla?: true
    classificacao?: true
    legenda?: true
    imagem?: true
    _all?: true
  }

  export type Tbl_classificacoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_classificacoes to aggregate.
     */
    where?: tbl_classificacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_classificacoes to fetch.
     */
    orderBy?: tbl_classificacoesOrderByWithRelationInput | tbl_classificacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_classificacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_classificacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_classificacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_classificacoes
    **/
    _count?: true | Tbl_classificacoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_classificacoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_classificacoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_classificacoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_classificacoesMaxAggregateInputType
  }

  export type GetTbl_classificacoesAggregateType<T extends Tbl_classificacoesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_classificacoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_classificacoes[P]>
      : GetScalarType<T[P], AggregateTbl_classificacoes[P]>
  }




  export type tbl_classificacoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_classificacoesWhereInput
    orderBy?: tbl_classificacoesOrderByWithAggregationInput | tbl_classificacoesOrderByWithAggregationInput[]
    by: Tbl_classificacoesScalarFieldEnum[] | Tbl_classificacoesScalarFieldEnum
    having?: tbl_classificacoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_classificacoesCountAggregateInputType | true
    _avg?: Tbl_classificacoesAvgAggregateInputType
    _sum?: Tbl_classificacoesSumAggregateInputType
    _min?: Tbl_classificacoesMinAggregateInputType
    _max?: Tbl_classificacoesMaxAggregateInputType
  }

  export type Tbl_classificacoesGroupByOutputType = {
    id: number
    sigla: string
    classificacao: string
    legenda: string
    imagem: string
    _count: Tbl_classificacoesCountAggregateOutputType | null
    _avg: Tbl_classificacoesAvgAggregateOutputType | null
    _sum: Tbl_classificacoesSumAggregateOutputType | null
    _min: Tbl_classificacoesMinAggregateOutputType | null
    _max: Tbl_classificacoesMaxAggregateOutputType | null
  }

  type GetTbl_classificacoesGroupByPayload<T extends tbl_classificacoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_classificacoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_classificacoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_classificacoesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_classificacoesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_classificacoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sigla?: boolean
    classificacao?: boolean
    legenda?: boolean
    imagem?: boolean
    tbl_filmes?: boolean | tbl_classificacoes$tbl_filmesArgs<ExtArgs>
    _count?: boolean | Tbl_classificacoesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_classificacoes"]>

  export type tbl_classificacoesSelectScalar = {
    id?: boolean
    sigla?: boolean
    classificacao?: boolean
    legenda?: boolean
    imagem?: boolean
  }

  export type tbl_classificacoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_filmes?: boolean | tbl_classificacoes$tbl_filmesArgs<ExtArgs>
    _count?: boolean | Tbl_classificacoesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_classificacoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_classificacoes"
    objects: {
      tbl_filmes: Prisma.$tbl_filmesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sigla: string
      classificacao: string
      legenda: string
      imagem: string
    }, ExtArgs["result"]["tbl_classificacoes"]>
    composites: {}
  }


  type tbl_classificacoesGetPayload<S extends boolean | null | undefined | tbl_classificacoesDefaultArgs> = $Result.GetResult<Prisma.$tbl_classificacoesPayload, S>

  type tbl_classificacoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_classificacoesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_classificacoesCountAggregateInputType | true
    }

  export interface tbl_classificacoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_classificacoes'], meta: { name: 'tbl_classificacoes' } }
    /**
     * Find zero or one Tbl_classificacoes that matches the filter.
     * @param {tbl_classificacoesFindUniqueArgs} args - Arguments to find a Tbl_classificacoes
     * @example
     * // Get one Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_classificacoesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_classificacoesFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_classificacoes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_classificacoesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_classificacoes
     * @example
     * // Get one Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_classificacoesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_classificacoesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_classificacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_classificacoesFindFirstArgs} args - Arguments to find a Tbl_classificacoes
     * @example
     * // Get one Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_classificacoesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_classificacoesFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_classificacoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_classificacoesFindFirstOrThrowArgs} args - Arguments to find a Tbl_classificacoes
     * @example
     * // Get one Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_classificacoesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_classificacoesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_classificacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_classificacoesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.findMany()
     * 
     * // Get first 10 Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_classificacoesWithIdOnly = await prisma.tbl_classificacoes.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_classificacoesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_classificacoesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_classificacoes.
     * @param {tbl_classificacoesCreateArgs} args - Arguments to create a Tbl_classificacoes.
     * @example
     * // Create one Tbl_classificacoes
     * const Tbl_classificacoes = await prisma.tbl_classificacoes.create({
     *   data: {
     *     // ... data to create a Tbl_classificacoes
     *   }
     * })
     * 
    **/
    create<T extends tbl_classificacoesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_classificacoesCreateArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_classificacoes.
     *     @param {tbl_classificacoesCreateManyArgs} args - Arguments to create many Tbl_classificacoes.
     *     @example
     *     // Create many Tbl_classificacoes
     *     const tbl_classificacoes = await prisma.tbl_classificacoes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_classificacoesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_classificacoesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_classificacoes.
     * @param {tbl_classificacoesDeleteArgs} args - Arguments to delete one Tbl_classificacoes.
     * @example
     * // Delete one Tbl_classificacoes
     * const Tbl_classificacoes = await prisma.tbl_classificacoes.delete({
     *   where: {
     *     // ... filter to delete one Tbl_classificacoes
     *   }
     * })
     * 
    **/
    delete<T extends tbl_classificacoesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_classificacoesDeleteArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_classificacoes.
     * @param {tbl_classificacoesUpdateArgs} args - Arguments to update one Tbl_classificacoes.
     * @example
     * // Update one Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_classificacoesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_classificacoesUpdateArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_classificacoes.
     * @param {tbl_classificacoesDeleteManyArgs} args - Arguments to filter Tbl_classificacoes to delete.
     * @example
     * // Delete a few Tbl_classificacoes
     * const { count } = await prisma.tbl_classificacoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_classificacoesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_classificacoesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_classificacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_classificacoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_classificacoesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_classificacoesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_classificacoes.
     * @param {tbl_classificacoesUpsertArgs} args - Arguments to update or create a Tbl_classificacoes.
     * @example
     * // Update or create a Tbl_classificacoes
     * const tbl_classificacoes = await prisma.tbl_classificacoes.upsert({
     *   create: {
     *     // ... data to create a Tbl_classificacoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_classificacoes we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_classificacoesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_classificacoesUpsertArgs<ExtArgs>>
    ): Prisma__tbl_classificacoesClient<$Result.GetResult<Prisma.$tbl_classificacoesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_classificacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_classificacoesCountArgs} args - Arguments to filter Tbl_classificacoes to count.
     * @example
     * // Count the number of Tbl_classificacoes
     * const count = await prisma.tbl_classificacoes.count({
     *   where: {
     *     // ... the filter for the Tbl_classificacoes we want to count
     *   }
     * })
    **/
    count<T extends tbl_classificacoesCountArgs>(
      args?: Subset<T, tbl_classificacoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_classificacoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_classificacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_classificacoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_classificacoesAggregateArgs>(args: Subset<T, Tbl_classificacoesAggregateArgs>): Prisma.PrismaPromise<GetTbl_classificacoesAggregateType<T>>

    /**
     * Group by Tbl_classificacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_classificacoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_classificacoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_classificacoesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_classificacoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_classificacoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_classificacoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_classificacoes model
   */
  readonly fields: tbl_classificacoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_classificacoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_classificacoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_filmes<T extends tbl_classificacoes$tbl_filmesArgs<ExtArgs> = {}>(args?: Subset<T, tbl_classificacoes$tbl_filmesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_classificacoes model
   */ 
  interface tbl_classificacoesFieldRefs {
    readonly id: FieldRef<"tbl_classificacoes", 'Int'>
    readonly sigla: FieldRef<"tbl_classificacoes", 'String'>
    readonly classificacao: FieldRef<"tbl_classificacoes", 'String'>
    readonly legenda: FieldRef<"tbl_classificacoes", 'String'>
    readonly imagem: FieldRef<"tbl_classificacoes", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbl_classificacoes findUnique
   */
  export type tbl_classificacoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_classificacoes to fetch.
     */
    where: tbl_classificacoesWhereUniqueInput
  }


  /**
   * tbl_classificacoes findUniqueOrThrow
   */
  export type tbl_classificacoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_classificacoes to fetch.
     */
    where: tbl_classificacoesWhereUniqueInput
  }


  /**
   * tbl_classificacoes findFirst
   */
  export type tbl_classificacoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_classificacoes to fetch.
     */
    where?: tbl_classificacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_classificacoes to fetch.
     */
    orderBy?: tbl_classificacoesOrderByWithRelationInput | tbl_classificacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_classificacoes.
     */
    cursor?: tbl_classificacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_classificacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_classificacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_classificacoes.
     */
    distinct?: Tbl_classificacoesScalarFieldEnum | Tbl_classificacoesScalarFieldEnum[]
  }


  /**
   * tbl_classificacoes findFirstOrThrow
   */
  export type tbl_classificacoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_classificacoes to fetch.
     */
    where?: tbl_classificacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_classificacoes to fetch.
     */
    orderBy?: tbl_classificacoesOrderByWithRelationInput | tbl_classificacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_classificacoes.
     */
    cursor?: tbl_classificacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_classificacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_classificacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_classificacoes.
     */
    distinct?: Tbl_classificacoesScalarFieldEnum | Tbl_classificacoesScalarFieldEnum[]
  }


  /**
   * tbl_classificacoes findMany
   */
  export type tbl_classificacoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_classificacoes to fetch.
     */
    where?: tbl_classificacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_classificacoes to fetch.
     */
    orderBy?: tbl_classificacoesOrderByWithRelationInput | tbl_classificacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_classificacoes.
     */
    cursor?: tbl_classificacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_classificacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_classificacoes.
     */
    skip?: number
    distinct?: Tbl_classificacoesScalarFieldEnum | Tbl_classificacoesScalarFieldEnum[]
  }


  /**
   * tbl_classificacoes create
   */
  export type tbl_classificacoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_classificacoes.
     */
    data: XOR<tbl_classificacoesCreateInput, tbl_classificacoesUncheckedCreateInput>
  }


  /**
   * tbl_classificacoes createMany
   */
  export type tbl_classificacoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_classificacoes.
     */
    data: tbl_classificacoesCreateManyInput | tbl_classificacoesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_classificacoes update
   */
  export type tbl_classificacoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_classificacoes.
     */
    data: XOR<tbl_classificacoesUpdateInput, tbl_classificacoesUncheckedUpdateInput>
    /**
     * Choose, which tbl_classificacoes to update.
     */
    where: tbl_classificacoesWhereUniqueInput
  }


  /**
   * tbl_classificacoes updateMany
   */
  export type tbl_classificacoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_classificacoes.
     */
    data: XOR<tbl_classificacoesUpdateManyMutationInput, tbl_classificacoesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_classificacoes to update
     */
    where?: tbl_classificacoesWhereInput
  }


  /**
   * tbl_classificacoes upsert
   */
  export type tbl_classificacoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_classificacoes to update in case it exists.
     */
    where: tbl_classificacoesWhereUniqueInput
    /**
     * In case the tbl_classificacoes found by the `where` argument doesn't exist, create a new tbl_classificacoes with this data.
     */
    create: XOR<tbl_classificacoesCreateInput, tbl_classificacoesUncheckedCreateInput>
    /**
     * In case the tbl_classificacoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_classificacoesUpdateInput, tbl_classificacoesUncheckedUpdateInput>
  }


  /**
   * tbl_classificacoes delete
   */
  export type tbl_classificacoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
    /**
     * Filter which tbl_classificacoes to delete.
     */
    where: tbl_classificacoesWhereUniqueInput
  }


  /**
   * tbl_classificacoes deleteMany
   */
  export type tbl_classificacoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_classificacoes to delete
     */
    where?: tbl_classificacoesWhereInput
  }


  /**
   * tbl_classificacoes.tbl_filmes
   */
  export type tbl_classificacoes$tbl_filmesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes
     */
    select?: tbl_filmesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmesInclude<ExtArgs> | null
    where?: tbl_filmesWhereInput
    orderBy?: tbl_filmesOrderByWithRelationInput | tbl_filmesOrderByWithRelationInput[]
    cursor?: tbl_filmesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_filmesScalarFieldEnum | Tbl_filmesScalarFieldEnum[]
  }


  /**
   * tbl_classificacoes without action
   */
  export type tbl_classificacoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_classificacoes
     */
    select?: tbl_classificacoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_classificacoesInclude<ExtArgs> | null
  }



  /**
   * Model tbl_diretores
   */

  export type AggregateTbl_diretores = {
    _count: Tbl_diretoresCountAggregateOutputType | null
    _avg: Tbl_diretoresAvgAggregateOutputType | null
    _sum: Tbl_diretoresSumAggregateOutputType | null
    _min: Tbl_diretoresMinAggregateOutputType | null
    _max: Tbl_diretoresMaxAggregateOutputType | null
  }

  export type Tbl_diretoresAvgAggregateOutputType = {
    id: number | null
    id_sexo: number | null
  }

  export type Tbl_diretoresSumAggregateOutputType = {
    id: number | null
    id_sexo: number | null
  }

  export type Tbl_diretoresMinAggregateOutputType = {
    id: number | null
    nome: string | null
    foto_diretor: string | null
    dt_nasc: Date | null
    dt_falec: Date | null
    sobre: string | null
    id_sexo: number | null
  }

  export type Tbl_diretoresMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    foto_diretor: string | null
    dt_nasc: Date | null
    dt_falec: Date | null
    sobre: string | null
    id_sexo: number | null
  }

  export type Tbl_diretoresCountAggregateOutputType = {
    id: number
    nome: number
    foto_diretor: number
    dt_nasc: number
    dt_falec: number
    sobre: number
    id_sexo: number
    _all: number
  }


  export type Tbl_diretoresAvgAggregateInputType = {
    id?: true
    id_sexo?: true
  }

  export type Tbl_diretoresSumAggregateInputType = {
    id?: true
    id_sexo?: true
  }

  export type Tbl_diretoresMinAggregateInputType = {
    id?: true
    nome?: true
    foto_diretor?: true
    dt_nasc?: true
    dt_falec?: true
    sobre?: true
    id_sexo?: true
  }

  export type Tbl_diretoresMaxAggregateInputType = {
    id?: true
    nome?: true
    foto_diretor?: true
    dt_nasc?: true
    dt_falec?: true
    sobre?: true
    id_sexo?: true
  }

  export type Tbl_diretoresCountAggregateInputType = {
    id?: true
    nome?: true
    foto_diretor?: true
    dt_nasc?: true
    dt_falec?: true
    sobre?: true
    id_sexo?: true
    _all?: true
  }

  export type Tbl_diretoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_diretores to aggregate.
     */
    where?: tbl_diretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_diretores to fetch.
     */
    orderBy?: tbl_diretoresOrderByWithRelationInput | tbl_diretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_diretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_diretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_diretores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_diretores
    **/
    _count?: true | Tbl_diretoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_diretoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_diretoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_diretoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_diretoresMaxAggregateInputType
  }

  export type GetTbl_diretoresAggregateType<T extends Tbl_diretoresAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_diretores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_diretores[P]>
      : GetScalarType<T[P], AggregateTbl_diretores[P]>
  }




  export type tbl_diretoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_diretoresWhereInput
    orderBy?: tbl_diretoresOrderByWithAggregationInput | tbl_diretoresOrderByWithAggregationInput[]
    by: Tbl_diretoresScalarFieldEnum[] | Tbl_diretoresScalarFieldEnum
    having?: tbl_diretoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_diretoresCountAggregateInputType | true
    _avg?: Tbl_diretoresAvgAggregateInputType
    _sum?: Tbl_diretoresSumAggregateInputType
    _min?: Tbl_diretoresMinAggregateInputType
    _max?: Tbl_diretoresMaxAggregateInputType
  }

  export type Tbl_diretoresGroupByOutputType = {
    id: number
    nome: string
    foto_diretor: string
    dt_nasc: Date
    dt_falec: Date | null
    sobre: string | null
    id_sexo: number | null
    _count: Tbl_diretoresCountAggregateOutputType | null
    _avg: Tbl_diretoresAvgAggregateOutputType | null
    _sum: Tbl_diretoresSumAggregateOutputType | null
    _min: Tbl_diretoresMinAggregateOutputType | null
    _max: Tbl_diretoresMaxAggregateOutputType | null
  }

  type GetTbl_diretoresGroupByPayload<T extends tbl_diretoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_diretoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_diretoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_diretoresGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_diretoresGroupByOutputType[P]>
        }
      >
    >


  export type tbl_diretoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    foto_diretor?: boolean
    dt_nasc?: boolean
    dt_falec?: boolean
    sobre?: boolean
    id_sexo?: boolean
    tbl_sexo?: boolean | tbl_diretores$tbl_sexoArgs<ExtArgs>
    tbl_filmes_diretor?: boolean | tbl_diretores$tbl_filmes_diretorArgs<ExtArgs>
    tbl_nacionalidades_diretor?: boolean | tbl_diretores$tbl_nacionalidades_diretorArgs<ExtArgs>
    _count?: boolean | Tbl_diretoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_diretores"]>

  export type tbl_diretoresSelectScalar = {
    id?: boolean
    nome?: boolean
    foto_diretor?: boolean
    dt_nasc?: boolean
    dt_falec?: boolean
    sobre?: boolean
    id_sexo?: boolean
  }

  export type tbl_diretoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_sexo?: boolean | tbl_diretores$tbl_sexoArgs<ExtArgs>
    tbl_filmes_diretor?: boolean | tbl_diretores$tbl_filmes_diretorArgs<ExtArgs>
    tbl_nacionalidades_diretor?: boolean | tbl_diretores$tbl_nacionalidades_diretorArgs<ExtArgs>
    _count?: boolean | Tbl_diretoresCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_diretoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_diretores"
    objects: {
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs> | null
      tbl_filmes_diretor: Prisma.$tbl_filmes_diretorPayload<ExtArgs>[]
      tbl_nacionalidades_diretor: Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      foto_diretor: string
      dt_nasc: Date
      dt_falec: Date | null
      sobre: string | null
      id_sexo: number | null
    }, ExtArgs["result"]["tbl_diretores"]>
    composites: {}
  }


  type tbl_diretoresGetPayload<S extends boolean | null | undefined | tbl_diretoresDefaultArgs> = $Result.GetResult<Prisma.$tbl_diretoresPayload, S>

  type tbl_diretoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_diretoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_diretoresCountAggregateInputType | true
    }

  export interface tbl_diretoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_diretores'], meta: { name: 'tbl_diretores' } }
    /**
     * Find zero or one Tbl_diretores that matches the filter.
     * @param {tbl_diretoresFindUniqueArgs} args - Arguments to find a Tbl_diretores
     * @example
     * // Get one Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_diretoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_diretoresFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_diretores that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_diretoresFindUniqueOrThrowArgs} args - Arguments to find a Tbl_diretores
     * @example
     * // Get one Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_diretoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_diretoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_diretores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_diretoresFindFirstArgs} args - Arguments to find a Tbl_diretores
     * @example
     * // Get one Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_diretoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_diretoresFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_diretores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_diretoresFindFirstOrThrowArgs} args - Arguments to find a Tbl_diretores
     * @example
     * // Get one Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_diretoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_diretoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_diretores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_diretoresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.findMany()
     * 
     * // Get first 10 Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_diretoresWithIdOnly = await prisma.tbl_diretores.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_diretoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_diretoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_diretores.
     * @param {tbl_diretoresCreateArgs} args - Arguments to create a Tbl_diretores.
     * @example
     * // Create one Tbl_diretores
     * const Tbl_diretores = await prisma.tbl_diretores.create({
     *   data: {
     *     // ... data to create a Tbl_diretores
     *   }
     * })
     * 
    **/
    create<T extends tbl_diretoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_diretoresCreateArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_diretores.
     *     @param {tbl_diretoresCreateManyArgs} args - Arguments to create many Tbl_diretores.
     *     @example
     *     // Create many Tbl_diretores
     *     const tbl_diretores = await prisma.tbl_diretores.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_diretoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_diretoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_diretores.
     * @param {tbl_diretoresDeleteArgs} args - Arguments to delete one Tbl_diretores.
     * @example
     * // Delete one Tbl_diretores
     * const Tbl_diretores = await prisma.tbl_diretores.delete({
     *   where: {
     *     // ... filter to delete one Tbl_diretores
     *   }
     * })
     * 
    **/
    delete<T extends tbl_diretoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_diretoresDeleteArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_diretores.
     * @param {tbl_diretoresUpdateArgs} args - Arguments to update one Tbl_diretores.
     * @example
     * // Update one Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_diretoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_diretoresUpdateArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_diretores.
     * @param {tbl_diretoresDeleteManyArgs} args - Arguments to filter Tbl_diretores to delete.
     * @example
     * // Delete a few Tbl_diretores
     * const { count } = await prisma.tbl_diretores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_diretoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_diretoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_diretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_diretoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_diretoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_diretoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_diretores.
     * @param {tbl_diretoresUpsertArgs} args - Arguments to update or create a Tbl_diretores.
     * @example
     * // Update or create a Tbl_diretores
     * const tbl_diretores = await prisma.tbl_diretores.upsert({
     *   create: {
     *     // ... data to create a Tbl_diretores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_diretores we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_diretoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_diretoresUpsertArgs<ExtArgs>>
    ): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_diretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_diretoresCountArgs} args - Arguments to filter Tbl_diretores to count.
     * @example
     * // Count the number of Tbl_diretores
     * const count = await prisma.tbl_diretores.count({
     *   where: {
     *     // ... the filter for the Tbl_diretores we want to count
     *   }
     * })
    **/
    count<T extends tbl_diretoresCountArgs>(
      args?: Subset<T, tbl_diretoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_diretoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_diretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_diretoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_diretoresAggregateArgs>(args: Subset<T, Tbl_diretoresAggregateArgs>): Prisma.PrismaPromise<GetTbl_diretoresAggregateType<T>>

    /**
     * Group by Tbl_diretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_diretoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_diretoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_diretoresGroupByArgs['orderBy'] }
        : { orderBy?: tbl_diretoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_diretoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_diretoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_diretores model
   */
  readonly fields: tbl_diretoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_diretores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_diretoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_sexo<T extends tbl_diretores$tbl_sexoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_diretores$tbl_sexoArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbl_filmes_diretor<T extends tbl_diretores$tbl_filmes_diretorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_diretores$tbl_filmes_diretorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_nacionalidades_diretor<T extends tbl_diretores$tbl_nacionalidades_diretorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_diretores$tbl_nacionalidades_diretorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_diretores model
   */ 
  interface tbl_diretoresFieldRefs {
    readonly id: FieldRef<"tbl_diretores", 'Int'>
    readonly nome: FieldRef<"tbl_diretores", 'String'>
    readonly foto_diretor: FieldRef<"tbl_diretores", 'String'>
    readonly dt_nasc: FieldRef<"tbl_diretores", 'DateTime'>
    readonly dt_falec: FieldRef<"tbl_diretores", 'DateTime'>
    readonly sobre: FieldRef<"tbl_diretores", 'String'>
    readonly id_sexo: FieldRef<"tbl_diretores", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_diretores findUnique
   */
  export type tbl_diretoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_diretores to fetch.
     */
    where: tbl_diretoresWhereUniqueInput
  }


  /**
   * tbl_diretores findUniqueOrThrow
   */
  export type tbl_diretoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_diretores to fetch.
     */
    where: tbl_diretoresWhereUniqueInput
  }


  /**
   * tbl_diretores findFirst
   */
  export type tbl_diretoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_diretores to fetch.
     */
    where?: tbl_diretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_diretores to fetch.
     */
    orderBy?: tbl_diretoresOrderByWithRelationInput | tbl_diretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_diretores.
     */
    cursor?: tbl_diretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_diretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_diretores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_diretores.
     */
    distinct?: Tbl_diretoresScalarFieldEnum | Tbl_diretoresScalarFieldEnum[]
  }


  /**
   * tbl_diretores findFirstOrThrow
   */
  export type tbl_diretoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_diretores to fetch.
     */
    where?: tbl_diretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_diretores to fetch.
     */
    orderBy?: tbl_diretoresOrderByWithRelationInput | tbl_diretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_diretores.
     */
    cursor?: tbl_diretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_diretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_diretores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_diretores.
     */
    distinct?: Tbl_diretoresScalarFieldEnum | Tbl_diretoresScalarFieldEnum[]
  }


  /**
   * tbl_diretores findMany
   */
  export type tbl_diretoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * Filter, which tbl_diretores to fetch.
     */
    where?: tbl_diretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_diretores to fetch.
     */
    orderBy?: tbl_diretoresOrderByWithRelationInput | tbl_diretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_diretores.
     */
    cursor?: tbl_diretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_diretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_diretores.
     */
    skip?: number
    distinct?: Tbl_diretoresScalarFieldEnum | Tbl_diretoresScalarFieldEnum[]
  }


  /**
   * tbl_diretores create
   */
  export type tbl_diretoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_diretores.
     */
    data: XOR<tbl_diretoresCreateInput, tbl_diretoresUncheckedCreateInput>
  }


  /**
   * tbl_diretores createMany
   */
  export type tbl_diretoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_diretores.
     */
    data: tbl_diretoresCreateManyInput | tbl_diretoresCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_diretores update
   */
  export type tbl_diretoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_diretores.
     */
    data: XOR<tbl_diretoresUpdateInput, tbl_diretoresUncheckedUpdateInput>
    /**
     * Choose, which tbl_diretores to update.
     */
    where: tbl_diretoresWhereUniqueInput
  }


  /**
   * tbl_diretores updateMany
   */
  export type tbl_diretoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_diretores.
     */
    data: XOR<tbl_diretoresUpdateManyMutationInput, tbl_diretoresUncheckedUpdateManyInput>
    /**
     * Filter which tbl_diretores to update
     */
    where?: tbl_diretoresWhereInput
  }


  /**
   * tbl_diretores upsert
   */
  export type tbl_diretoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_diretores to update in case it exists.
     */
    where: tbl_diretoresWhereUniqueInput
    /**
     * In case the tbl_diretores found by the `where` argument doesn't exist, create a new tbl_diretores with this data.
     */
    create: XOR<tbl_diretoresCreateInput, tbl_diretoresUncheckedCreateInput>
    /**
     * In case the tbl_diretores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_diretoresUpdateInput, tbl_diretoresUncheckedUpdateInput>
  }


  /**
   * tbl_diretores delete
   */
  export type tbl_diretoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    /**
     * Filter which tbl_diretores to delete.
     */
    where: tbl_diretoresWhereUniqueInput
  }


  /**
   * tbl_diretores deleteMany
   */
  export type tbl_diretoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_diretores to delete
     */
    where?: tbl_diretoresWhereInput
  }


  /**
   * tbl_diretores.tbl_sexo
   */
  export type tbl_diretores$tbl_sexoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    where?: tbl_sexoWhereInput
  }


  /**
   * tbl_diretores.tbl_filmes_diretor
   */
  export type tbl_diretores$tbl_filmes_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    where?: tbl_filmes_diretorWhereInput
    orderBy?: tbl_filmes_diretorOrderByWithRelationInput | tbl_filmes_diretorOrderByWithRelationInput[]
    cursor?: tbl_filmes_diretorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_filmes_diretorScalarFieldEnum | Tbl_filmes_diretorScalarFieldEnum[]
  }


  /**
   * tbl_diretores.tbl_nacionalidades_diretor
   */
  export type tbl_diretores$tbl_nacionalidades_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    where?: tbl_nacionalidades_diretorWhereInput
    orderBy?: tbl_nacionalidades_diretorOrderByWithRelationInput | tbl_nacionalidades_diretorOrderByWithRelationInput[]
    cursor?: tbl_nacionalidades_diretorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_nacionalidades_diretorScalarFieldEnum | Tbl_nacionalidades_diretorScalarFieldEnum[]
  }


  /**
   * tbl_diretores without action
   */
  export type tbl_diretoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
  }



  /**
   * Model tbl_filmes_ator
   */

  export type AggregateTbl_filmes_ator = {
    _count: Tbl_filmes_atorCountAggregateOutputType | null
    _avg: Tbl_filmes_atorAvgAggregateOutputType | null
    _sum: Tbl_filmes_atorSumAggregateOutputType | null
    _min: Tbl_filmes_atorMinAggregateOutputType | null
    _max: Tbl_filmes_atorMaxAggregateOutputType | null
  }

  export type Tbl_filmes_atorAvgAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_atorSumAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_atorMinAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_atorMaxAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_atorCountAggregateOutputType = {
    id: number
    id_ator: number
    id_filme: number
    _all: number
  }


  export type Tbl_filmes_atorAvgAggregateInputType = {
    id?: true
    id_ator?: true
    id_filme?: true
  }

  export type Tbl_filmes_atorSumAggregateInputType = {
    id?: true
    id_ator?: true
    id_filme?: true
  }

  export type Tbl_filmes_atorMinAggregateInputType = {
    id?: true
    id_ator?: true
    id_filme?: true
  }

  export type Tbl_filmes_atorMaxAggregateInputType = {
    id?: true
    id_ator?: true
    id_filme?: true
  }

  export type Tbl_filmes_atorCountAggregateInputType = {
    id?: true
    id_ator?: true
    id_filme?: true
    _all?: true
  }

  export type Tbl_filmes_atorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_filmes_ator to aggregate.
     */
    where?: tbl_filmes_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_ators to fetch.
     */
    orderBy?: tbl_filmes_atorOrderByWithRelationInput | tbl_filmes_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_filmes_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_ators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_filmes_ators
    **/
    _count?: true | Tbl_filmes_atorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_filmes_atorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_filmes_atorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_filmes_atorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_filmes_atorMaxAggregateInputType
  }

  export type GetTbl_filmes_atorAggregateType<T extends Tbl_filmes_atorAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_filmes_ator]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_filmes_ator[P]>
      : GetScalarType<T[P], AggregateTbl_filmes_ator[P]>
  }




  export type tbl_filmes_atorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmes_atorWhereInput
    orderBy?: tbl_filmes_atorOrderByWithAggregationInput | tbl_filmes_atorOrderByWithAggregationInput[]
    by: Tbl_filmes_atorScalarFieldEnum[] | Tbl_filmes_atorScalarFieldEnum
    having?: tbl_filmes_atorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_filmes_atorCountAggregateInputType | true
    _avg?: Tbl_filmes_atorAvgAggregateInputType
    _sum?: Tbl_filmes_atorSumAggregateInputType
    _min?: Tbl_filmes_atorMinAggregateInputType
    _max?: Tbl_filmes_atorMaxAggregateInputType
  }

  export type Tbl_filmes_atorGroupByOutputType = {
    id: number
    id_ator: number
    id_filme: number
    _count: Tbl_filmes_atorCountAggregateOutputType | null
    _avg: Tbl_filmes_atorAvgAggregateOutputType | null
    _sum: Tbl_filmes_atorSumAggregateOutputType | null
    _min: Tbl_filmes_atorMinAggregateOutputType | null
    _max: Tbl_filmes_atorMaxAggregateOutputType | null
  }

  type GetTbl_filmes_atorGroupByPayload<T extends tbl_filmes_atorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_filmes_atorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_filmes_atorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_filmes_atorGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_filmes_atorGroupByOutputType[P]>
        }
      >
    >


  export type tbl_filmes_atorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_ator?: boolean
    id_filme?: boolean
    tbl_filmes?: boolean | tbl_filmesDefaultArgs<ExtArgs>
    tbl_atores?: boolean | tbl_atoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_filmes_ator"]>

  export type tbl_filmes_atorSelectScalar = {
    id?: boolean
    id_ator?: boolean
    id_filme?: boolean
  }

  export type tbl_filmes_atorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_filmes?: boolean | tbl_filmesDefaultArgs<ExtArgs>
    tbl_atores?: boolean | tbl_atoresDefaultArgs<ExtArgs>
  }


  export type $tbl_filmes_atorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_filmes_ator"
    objects: {
      tbl_filmes: Prisma.$tbl_filmesPayload<ExtArgs>
      tbl_atores: Prisma.$tbl_atoresPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_ator: number
      id_filme: number
    }, ExtArgs["result"]["tbl_filmes_ator"]>
    composites: {}
  }


  type tbl_filmes_atorGetPayload<S extends boolean | null | undefined | tbl_filmes_atorDefaultArgs> = $Result.GetResult<Prisma.$tbl_filmes_atorPayload, S>

  type tbl_filmes_atorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_filmes_atorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_filmes_atorCountAggregateInputType | true
    }

  export interface tbl_filmes_atorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_filmes_ator'], meta: { name: 'tbl_filmes_ator' } }
    /**
     * Find zero or one Tbl_filmes_ator that matches the filter.
     * @param {tbl_filmes_atorFindUniqueArgs} args - Arguments to find a Tbl_filmes_ator
     * @example
     * // Get one Tbl_filmes_ator
     * const tbl_filmes_ator = await prisma.tbl_filmes_ator.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_filmes_atorFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_atorFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_filmes_ator that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_filmes_atorFindUniqueOrThrowArgs} args - Arguments to find a Tbl_filmes_ator
     * @example
     * // Get one Tbl_filmes_ator
     * const tbl_filmes_ator = await prisma.tbl_filmes_ator.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_filmes_atorFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_atorFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_filmes_ator that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_atorFindFirstArgs} args - Arguments to find a Tbl_filmes_ator
     * @example
     * // Get one Tbl_filmes_ator
     * const tbl_filmes_ator = await prisma.tbl_filmes_ator.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_filmes_atorFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_atorFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_filmes_ator that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_atorFindFirstOrThrowArgs} args - Arguments to find a Tbl_filmes_ator
     * @example
     * // Get one Tbl_filmes_ator
     * const tbl_filmes_ator = await prisma.tbl_filmes_ator.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_filmes_atorFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_atorFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_filmes_ators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_atorFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_filmes_ators
     * const tbl_filmes_ators = await prisma.tbl_filmes_ator.findMany()
     * 
     * // Get first 10 Tbl_filmes_ators
     * const tbl_filmes_ators = await prisma.tbl_filmes_ator.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_filmes_atorWithIdOnly = await prisma.tbl_filmes_ator.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_filmes_atorFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_atorFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_filmes_ator.
     * @param {tbl_filmes_atorCreateArgs} args - Arguments to create a Tbl_filmes_ator.
     * @example
     * // Create one Tbl_filmes_ator
     * const Tbl_filmes_ator = await prisma.tbl_filmes_ator.create({
     *   data: {
     *     // ... data to create a Tbl_filmes_ator
     *   }
     * })
     * 
    **/
    create<T extends tbl_filmes_atorCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_atorCreateArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_filmes_ators.
     *     @param {tbl_filmes_atorCreateManyArgs} args - Arguments to create many Tbl_filmes_ators.
     *     @example
     *     // Create many Tbl_filmes_ators
     *     const tbl_filmes_ator = await prisma.tbl_filmes_ator.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_filmes_atorCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_atorCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_filmes_ator.
     * @param {tbl_filmes_atorDeleteArgs} args - Arguments to delete one Tbl_filmes_ator.
     * @example
     * // Delete one Tbl_filmes_ator
     * const Tbl_filmes_ator = await prisma.tbl_filmes_ator.delete({
     *   where: {
     *     // ... filter to delete one Tbl_filmes_ator
     *   }
     * })
     * 
    **/
    delete<T extends tbl_filmes_atorDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_atorDeleteArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_filmes_ator.
     * @param {tbl_filmes_atorUpdateArgs} args - Arguments to update one Tbl_filmes_ator.
     * @example
     * // Update one Tbl_filmes_ator
     * const tbl_filmes_ator = await prisma.tbl_filmes_ator.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_filmes_atorUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_atorUpdateArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_filmes_ators.
     * @param {tbl_filmes_atorDeleteManyArgs} args - Arguments to filter Tbl_filmes_ators to delete.
     * @example
     * // Delete a few Tbl_filmes_ators
     * const { count } = await prisma.tbl_filmes_ator.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_filmes_atorDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_atorDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_filmes_ators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_atorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_filmes_ators
     * const tbl_filmes_ator = await prisma.tbl_filmes_ator.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_filmes_atorUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_atorUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_filmes_ator.
     * @param {tbl_filmes_atorUpsertArgs} args - Arguments to update or create a Tbl_filmes_ator.
     * @example
     * // Update or create a Tbl_filmes_ator
     * const tbl_filmes_ator = await prisma.tbl_filmes_ator.upsert({
     *   create: {
     *     // ... data to create a Tbl_filmes_ator
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_filmes_ator we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_filmes_atorUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_atorUpsertArgs<ExtArgs>>
    ): Prisma__tbl_filmes_atorClient<$Result.GetResult<Prisma.$tbl_filmes_atorPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_filmes_ators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_atorCountArgs} args - Arguments to filter Tbl_filmes_ators to count.
     * @example
     * // Count the number of Tbl_filmes_ators
     * const count = await prisma.tbl_filmes_ator.count({
     *   where: {
     *     // ... the filter for the Tbl_filmes_ators we want to count
     *   }
     * })
    **/
    count<T extends tbl_filmes_atorCountArgs>(
      args?: Subset<T, tbl_filmes_atorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_filmes_atorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_filmes_ator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_filmes_atorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_filmes_atorAggregateArgs>(args: Subset<T, Tbl_filmes_atorAggregateArgs>): Prisma.PrismaPromise<GetTbl_filmes_atorAggregateType<T>>

    /**
     * Group by Tbl_filmes_ator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_atorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_filmes_atorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_filmes_atorGroupByArgs['orderBy'] }
        : { orderBy?: tbl_filmes_atorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_filmes_atorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_filmes_atorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_filmes_ator model
   */
  readonly fields: tbl_filmes_atorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_filmes_ator.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_filmes_atorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_filmes<T extends tbl_filmesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_filmesDefaultArgs<ExtArgs>>): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_atores<T extends tbl_atoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_atoresDefaultArgs<ExtArgs>>): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_filmes_ator model
   */ 
  interface tbl_filmes_atorFieldRefs {
    readonly id: FieldRef<"tbl_filmes_ator", 'Int'>
    readonly id_ator: FieldRef<"tbl_filmes_ator", 'Int'>
    readonly id_filme: FieldRef<"tbl_filmes_ator", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_filmes_ator findUnique
   */
  export type tbl_filmes_atorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_ator to fetch.
     */
    where: tbl_filmes_atorWhereUniqueInput
  }


  /**
   * tbl_filmes_ator findUniqueOrThrow
   */
  export type tbl_filmes_atorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_ator to fetch.
     */
    where: tbl_filmes_atorWhereUniqueInput
  }


  /**
   * tbl_filmes_ator findFirst
   */
  export type tbl_filmes_atorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_ator to fetch.
     */
    where?: tbl_filmes_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_ators to fetch.
     */
    orderBy?: tbl_filmes_atorOrderByWithRelationInput | tbl_filmes_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_filmes_ators.
     */
    cursor?: tbl_filmes_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_ators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_filmes_ators.
     */
    distinct?: Tbl_filmes_atorScalarFieldEnum | Tbl_filmes_atorScalarFieldEnum[]
  }


  /**
   * tbl_filmes_ator findFirstOrThrow
   */
  export type tbl_filmes_atorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_ator to fetch.
     */
    where?: tbl_filmes_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_ators to fetch.
     */
    orderBy?: tbl_filmes_atorOrderByWithRelationInput | tbl_filmes_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_filmes_ators.
     */
    cursor?: tbl_filmes_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_ators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_filmes_ators.
     */
    distinct?: Tbl_filmes_atorScalarFieldEnum | Tbl_filmes_atorScalarFieldEnum[]
  }


  /**
   * tbl_filmes_ator findMany
   */
  export type tbl_filmes_atorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_ators to fetch.
     */
    where?: tbl_filmes_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_ators to fetch.
     */
    orderBy?: tbl_filmes_atorOrderByWithRelationInput | tbl_filmes_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_filmes_ators.
     */
    cursor?: tbl_filmes_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_ators.
     */
    skip?: number
    distinct?: Tbl_filmes_atorScalarFieldEnum | Tbl_filmes_atorScalarFieldEnum[]
  }


  /**
   * tbl_filmes_ator create
   */
  export type tbl_filmes_atorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_filmes_ator.
     */
    data: XOR<tbl_filmes_atorCreateInput, tbl_filmes_atorUncheckedCreateInput>
  }


  /**
   * tbl_filmes_ator createMany
   */
  export type tbl_filmes_atorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_filmes_ators.
     */
    data: tbl_filmes_atorCreateManyInput | tbl_filmes_atorCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_filmes_ator update
   */
  export type tbl_filmes_atorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_filmes_ator.
     */
    data: XOR<tbl_filmes_atorUpdateInput, tbl_filmes_atorUncheckedUpdateInput>
    /**
     * Choose, which tbl_filmes_ator to update.
     */
    where: tbl_filmes_atorWhereUniqueInput
  }


  /**
   * tbl_filmes_ator updateMany
   */
  export type tbl_filmes_atorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_filmes_ators.
     */
    data: XOR<tbl_filmes_atorUpdateManyMutationInput, tbl_filmes_atorUncheckedUpdateManyInput>
    /**
     * Filter which tbl_filmes_ators to update
     */
    where?: tbl_filmes_atorWhereInput
  }


  /**
   * tbl_filmes_ator upsert
   */
  export type tbl_filmes_atorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_filmes_ator to update in case it exists.
     */
    where: tbl_filmes_atorWhereUniqueInput
    /**
     * In case the tbl_filmes_ator found by the `where` argument doesn't exist, create a new tbl_filmes_ator with this data.
     */
    create: XOR<tbl_filmes_atorCreateInput, tbl_filmes_atorUncheckedCreateInput>
    /**
     * In case the tbl_filmes_ator was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_filmes_atorUpdateInput, tbl_filmes_atorUncheckedUpdateInput>
  }


  /**
   * tbl_filmes_ator delete
   */
  export type tbl_filmes_atorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
    /**
     * Filter which tbl_filmes_ator to delete.
     */
    where: tbl_filmes_atorWhereUniqueInput
  }


  /**
   * tbl_filmes_ator deleteMany
   */
  export type tbl_filmes_atorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_filmes_ators to delete
     */
    where?: tbl_filmes_atorWhereInput
  }


  /**
   * tbl_filmes_ator without action
   */
  export type tbl_filmes_atorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_ator
     */
    select?: tbl_filmes_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_atorInclude<ExtArgs> | null
  }



  /**
   * Model tbl_filmes_diretor
   */

  export type AggregateTbl_filmes_diretor = {
    _count: Tbl_filmes_diretorCountAggregateOutputType | null
    _avg: Tbl_filmes_diretorAvgAggregateOutputType | null
    _sum: Tbl_filmes_diretorSumAggregateOutputType | null
    _min: Tbl_filmes_diretorMinAggregateOutputType | null
    _max: Tbl_filmes_diretorMaxAggregateOutputType | null
  }

  export type Tbl_filmes_diretorAvgAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_diretorSumAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_diretorMinAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_diretorMaxAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_filme: number | null
  }

  export type Tbl_filmes_diretorCountAggregateOutputType = {
    id: number
    id_diretor: number
    id_filme: number
    _all: number
  }


  export type Tbl_filmes_diretorAvgAggregateInputType = {
    id?: true
    id_diretor?: true
    id_filme?: true
  }

  export type Tbl_filmes_diretorSumAggregateInputType = {
    id?: true
    id_diretor?: true
    id_filme?: true
  }

  export type Tbl_filmes_diretorMinAggregateInputType = {
    id?: true
    id_diretor?: true
    id_filme?: true
  }

  export type Tbl_filmes_diretorMaxAggregateInputType = {
    id?: true
    id_diretor?: true
    id_filme?: true
  }

  export type Tbl_filmes_diretorCountAggregateInputType = {
    id?: true
    id_diretor?: true
    id_filme?: true
    _all?: true
  }

  export type Tbl_filmes_diretorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_filmes_diretor to aggregate.
     */
    where?: tbl_filmes_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_diretors to fetch.
     */
    orderBy?: tbl_filmes_diretorOrderByWithRelationInput | tbl_filmes_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_filmes_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_diretors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_filmes_diretors
    **/
    _count?: true | Tbl_filmes_diretorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_filmes_diretorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_filmes_diretorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_filmes_diretorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_filmes_diretorMaxAggregateInputType
  }

  export type GetTbl_filmes_diretorAggregateType<T extends Tbl_filmes_diretorAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_filmes_diretor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_filmes_diretor[P]>
      : GetScalarType<T[P], AggregateTbl_filmes_diretor[P]>
  }




  export type tbl_filmes_diretorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_filmes_diretorWhereInput
    orderBy?: tbl_filmes_diretorOrderByWithAggregationInput | tbl_filmes_diretorOrderByWithAggregationInput[]
    by: Tbl_filmes_diretorScalarFieldEnum[] | Tbl_filmes_diretorScalarFieldEnum
    having?: tbl_filmes_diretorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_filmes_diretorCountAggregateInputType | true
    _avg?: Tbl_filmes_diretorAvgAggregateInputType
    _sum?: Tbl_filmes_diretorSumAggregateInputType
    _min?: Tbl_filmes_diretorMinAggregateInputType
    _max?: Tbl_filmes_diretorMaxAggregateInputType
  }

  export type Tbl_filmes_diretorGroupByOutputType = {
    id: number
    id_diretor: number
    id_filme: number
    _count: Tbl_filmes_diretorCountAggregateOutputType | null
    _avg: Tbl_filmes_diretorAvgAggregateOutputType | null
    _sum: Tbl_filmes_diretorSumAggregateOutputType | null
    _min: Tbl_filmes_diretorMinAggregateOutputType | null
    _max: Tbl_filmes_diretorMaxAggregateOutputType | null
  }

  type GetTbl_filmes_diretorGroupByPayload<T extends tbl_filmes_diretorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_filmes_diretorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_filmes_diretorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_filmes_diretorGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_filmes_diretorGroupByOutputType[P]>
        }
      >
    >


  export type tbl_filmes_diretorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_diretor?: boolean
    id_filme?: boolean
    tbl_filmes?: boolean | tbl_filmesDefaultArgs<ExtArgs>
    tbl_diretores?: boolean | tbl_diretoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_filmes_diretor"]>

  export type tbl_filmes_diretorSelectScalar = {
    id?: boolean
    id_diretor?: boolean
    id_filme?: boolean
  }

  export type tbl_filmes_diretorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_filmes?: boolean | tbl_filmesDefaultArgs<ExtArgs>
    tbl_diretores?: boolean | tbl_diretoresDefaultArgs<ExtArgs>
  }


  export type $tbl_filmes_diretorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_filmes_diretor"
    objects: {
      tbl_filmes: Prisma.$tbl_filmesPayload<ExtArgs>
      tbl_diretores: Prisma.$tbl_diretoresPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_diretor: number
      id_filme: number
    }, ExtArgs["result"]["tbl_filmes_diretor"]>
    composites: {}
  }


  type tbl_filmes_diretorGetPayload<S extends boolean | null | undefined | tbl_filmes_diretorDefaultArgs> = $Result.GetResult<Prisma.$tbl_filmes_diretorPayload, S>

  type tbl_filmes_diretorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_filmes_diretorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_filmes_diretorCountAggregateInputType | true
    }

  export interface tbl_filmes_diretorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_filmes_diretor'], meta: { name: 'tbl_filmes_diretor' } }
    /**
     * Find zero or one Tbl_filmes_diretor that matches the filter.
     * @param {tbl_filmes_diretorFindUniqueArgs} args - Arguments to find a Tbl_filmes_diretor
     * @example
     * // Get one Tbl_filmes_diretor
     * const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_filmes_diretorFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_diretorFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_filmes_diretor that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_filmes_diretorFindUniqueOrThrowArgs} args - Arguments to find a Tbl_filmes_diretor
     * @example
     * // Get one Tbl_filmes_diretor
     * const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_filmes_diretorFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_diretorFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_filmes_diretor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_diretorFindFirstArgs} args - Arguments to find a Tbl_filmes_diretor
     * @example
     * // Get one Tbl_filmes_diretor
     * const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_filmes_diretorFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_diretorFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_filmes_diretor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_diretorFindFirstOrThrowArgs} args - Arguments to find a Tbl_filmes_diretor
     * @example
     * // Get one Tbl_filmes_diretor
     * const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_filmes_diretorFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_diretorFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_filmes_diretors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_diretorFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_filmes_diretors
     * const tbl_filmes_diretors = await prisma.tbl_filmes_diretor.findMany()
     * 
     * // Get first 10 Tbl_filmes_diretors
     * const tbl_filmes_diretors = await prisma.tbl_filmes_diretor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_filmes_diretorWithIdOnly = await prisma.tbl_filmes_diretor.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_filmes_diretorFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_diretorFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_filmes_diretor.
     * @param {tbl_filmes_diretorCreateArgs} args - Arguments to create a Tbl_filmes_diretor.
     * @example
     * // Create one Tbl_filmes_diretor
     * const Tbl_filmes_diretor = await prisma.tbl_filmes_diretor.create({
     *   data: {
     *     // ... data to create a Tbl_filmes_diretor
     *   }
     * })
     * 
    **/
    create<T extends tbl_filmes_diretorCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_diretorCreateArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_filmes_diretors.
     *     @param {tbl_filmes_diretorCreateManyArgs} args - Arguments to create many Tbl_filmes_diretors.
     *     @example
     *     // Create many Tbl_filmes_diretors
     *     const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_filmes_diretorCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_diretorCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_filmes_diretor.
     * @param {tbl_filmes_diretorDeleteArgs} args - Arguments to delete one Tbl_filmes_diretor.
     * @example
     * // Delete one Tbl_filmes_diretor
     * const Tbl_filmes_diretor = await prisma.tbl_filmes_diretor.delete({
     *   where: {
     *     // ... filter to delete one Tbl_filmes_diretor
     *   }
     * })
     * 
    **/
    delete<T extends tbl_filmes_diretorDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_diretorDeleteArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_filmes_diretor.
     * @param {tbl_filmes_diretorUpdateArgs} args - Arguments to update one Tbl_filmes_diretor.
     * @example
     * // Update one Tbl_filmes_diretor
     * const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_filmes_diretorUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_diretorUpdateArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_filmes_diretors.
     * @param {tbl_filmes_diretorDeleteManyArgs} args - Arguments to filter Tbl_filmes_diretors to delete.
     * @example
     * // Delete a few Tbl_filmes_diretors
     * const { count } = await prisma.tbl_filmes_diretor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_filmes_diretorDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_filmes_diretorDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_filmes_diretors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_diretorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_filmes_diretors
     * const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_filmes_diretorUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_diretorUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_filmes_diretor.
     * @param {tbl_filmes_diretorUpsertArgs} args - Arguments to update or create a Tbl_filmes_diretor.
     * @example
     * // Update or create a Tbl_filmes_diretor
     * const tbl_filmes_diretor = await prisma.tbl_filmes_diretor.upsert({
     *   create: {
     *     // ... data to create a Tbl_filmes_diretor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_filmes_diretor we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_filmes_diretorUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_filmes_diretorUpsertArgs<ExtArgs>>
    ): Prisma__tbl_filmes_diretorClient<$Result.GetResult<Prisma.$tbl_filmes_diretorPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_filmes_diretors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_diretorCountArgs} args - Arguments to filter Tbl_filmes_diretors to count.
     * @example
     * // Count the number of Tbl_filmes_diretors
     * const count = await prisma.tbl_filmes_diretor.count({
     *   where: {
     *     // ... the filter for the Tbl_filmes_diretors we want to count
     *   }
     * })
    **/
    count<T extends tbl_filmes_diretorCountArgs>(
      args?: Subset<T, tbl_filmes_diretorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_filmes_diretorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_filmes_diretor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_filmes_diretorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_filmes_diretorAggregateArgs>(args: Subset<T, Tbl_filmes_diretorAggregateArgs>): Prisma.PrismaPromise<GetTbl_filmes_diretorAggregateType<T>>

    /**
     * Group by Tbl_filmes_diretor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_filmes_diretorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_filmes_diretorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_filmes_diretorGroupByArgs['orderBy'] }
        : { orderBy?: tbl_filmes_diretorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_filmes_diretorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_filmes_diretorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_filmes_diretor model
   */
  readonly fields: tbl_filmes_diretorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_filmes_diretor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_filmes_diretorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_filmes<T extends tbl_filmesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_filmesDefaultArgs<ExtArgs>>): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_diretores<T extends tbl_diretoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_diretoresDefaultArgs<ExtArgs>>): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_filmes_diretor model
   */ 
  interface tbl_filmes_diretorFieldRefs {
    readonly id: FieldRef<"tbl_filmes_diretor", 'Int'>
    readonly id_diretor: FieldRef<"tbl_filmes_diretor", 'Int'>
    readonly id_filme: FieldRef<"tbl_filmes_diretor", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_filmes_diretor findUnique
   */
  export type tbl_filmes_diretorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_diretor to fetch.
     */
    where: tbl_filmes_diretorWhereUniqueInput
  }


  /**
   * tbl_filmes_diretor findUniqueOrThrow
   */
  export type tbl_filmes_diretorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_diretor to fetch.
     */
    where: tbl_filmes_diretorWhereUniqueInput
  }


  /**
   * tbl_filmes_diretor findFirst
   */
  export type tbl_filmes_diretorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_diretor to fetch.
     */
    where?: tbl_filmes_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_diretors to fetch.
     */
    orderBy?: tbl_filmes_diretorOrderByWithRelationInput | tbl_filmes_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_filmes_diretors.
     */
    cursor?: tbl_filmes_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_diretors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_filmes_diretors.
     */
    distinct?: Tbl_filmes_diretorScalarFieldEnum | Tbl_filmes_diretorScalarFieldEnum[]
  }


  /**
   * tbl_filmes_diretor findFirstOrThrow
   */
  export type tbl_filmes_diretorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_diretor to fetch.
     */
    where?: tbl_filmes_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_diretors to fetch.
     */
    orderBy?: tbl_filmes_diretorOrderByWithRelationInput | tbl_filmes_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_filmes_diretors.
     */
    cursor?: tbl_filmes_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_diretors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_filmes_diretors.
     */
    distinct?: Tbl_filmes_diretorScalarFieldEnum | Tbl_filmes_diretorScalarFieldEnum[]
  }


  /**
   * tbl_filmes_diretor findMany
   */
  export type tbl_filmes_diretorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_filmes_diretors to fetch.
     */
    where?: tbl_filmes_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_filmes_diretors to fetch.
     */
    orderBy?: tbl_filmes_diretorOrderByWithRelationInput | tbl_filmes_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_filmes_diretors.
     */
    cursor?: tbl_filmes_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_filmes_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_filmes_diretors.
     */
    skip?: number
    distinct?: Tbl_filmes_diretorScalarFieldEnum | Tbl_filmes_diretorScalarFieldEnum[]
  }


  /**
   * tbl_filmes_diretor create
   */
  export type tbl_filmes_diretorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_filmes_diretor.
     */
    data: XOR<tbl_filmes_diretorCreateInput, tbl_filmes_diretorUncheckedCreateInput>
  }


  /**
   * tbl_filmes_diretor createMany
   */
  export type tbl_filmes_diretorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_filmes_diretors.
     */
    data: tbl_filmes_diretorCreateManyInput | tbl_filmes_diretorCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_filmes_diretor update
   */
  export type tbl_filmes_diretorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_filmes_diretor.
     */
    data: XOR<tbl_filmes_diretorUpdateInput, tbl_filmes_diretorUncheckedUpdateInput>
    /**
     * Choose, which tbl_filmes_diretor to update.
     */
    where: tbl_filmes_diretorWhereUniqueInput
  }


  /**
   * tbl_filmes_diretor updateMany
   */
  export type tbl_filmes_diretorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_filmes_diretors.
     */
    data: XOR<tbl_filmes_diretorUpdateManyMutationInput, tbl_filmes_diretorUncheckedUpdateManyInput>
    /**
     * Filter which tbl_filmes_diretors to update
     */
    where?: tbl_filmes_diretorWhereInput
  }


  /**
   * tbl_filmes_diretor upsert
   */
  export type tbl_filmes_diretorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_filmes_diretor to update in case it exists.
     */
    where: tbl_filmes_diretorWhereUniqueInput
    /**
     * In case the tbl_filmes_diretor found by the `where` argument doesn't exist, create a new tbl_filmes_diretor with this data.
     */
    create: XOR<tbl_filmes_diretorCreateInput, tbl_filmes_diretorUncheckedCreateInput>
    /**
     * In case the tbl_filmes_diretor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_filmes_diretorUpdateInput, tbl_filmes_diretorUncheckedUpdateInput>
  }


  /**
   * tbl_filmes_diretor delete
   */
  export type tbl_filmes_diretorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
    /**
     * Filter which tbl_filmes_diretor to delete.
     */
    where: tbl_filmes_diretorWhereUniqueInput
  }


  /**
   * tbl_filmes_diretor deleteMany
   */
  export type tbl_filmes_diretorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_filmes_diretors to delete
     */
    where?: tbl_filmes_diretorWhereInput
  }


  /**
   * tbl_filmes_diretor without action
   */
  export type tbl_filmes_diretorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_filmes_diretor
     */
    select?: tbl_filmes_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_filmes_diretorInclude<ExtArgs> | null
  }



  /**
   * Model tbl_genero_filme
   */

  export type AggregateTbl_genero_filme = {
    _count: Tbl_genero_filmeCountAggregateOutputType | null
    _avg: Tbl_genero_filmeAvgAggregateOutputType | null
    _sum: Tbl_genero_filmeSumAggregateOutputType | null
    _min: Tbl_genero_filmeMinAggregateOutputType | null
    _max: Tbl_genero_filmeMaxAggregateOutputType | null
  }

  export type Tbl_genero_filmeAvgAggregateOutputType = {
    id: number | null
    id_genero: number | null
    id_filme: number | null
  }

  export type Tbl_genero_filmeSumAggregateOutputType = {
    id: number | null
    id_genero: number | null
    id_filme: number | null
  }

  export type Tbl_genero_filmeMinAggregateOutputType = {
    id: number | null
    id_genero: number | null
    id_filme: number | null
  }

  export type Tbl_genero_filmeMaxAggregateOutputType = {
    id: number | null
    id_genero: number | null
    id_filme: number | null
  }

  export type Tbl_genero_filmeCountAggregateOutputType = {
    id: number
    id_genero: number
    id_filme: number
    _all: number
  }


  export type Tbl_genero_filmeAvgAggregateInputType = {
    id?: true
    id_genero?: true
    id_filme?: true
  }

  export type Tbl_genero_filmeSumAggregateInputType = {
    id?: true
    id_genero?: true
    id_filme?: true
  }

  export type Tbl_genero_filmeMinAggregateInputType = {
    id?: true
    id_genero?: true
    id_filme?: true
  }

  export type Tbl_genero_filmeMaxAggregateInputType = {
    id?: true
    id_genero?: true
    id_filme?: true
  }

  export type Tbl_genero_filmeCountAggregateInputType = {
    id?: true
    id_genero?: true
    id_filme?: true
    _all?: true
  }

  export type Tbl_genero_filmeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_genero_filme to aggregate.
     */
    where?: tbl_genero_filmeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_genero_filmes to fetch.
     */
    orderBy?: tbl_genero_filmeOrderByWithRelationInput | tbl_genero_filmeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_genero_filmeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_genero_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_genero_filmes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_genero_filmes
    **/
    _count?: true | Tbl_genero_filmeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_genero_filmeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_genero_filmeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_genero_filmeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_genero_filmeMaxAggregateInputType
  }

  export type GetTbl_genero_filmeAggregateType<T extends Tbl_genero_filmeAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_genero_filme]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_genero_filme[P]>
      : GetScalarType<T[P], AggregateTbl_genero_filme[P]>
  }




  export type tbl_genero_filmeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_genero_filmeWhereInput
    orderBy?: tbl_genero_filmeOrderByWithAggregationInput | tbl_genero_filmeOrderByWithAggregationInput[]
    by: Tbl_genero_filmeScalarFieldEnum[] | Tbl_genero_filmeScalarFieldEnum
    having?: tbl_genero_filmeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_genero_filmeCountAggregateInputType | true
    _avg?: Tbl_genero_filmeAvgAggregateInputType
    _sum?: Tbl_genero_filmeSumAggregateInputType
    _min?: Tbl_genero_filmeMinAggregateInputType
    _max?: Tbl_genero_filmeMaxAggregateInputType
  }

  export type Tbl_genero_filmeGroupByOutputType = {
    id: number
    id_genero: number
    id_filme: number
    _count: Tbl_genero_filmeCountAggregateOutputType | null
    _avg: Tbl_genero_filmeAvgAggregateOutputType | null
    _sum: Tbl_genero_filmeSumAggregateOutputType | null
    _min: Tbl_genero_filmeMinAggregateOutputType | null
    _max: Tbl_genero_filmeMaxAggregateOutputType | null
  }

  type GetTbl_genero_filmeGroupByPayload<T extends tbl_genero_filmeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_genero_filmeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_genero_filmeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_genero_filmeGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_genero_filmeGroupByOutputType[P]>
        }
      >
    >


  export type tbl_genero_filmeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_genero?: boolean
    id_filme?: boolean
    tbl_generos?: boolean | tbl_generosDefaultArgs<ExtArgs>
    tbl_filmes?: boolean | tbl_filmesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_genero_filme"]>

  export type tbl_genero_filmeSelectScalar = {
    id?: boolean
    id_genero?: boolean
    id_filme?: boolean
  }

  export type tbl_genero_filmeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_generos?: boolean | tbl_generosDefaultArgs<ExtArgs>
    tbl_filmes?: boolean | tbl_filmesDefaultArgs<ExtArgs>
  }


  export type $tbl_genero_filmePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_genero_filme"
    objects: {
      tbl_generos: Prisma.$tbl_generosPayload<ExtArgs>
      tbl_filmes: Prisma.$tbl_filmesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_genero: number
      id_filme: number
    }, ExtArgs["result"]["tbl_genero_filme"]>
    composites: {}
  }


  type tbl_genero_filmeGetPayload<S extends boolean | null | undefined | tbl_genero_filmeDefaultArgs> = $Result.GetResult<Prisma.$tbl_genero_filmePayload, S>

  type tbl_genero_filmeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_genero_filmeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_genero_filmeCountAggregateInputType | true
    }

  export interface tbl_genero_filmeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_genero_filme'], meta: { name: 'tbl_genero_filme' } }
    /**
     * Find zero or one Tbl_genero_filme that matches the filter.
     * @param {tbl_genero_filmeFindUniqueArgs} args - Arguments to find a Tbl_genero_filme
     * @example
     * // Get one Tbl_genero_filme
     * const tbl_genero_filme = await prisma.tbl_genero_filme.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_genero_filmeFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_genero_filmeFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_genero_filme that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_genero_filmeFindUniqueOrThrowArgs} args - Arguments to find a Tbl_genero_filme
     * @example
     * // Get one Tbl_genero_filme
     * const tbl_genero_filme = await prisma.tbl_genero_filme.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_genero_filmeFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_genero_filmeFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_genero_filme that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_genero_filmeFindFirstArgs} args - Arguments to find a Tbl_genero_filme
     * @example
     * // Get one Tbl_genero_filme
     * const tbl_genero_filme = await prisma.tbl_genero_filme.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_genero_filmeFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_genero_filmeFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_genero_filme that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_genero_filmeFindFirstOrThrowArgs} args - Arguments to find a Tbl_genero_filme
     * @example
     * // Get one Tbl_genero_filme
     * const tbl_genero_filme = await prisma.tbl_genero_filme.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_genero_filmeFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_genero_filmeFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_genero_filmes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_genero_filmeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_genero_filmes
     * const tbl_genero_filmes = await prisma.tbl_genero_filme.findMany()
     * 
     * // Get first 10 Tbl_genero_filmes
     * const tbl_genero_filmes = await prisma.tbl_genero_filme.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_genero_filmeWithIdOnly = await prisma.tbl_genero_filme.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_genero_filmeFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_genero_filmeFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_genero_filme.
     * @param {tbl_genero_filmeCreateArgs} args - Arguments to create a Tbl_genero_filme.
     * @example
     * // Create one Tbl_genero_filme
     * const Tbl_genero_filme = await prisma.tbl_genero_filme.create({
     *   data: {
     *     // ... data to create a Tbl_genero_filme
     *   }
     * })
     * 
    **/
    create<T extends tbl_genero_filmeCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_genero_filmeCreateArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_genero_filmes.
     *     @param {tbl_genero_filmeCreateManyArgs} args - Arguments to create many Tbl_genero_filmes.
     *     @example
     *     // Create many Tbl_genero_filmes
     *     const tbl_genero_filme = await prisma.tbl_genero_filme.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_genero_filmeCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_genero_filmeCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_genero_filme.
     * @param {tbl_genero_filmeDeleteArgs} args - Arguments to delete one Tbl_genero_filme.
     * @example
     * // Delete one Tbl_genero_filme
     * const Tbl_genero_filme = await prisma.tbl_genero_filme.delete({
     *   where: {
     *     // ... filter to delete one Tbl_genero_filme
     *   }
     * })
     * 
    **/
    delete<T extends tbl_genero_filmeDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_genero_filmeDeleteArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_genero_filme.
     * @param {tbl_genero_filmeUpdateArgs} args - Arguments to update one Tbl_genero_filme.
     * @example
     * // Update one Tbl_genero_filme
     * const tbl_genero_filme = await prisma.tbl_genero_filme.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_genero_filmeUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_genero_filmeUpdateArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_genero_filmes.
     * @param {tbl_genero_filmeDeleteManyArgs} args - Arguments to filter Tbl_genero_filmes to delete.
     * @example
     * // Delete a few Tbl_genero_filmes
     * const { count } = await prisma.tbl_genero_filme.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_genero_filmeDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_genero_filmeDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_genero_filmes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_genero_filmeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_genero_filmes
     * const tbl_genero_filme = await prisma.tbl_genero_filme.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_genero_filmeUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_genero_filmeUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_genero_filme.
     * @param {tbl_genero_filmeUpsertArgs} args - Arguments to update or create a Tbl_genero_filme.
     * @example
     * // Update or create a Tbl_genero_filme
     * const tbl_genero_filme = await prisma.tbl_genero_filme.upsert({
     *   create: {
     *     // ... data to create a Tbl_genero_filme
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_genero_filme we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_genero_filmeUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_genero_filmeUpsertArgs<ExtArgs>>
    ): Prisma__tbl_genero_filmeClient<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_genero_filmes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_genero_filmeCountArgs} args - Arguments to filter Tbl_genero_filmes to count.
     * @example
     * // Count the number of Tbl_genero_filmes
     * const count = await prisma.tbl_genero_filme.count({
     *   where: {
     *     // ... the filter for the Tbl_genero_filmes we want to count
     *   }
     * })
    **/
    count<T extends tbl_genero_filmeCountArgs>(
      args?: Subset<T, tbl_genero_filmeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_genero_filmeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_genero_filme.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_genero_filmeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_genero_filmeAggregateArgs>(args: Subset<T, Tbl_genero_filmeAggregateArgs>): Prisma.PrismaPromise<GetTbl_genero_filmeAggregateType<T>>

    /**
     * Group by Tbl_genero_filme.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_genero_filmeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_genero_filmeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_genero_filmeGroupByArgs['orderBy'] }
        : { orderBy?: tbl_genero_filmeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_genero_filmeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_genero_filmeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_genero_filme model
   */
  readonly fields: tbl_genero_filmeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_genero_filme.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_genero_filmeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_generos<T extends tbl_generosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_generosDefaultArgs<ExtArgs>>): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_filmes<T extends tbl_filmesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_filmesDefaultArgs<ExtArgs>>): Prisma__tbl_filmesClient<$Result.GetResult<Prisma.$tbl_filmesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_genero_filme model
   */ 
  interface tbl_genero_filmeFieldRefs {
    readonly id: FieldRef<"tbl_genero_filme", 'Int'>
    readonly id_genero: FieldRef<"tbl_genero_filme", 'Int'>
    readonly id_filme: FieldRef<"tbl_genero_filme", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_genero_filme findUnique
   */
  export type tbl_genero_filmeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_genero_filme to fetch.
     */
    where: tbl_genero_filmeWhereUniqueInput
  }


  /**
   * tbl_genero_filme findUniqueOrThrow
   */
  export type tbl_genero_filmeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_genero_filme to fetch.
     */
    where: tbl_genero_filmeWhereUniqueInput
  }


  /**
   * tbl_genero_filme findFirst
   */
  export type tbl_genero_filmeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_genero_filme to fetch.
     */
    where?: tbl_genero_filmeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_genero_filmes to fetch.
     */
    orderBy?: tbl_genero_filmeOrderByWithRelationInput | tbl_genero_filmeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_genero_filmes.
     */
    cursor?: tbl_genero_filmeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_genero_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_genero_filmes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_genero_filmes.
     */
    distinct?: Tbl_genero_filmeScalarFieldEnum | Tbl_genero_filmeScalarFieldEnum[]
  }


  /**
   * tbl_genero_filme findFirstOrThrow
   */
  export type tbl_genero_filmeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_genero_filme to fetch.
     */
    where?: tbl_genero_filmeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_genero_filmes to fetch.
     */
    orderBy?: tbl_genero_filmeOrderByWithRelationInput | tbl_genero_filmeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_genero_filmes.
     */
    cursor?: tbl_genero_filmeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_genero_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_genero_filmes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_genero_filmes.
     */
    distinct?: Tbl_genero_filmeScalarFieldEnum | Tbl_genero_filmeScalarFieldEnum[]
  }


  /**
   * tbl_genero_filme findMany
   */
  export type tbl_genero_filmeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_genero_filmes to fetch.
     */
    where?: tbl_genero_filmeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_genero_filmes to fetch.
     */
    orderBy?: tbl_genero_filmeOrderByWithRelationInput | tbl_genero_filmeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_genero_filmes.
     */
    cursor?: tbl_genero_filmeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_genero_filmes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_genero_filmes.
     */
    skip?: number
    distinct?: Tbl_genero_filmeScalarFieldEnum | Tbl_genero_filmeScalarFieldEnum[]
  }


  /**
   * tbl_genero_filme create
   */
  export type tbl_genero_filmeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_genero_filme.
     */
    data: XOR<tbl_genero_filmeCreateInput, tbl_genero_filmeUncheckedCreateInput>
  }


  /**
   * tbl_genero_filme createMany
   */
  export type tbl_genero_filmeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_genero_filmes.
     */
    data: tbl_genero_filmeCreateManyInput | tbl_genero_filmeCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_genero_filme update
   */
  export type tbl_genero_filmeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_genero_filme.
     */
    data: XOR<tbl_genero_filmeUpdateInput, tbl_genero_filmeUncheckedUpdateInput>
    /**
     * Choose, which tbl_genero_filme to update.
     */
    where: tbl_genero_filmeWhereUniqueInput
  }


  /**
   * tbl_genero_filme updateMany
   */
  export type tbl_genero_filmeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_genero_filmes.
     */
    data: XOR<tbl_genero_filmeUpdateManyMutationInput, tbl_genero_filmeUncheckedUpdateManyInput>
    /**
     * Filter which tbl_genero_filmes to update
     */
    where?: tbl_genero_filmeWhereInput
  }


  /**
   * tbl_genero_filme upsert
   */
  export type tbl_genero_filmeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_genero_filme to update in case it exists.
     */
    where: tbl_genero_filmeWhereUniqueInput
    /**
     * In case the tbl_genero_filme found by the `where` argument doesn't exist, create a new tbl_genero_filme with this data.
     */
    create: XOR<tbl_genero_filmeCreateInput, tbl_genero_filmeUncheckedCreateInput>
    /**
     * In case the tbl_genero_filme was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_genero_filmeUpdateInput, tbl_genero_filmeUncheckedUpdateInput>
  }


  /**
   * tbl_genero_filme delete
   */
  export type tbl_genero_filmeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    /**
     * Filter which tbl_genero_filme to delete.
     */
    where: tbl_genero_filmeWhereUniqueInput
  }


  /**
   * tbl_genero_filme deleteMany
   */
  export type tbl_genero_filmeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_genero_filmes to delete
     */
    where?: tbl_genero_filmeWhereInput
  }


  /**
   * tbl_genero_filme without action
   */
  export type tbl_genero_filmeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
  }



  /**
   * Model tbl_generos
   */

  export type AggregateTbl_generos = {
    _count: Tbl_generosCountAggregateOutputType | null
    _avg: Tbl_generosAvgAggregateOutputType | null
    _sum: Tbl_generosSumAggregateOutputType | null
    _min: Tbl_generosMinAggregateOutputType | null
    _max: Tbl_generosMaxAggregateOutputType | null
  }

  export type Tbl_generosAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_generosSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_generosMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_generosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_generosCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_generosAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_generosSumAggregateInputType = {
    id?: true
  }

  export type Tbl_generosMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_generosMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_generosCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_generosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_generos to aggregate.
     */
    where?: tbl_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_generos to fetch.
     */
    orderBy?: tbl_generosOrderByWithRelationInput | tbl_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_generos
    **/
    _count?: true | Tbl_generosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_generosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_generosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_generosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_generosMaxAggregateInputType
  }

  export type GetTbl_generosAggregateType<T extends Tbl_generosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_generos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_generos[P]>
      : GetScalarType<T[P], AggregateTbl_generos[P]>
  }




  export type tbl_generosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_generosWhereInput
    orderBy?: tbl_generosOrderByWithAggregationInput | tbl_generosOrderByWithAggregationInput[]
    by: Tbl_generosScalarFieldEnum[] | Tbl_generosScalarFieldEnum
    having?: tbl_generosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_generosCountAggregateInputType | true
    _avg?: Tbl_generosAvgAggregateInputType
    _sum?: Tbl_generosSumAggregateInputType
    _min?: Tbl_generosMinAggregateInputType
    _max?: Tbl_generosMaxAggregateInputType
  }

  export type Tbl_generosGroupByOutputType = {
    id: number
    nome: string
    _count: Tbl_generosCountAggregateOutputType | null
    _avg: Tbl_generosAvgAggregateOutputType | null
    _sum: Tbl_generosSumAggregateOutputType | null
    _min: Tbl_generosMinAggregateOutputType | null
    _max: Tbl_generosMaxAggregateOutputType | null
  }

  type GetTbl_generosGroupByPayload<T extends tbl_generosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_generosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_generosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_generosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_generosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_generosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_genero_filme?: boolean | tbl_generos$tbl_genero_filmeArgs<ExtArgs>
    _count?: boolean | Tbl_generosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_generos"]>

  export type tbl_generosSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type tbl_generosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_genero_filme?: boolean | tbl_generos$tbl_genero_filmeArgs<ExtArgs>
    _count?: boolean | Tbl_generosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_generosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_generos"
    objects: {
      tbl_genero_filme: Prisma.$tbl_genero_filmePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tbl_generos"]>
    composites: {}
  }


  type tbl_generosGetPayload<S extends boolean | null | undefined | tbl_generosDefaultArgs> = $Result.GetResult<Prisma.$tbl_generosPayload, S>

  type tbl_generosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_generosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_generosCountAggregateInputType | true
    }

  export interface tbl_generosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_generos'], meta: { name: 'tbl_generos' } }
    /**
     * Find zero or one Tbl_generos that matches the filter.
     * @param {tbl_generosFindUniqueArgs} args - Arguments to find a Tbl_generos
     * @example
     * // Get one Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_generosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_generosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_generos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_generosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_generos
     * @example
     * // Get one Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_generosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_generosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_generos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_generosFindFirstArgs} args - Arguments to find a Tbl_generos
     * @example
     * // Get one Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_generosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_generosFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_generos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_generosFindFirstOrThrowArgs} args - Arguments to find a Tbl_generos
     * @example
     * // Get one Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_generosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_generosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_generos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_generosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.findMany()
     * 
     * // Get first 10 Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_generosWithIdOnly = await prisma.tbl_generos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_generosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_generosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_generos.
     * @param {tbl_generosCreateArgs} args - Arguments to create a Tbl_generos.
     * @example
     * // Create one Tbl_generos
     * const Tbl_generos = await prisma.tbl_generos.create({
     *   data: {
     *     // ... data to create a Tbl_generos
     *   }
     * })
     * 
    **/
    create<T extends tbl_generosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_generosCreateArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_generos.
     *     @param {tbl_generosCreateManyArgs} args - Arguments to create many Tbl_generos.
     *     @example
     *     // Create many Tbl_generos
     *     const tbl_generos = await prisma.tbl_generos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_generosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_generosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_generos.
     * @param {tbl_generosDeleteArgs} args - Arguments to delete one Tbl_generos.
     * @example
     * // Delete one Tbl_generos
     * const Tbl_generos = await prisma.tbl_generos.delete({
     *   where: {
     *     // ... filter to delete one Tbl_generos
     *   }
     * })
     * 
    **/
    delete<T extends tbl_generosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_generosDeleteArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_generos.
     * @param {tbl_generosUpdateArgs} args - Arguments to update one Tbl_generos.
     * @example
     * // Update one Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_generosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_generosUpdateArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_generos.
     * @param {tbl_generosDeleteManyArgs} args - Arguments to filter Tbl_generos to delete.
     * @example
     * // Delete a few Tbl_generos
     * const { count } = await prisma.tbl_generos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_generosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_generosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_generosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_generosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_generosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_generos.
     * @param {tbl_generosUpsertArgs} args - Arguments to update or create a Tbl_generos.
     * @example
     * // Update or create a Tbl_generos
     * const tbl_generos = await prisma.tbl_generos.upsert({
     *   create: {
     *     // ... data to create a Tbl_generos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_generos we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_generosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_generosUpsertArgs<ExtArgs>>
    ): Prisma__tbl_generosClient<$Result.GetResult<Prisma.$tbl_generosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_generosCountArgs} args - Arguments to filter Tbl_generos to count.
     * @example
     * // Count the number of Tbl_generos
     * const count = await prisma.tbl_generos.count({
     *   where: {
     *     // ... the filter for the Tbl_generos we want to count
     *   }
     * })
    **/
    count<T extends tbl_generosCountArgs>(
      args?: Subset<T, tbl_generosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_generosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_generosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_generosAggregateArgs>(args: Subset<T, Tbl_generosAggregateArgs>): Prisma.PrismaPromise<GetTbl_generosAggregateType<T>>

    /**
     * Group by Tbl_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_generosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_generosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_generosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_generosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_generosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_generosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_generos model
   */
  readonly fields: tbl_generosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_generos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_generosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_genero_filme<T extends tbl_generos$tbl_genero_filmeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_generos$tbl_genero_filmeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_genero_filmePayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_generos model
   */ 
  interface tbl_generosFieldRefs {
    readonly id: FieldRef<"tbl_generos", 'Int'>
    readonly nome: FieldRef<"tbl_generos", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbl_generos findUnique
   */
  export type tbl_generosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_generos to fetch.
     */
    where: tbl_generosWhereUniqueInput
  }


  /**
   * tbl_generos findUniqueOrThrow
   */
  export type tbl_generosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_generos to fetch.
     */
    where: tbl_generosWhereUniqueInput
  }


  /**
   * tbl_generos findFirst
   */
  export type tbl_generosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_generos to fetch.
     */
    where?: tbl_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_generos to fetch.
     */
    orderBy?: tbl_generosOrderByWithRelationInput | tbl_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_generos.
     */
    cursor?: tbl_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_generos.
     */
    distinct?: Tbl_generosScalarFieldEnum | Tbl_generosScalarFieldEnum[]
  }


  /**
   * tbl_generos findFirstOrThrow
   */
  export type tbl_generosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_generos to fetch.
     */
    where?: tbl_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_generos to fetch.
     */
    orderBy?: tbl_generosOrderByWithRelationInput | tbl_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_generos.
     */
    cursor?: tbl_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_generos.
     */
    distinct?: Tbl_generosScalarFieldEnum | Tbl_generosScalarFieldEnum[]
  }


  /**
   * tbl_generos findMany
   */
  export type tbl_generosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_generos to fetch.
     */
    where?: tbl_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_generos to fetch.
     */
    orderBy?: tbl_generosOrderByWithRelationInput | tbl_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_generos.
     */
    cursor?: tbl_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_generos.
     */
    skip?: number
    distinct?: Tbl_generosScalarFieldEnum | Tbl_generosScalarFieldEnum[]
  }


  /**
   * tbl_generos create
   */
  export type tbl_generosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_generos.
     */
    data: XOR<tbl_generosCreateInput, tbl_generosUncheckedCreateInput>
  }


  /**
   * tbl_generos createMany
   */
  export type tbl_generosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_generos.
     */
    data: tbl_generosCreateManyInput | tbl_generosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_generos update
   */
  export type tbl_generosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_generos.
     */
    data: XOR<tbl_generosUpdateInput, tbl_generosUncheckedUpdateInput>
    /**
     * Choose, which tbl_generos to update.
     */
    where: tbl_generosWhereUniqueInput
  }


  /**
   * tbl_generos updateMany
   */
  export type tbl_generosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_generos.
     */
    data: XOR<tbl_generosUpdateManyMutationInput, tbl_generosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_generos to update
     */
    where?: tbl_generosWhereInput
  }


  /**
   * tbl_generos upsert
   */
  export type tbl_generosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_generos to update in case it exists.
     */
    where: tbl_generosWhereUniqueInput
    /**
     * In case the tbl_generos found by the `where` argument doesn't exist, create a new tbl_generos with this data.
     */
    create: XOR<tbl_generosCreateInput, tbl_generosUncheckedCreateInput>
    /**
     * In case the tbl_generos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_generosUpdateInput, tbl_generosUncheckedUpdateInput>
  }


  /**
   * tbl_generos delete
   */
  export type tbl_generosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
    /**
     * Filter which tbl_generos to delete.
     */
    where: tbl_generosWhereUniqueInput
  }


  /**
   * tbl_generos deleteMany
   */
  export type tbl_generosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_generos to delete
     */
    where?: tbl_generosWhereInput
  }


  /**
   * tbl_generos.tbl_genero_filme
   */
  export type tbl_generos$tbl_genero_filmeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_genero_filme
     */
    select?: tbl_genero_filmeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_genero_filmeInclude<ExtArgs> | null
    where?: tbl_genero_filmeWhereInput
    orderBy?: tbl_genero_filmeOrderByWithRelationInput | tbl_genero_filmeOrderByWithRelationInput[]
    cursor?: tbl_genero_filmeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_genero_filmeScalarFieldEnum | Tbl_genero_filmeScalarFieldEnum[]
  }


  /**
   * tbl_generos without action
   */
  export type tbl_generosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_generos
     */
    select?: tbl_generosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_generosInclude<ExtArgs> | null
  }



  /**
   * Model tbl_nacionalidades
   */

  export type AggregateTbl_nacionalidades = {
    _count: Tbl_nacionalidadesCountAggregateOutputType | null
    _avg: Tbl_nacionalidadesAvgAggregateOutputType | null
    _sum: Tbl_nacionalidadesSumAggregateOutputType | null
    _min: Tbl_nacionalidadesMinAggregateOutputType | null
    _max: Tbl_nacionalidadesMaxAggregateOutputType | null
  }

  export type Tbl_nacionalidadesAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_nacionalidadesSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_nacionalidadesMinAggregateOutputType = {
    id: number | null
    pais_origem: string | null
    nacionalidade: string | null
  }

  export type Tbl_nacionalidadesMaxAggregateOutputType = {
    id: number | null
    pais_origem: string | null
    nacionalidade: string | null
  }

  export type Tbl_nacionalidadesCountAggregateOutputType = {
    id: number
    pais_origem: number
    nacionalidade: number
    _all: number
  }


  export type Tbl_nacionalidadesAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_nacionalidadesSumAggregateInputType = {
    id?: true
  }

  export type Tbl_nacionalidadesMinAggregateInputType = {
    id?: true
    pais_origem?: true
    nacionalidade?: true
  }

  export type Tbl_nacionalidadesMaxAggregateInputType = {
    id?: true
    pais_origem?: true
    nacionalidade?: true
  }

  export type Tbl_nacionalidadesCountAggregateInputType = {
    id?: true
    pais_origem?: true
    nacionalidade?: true
    _all?: true
  }

  export type Tbl_nacionalidadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_nacionalidades to aggregate.
     */
    where?: tbl_nacionalidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades to fetch.
     */
    orderBy?: tbl_nacionalidadesOrderByWithRelationInput | tbl_nacionalidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_nacionalidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_nacionalidades
    **/
    _count?: true | Tbl_nacionalidadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_nacionalidadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_nacionalidadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_nacionalidadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_nacionalidadesMaxAggregateInputType
  }

  export type GetTbl_nacionalidadesAggregateType<T extends Tbl_nacionalidadesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_nacionalidades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_nacionalidades[P]>
      : GetScalarType<T[P], AggregateTbl_nacionalidades[P]>
  }




  export type tbl_nacionalidadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_nacionalidadesWhereInput
    orderBy?: tbl_nacionalidadesOrderByWithAggregationInput | tbl_nacionalidadesOrderByWithAggregationInput[]
    by: Tbl_nacionalidadesScalarFieldEnum[] | Tbl_nacionalidadesScalarFieldEnum
    having?: tbl_nacionalidadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_nacionalidadesCountAggregateInputType | true
    _avg?: Tbl_nacionalidadesAvgAggregateInputType
    _sum?: Tbl_nacionalidadesSumAggregateInputType
    _min?: Tbl_nacionalidadesMinAggregateInputType
    _max?: Tbl_nacionalidadesMaxAggregateInputType
  }

  export type Tbl_nacionalidadesGroupByOutputType = {
    id: number
    pais_origem: string
    nacionalidade: string
    _count: Tbl_nacionalidadesCountAggregateOutputType | null
    _avg: Tbl_nacionalidadesAvgAggregateOutputType | null
    _sum: Tbl_nacionalidadesSumAggregateOutputType | null
    _min: Tbl_nacionalidadesMinAggregateOutputType | null
    _max: Tbl_nacionalidadesMaxAggregateOutputType | null
  }

  type GetTbl_nacionalidadesGroupByPayload<T extends tbl_nacionalidadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_nacionalidadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_nacionalidadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_nacionalidadesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_nacionalidadesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_nacionalidadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pais_origem?: boolean
    nacionalidade?: boolean
    tbl_nacionalidades_ator?: boolean | tbl_nacionalidades$tbl_nacionalidades_atorArgs<ExtArgs>
    tbl_nacionalidades_diretor?: boolean | tbl_nacionalidades$tbl_nacionalidades_diretorArgs<ExtArgs>
    _count?: boolean | Tbl_nacionalidadesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_nacionalidades"]>

  export type tbl_nacionalidadesSelectScalar = {
    id?: boolean
    pais_origem?: boolean
    nacionalidade?: boolean
  }

  export type tbl_nacionalidadesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_nacionalidades_ator?: boolean | tbl_nacionalidades$tbl_nacionalidades_atorArgs<ExtArgs>
    tbl_nacionalidades_diretor?: boolean | tbl_nacionalidades$tbl_nacionalidades_diretorArgs<ExtArgs>
    _count?: boolean | Tbl_nacionalidadesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_nacionalidadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_nacionalidades"
    objects: {
      tbl_nacionalidades_ator: Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>[]
      tbl_nacionalidades_diretor: Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      pais_origem: string
      nacionalidade: string
    }, ExtArgs["result"]["tbl_nacionalidades"]>
    composites: {}
  }


  type tbl_nacionalidadesGetPayload<S extends boolean | null | undefined | tbl_nacionalidadesDefaultArgs> = $Result.GetResult<Prisma.$tbl_nacionalidadesPayload, S>

  type tbl_nacionalidadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_nacionalidadesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_nacionalidadesCountAggregateInputType | true
    }

  export interface tbl_nacionalidadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_nacionalidades'], meta: { name: 'tbl_nacionalidades' } }
    /**
     * Find zero or one Tbl_nacionalidades that matches the filter.
     * @param {tbl_nacionalidadesFindUniqueArgs} args - Arguments to find a Tbl_nacionalidades
     * @example
     * // Get one Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_nacionalidadesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidadesFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_nacionalidades that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_nacionalidadesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_nacionalidades
     * @example
     * // Get one Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_nacionalidadesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidadesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_nacionalidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidadesFindFirstArgs} args - Arguments to find a Tbl_nacionalidades
     * @example
     * // Get one Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_nacionalidadesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidadesFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_nacionalidades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidadesFindFirstOrThrowArgs} args - Arguments to find a Tbl_nacionalidades
     * @example
     * // Get one Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_nacionalidadesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidadesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_nacionalidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidadesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.findMany()
     * 
     * // Get first 10 Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_nacionalidadesWithIdOnly = await prisma.tbl_nacionalidades.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_nacionalidadesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidadesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_nacionalidades.
     * @param {tbl_nacionalidadesCreateArgs} args - Arguments to create a Tbl_nacionalidades.
     * @example
     * // Create one Tbl_nacionalidades
     * const Tbl_nacionalidades = await prisma.tbl_nacionalidades.create({
     *   data: {
     *     // ... data to create a Tbl_nacionalidades
     *   }
     * })
     * 
    **/
    create<T extends tbl_nacionalidadesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidadesCreateArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_nacionalidades.
     *     @param {tbl_nacionalidadesCreateManyArgs} args - Arguments to create many Tbl_nacionalidades.
     *     @example
     *     // Create many Tbl_nacionalidades
     *     const tbl_nacionalidades = await prisma.tbl_nacionalidades.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_nacionalidadesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidadesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_nacionalidades.
     * @param {tbl_nacionalidadesDeleteArgs} args - Arguments to delete one Tbl_nacionalidades.
     * @example
     * // Delete one Tbl_nacionalidades
     * const Tbl_nacionalidades = await prisma.tbl_nacionalidades.delete({
     *   where: {
     *     // ... filter to delete one Tbl_nacionalidades
     *   }
     * })
     * 
    **/
    delete<T extends tbl_nacionalidadesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidadesDeleteArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_nacionalidades.
     * @param {tbl_nacionalidadesUpdateArgs} args - Arguments to update one Tbl_nacionalidades.
     * @example
     * // Update one Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_nacionalidadesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidadesUpdateArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_nacionalidades.
     * @param {tbl_nacionalidadesDeleteManyArgs} args - Arguments to filter Tbl_nacionalidades to delete.
     * @example
     * // Delete a few Tbl_nacionalidades
     * const { count } = await prisma.tbl_nacionalidades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_nacionalidadesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidadesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_nacionalidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_nacionalidadesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidadesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_nacionalidades.
     * @param {tbl_nacionalidadesUpsertArgs} args - Arguments to update or create a Tbl_nacionalidades.
     * @example
     * // Update or create a Tbl_nacionalidades
     * const tbl_nacionalidades = await prisma.tbl_nacionalidades.upsert({
     *   create: {
     *     // ... data to create a Tbl_nacionalidades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_nacionalidades we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_nacionalidadesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidadesUpsertArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_nacionalidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidadesCountArgs} args - Arguments to filter Tbl_nacionalidades to count.
     * @example
     * // Count the number of Tbl_nacionalidades
     * const count = await prisma.tbl_nacionalidades.count({
     *   where: {
     *     // ... the filter for the Tbl_nacionalidades we want to count
     *   }
     * })
    **/
    count<T extends tbl_nacionalidadesCountArgs>(
      args?: Subset<T, tbl_nacionalidadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_nacionalidadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_nacionalidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_nacionalidadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_nacionalidadesAggregateArgs>(args: Subset<T, Tbl_nacionalidadesAggregateArgs>): Prisma.PrismaPromise<GetTbl_nacionalidadesAggregateType<T>>

    /**
     * Group by Tbl_nacionalidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_nacionalidadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_nacionalidadesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_nacionalidadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_nacionalidadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_nacionalidadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_nacionalidades model
   */
  readonly fields: tbl_nacionalidadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_nacionalidades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_nacionalidadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_nacionalidades_ator<T extends tbl_nacionalidades$tbl_nacionalidades_atorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_nacionalidades$tbl_nacionalidades_atorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_nacionalidades_diretor<T extends tbl_nacionalidades$tbl_nacionalidades_diretorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_nacionalidades$tbl_nacionalidades_diretorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_nacionalidades model
   */ 
  interface tbl_nacionalidadesFieldRefs {
    readonly id: FieldRef<"tbl_nacionalidades", 'Int'>
    readonly pais_origem: FieldRef<"tbl_nacionalidades", 'String'>
    readonly nacionalidade: FieldRef<"tbl_nacionalidades", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbl_nacionalidades findUnique
   */
  export type tbl_nacionalidadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades to fetch.
     */
    where: tbl_nacionalidadesWhereUniqueInput
  }


  /**
   * tbl_nacionalidades findUniqueOrThrow
   */
  export type tbl_nacionalidadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades to fetch.
     */
    where: tbl_nacionalidadesWhereUniqueInput
  }


  /**
   * tbl_nacionalidades findFirst
   */
  export type tbl_nacionalidadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades to fetch.
     */
    where?: tbl_nacionalidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades to fetch.
     */
    orderBy?: tbl_nacionalidadesOrderByWithRelationInput | tbl_nacionalidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_nacionalidades.
     */
    cursor?: tbl_nacionalidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_nacionalidades.
     */
    distinct?: Tbl_nacionalidadesScalarFieldEnum | Tbl_nacionalidadesScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades findFirstOrThrow
   */
  export type tbl_nacionalidadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades to fetch.
     */
    where?: tbl_nacionalidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades to fetch.
     */
    orderBy?: tbl_nacionalidadesOrderByWithRelationInput | tbl_nacionalidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_nacionalidades.
     */
    cursor?: tbl_nacionalidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_nacionalidades.
     */
    distinct?: Tbl_nacionalidadesScalarFieldEnum | Tbl_nacionalidadesScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades findMany
   */
  export type tbl_nacionalidadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades to fetch.
     */
    where?: tbl_nacionalidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades to fetch.
     */
    orderBy?: tbl_nacionalidadesOrderByWithRelationInput | tbl_nacionalidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_nacionalidades.
     */
    cursor?: tbl_nacionalidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades.
     */
    skip?: number
    distinct?: Tbl_nacionalidadesScalarFieldEnum | Tbl_nacionalidadesScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades create
   */
  export type tbl_nacionalidadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_nacionalidades.
     */
    data: XOR<tbl_nacionalidadesCreateInput, tbl_nacionalidadesUncheckedCreateInput>
  }


  /**
   * tbl_nacionalidades createMany
   */
  export type tbl_nacionalidadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_nacionalidades.
     */
    data: tbl_nacionalidadesCreateManyInput | tbl_nacionalidadesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_nacionalidades update
   */
  export type tbl_nacionalidadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_nacionalidades.
     */
    data: XOR<tbl_nacionalidadesUpdateInput, tbl_nacionalidadesUncheckedUpdateInput>
    /**
     * Choose, which tbl_nacionalidades to update.
     */
    where: tbl_nacionalidadesWhereUniqueInput
  }


  /**
   * tbl_nacionalidades updateMany
   */
  export type tbl_nacionalidadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_nacionalidades.
     */
    data: XOR<tbl_nacionalidadesUpdateManyMutationInput, tbl_nacionalidadesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_nacionalidades to update
     */
    where?: tbl_nacionalidadesWhereInput
  }


  /**
   * tbl_nacionalidades upsert
   */
  export type tbl_nacionalidadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_nacionalidades to update in case it exists.
     */
    where: tbl_nacionalidadesWhereUniqueInput
    /**
     * In case the tbl_nacionalidades found by the `where` argument doesn't exist, create a new tbl_nacionalidades with this data.
     */
    create: XOR<tbl_nacionalidadesCreateInput, tbl_nacionalidadesUncheckedCreateInput>
    /**
     * In case the tbl_nacionalidades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_nacionalidadesUpdateInput, tbl_nacionalidadesUncheckedUpdateInput>
  }


  /**
   * tbl_nacionalidades delete
   */
  export type tbl_nacionalidadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
    /**
     * Filter which tbl_nacionalidades to delete.
     */
    where: tbl_nacionalidadesWhereUniqueInput
  }


  /**
   * tbl_nacionalidades deleteMany
   */
  export type tbl_nacionalidadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_nacionalidades to delete
     */
    where?: tbl_nacionalidadesWhereInput
  }


  /**
   * tbl_nacionalidades.tbl_nacionalidades_ator
   */
  export type tbl_nacionalidades$tbl_nacionalidades_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    where?: tbl_nacionalidades_atorWhereInput
    orderBy?: tbl_nacionalidades_atorOrderByWithRelationInput | tbl_nacionalidades_atorOrderByWithRelationInput[]
    cursor?: tbl_nacionalidades_atorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_nacionalidades_atorScalarFieldEnum | Tbl_nacionalidades_atorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades.tbl_nacionalidades_diretor
   */
  export type tbl_nacionalidades$tbl_nacionalidades_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    where?: tbl_nacionalidades_diretorWhereInput
    orderBy?: tbl_nacionalidades_diretorOrderByWithRelationInput | tbl_nacionalidades_diretorOrderByWithRelationInput[]
    cursor?: tbl_nacionalidades_diretorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_nacionalidades_diretorScalarFieldEnum | Tbl_nacionalidades_diretorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades without action
   */
  export type tbl_nacionalidadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades
     */
    select?: tbl_nacionalidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidadesInclude<ExtArgs> | null
  }



  /**
   * Model tbl_nacionalidades_ator
   */

  export type AggregateTbl_nacionalidades_ator = {
    _count: Tbl_nacionalidades_atorCountAggregateOutputType | null
    _avg: Tbl_nacionalidades_atorAvgAggregateOutputType | null
    _sum: Tbl_nacionalidades_atorSumAggregateOutputType | null
    _min: Tbl_nacionalidades_atorMinAggregateOutputType | null
    _max: Tbl_nacionalidades_atorMaxAggregateOutputType | null
  }

  export type Tbl_nacionalidades_atorAvgAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_atorSumAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_atorMinAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_atorMaxAggregateOutputType = {
    id: number | null
    id_ator: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_atorCountAggregateOutputType = {
    id: number
    id_ator: number
    id_nacionalidade: number
    _all: number
  }


  export type Tbl_nacionalidades_atorAvgAggregateInputType = {
    id?: true
    id_ator?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_atorSumAggregateInputType = {
    id?: true
    id_ator?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_atorMinAggregateInputType = {
    id?: true
    id_ator?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_atorMaxAggregateInputType = {
    id?: true
    id_ator?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_atorCountAggregateInputType = {
    id?: true
    id_ator?: true
    id_nacionalidade?: true
    _all?: true
  }

  export type Tbl_nacionalidades_atorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_nacionalidades_ator to aggregate.
     */
    where?: tbl_nacionalidades_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_ators to fetch.
     */
    orderBy?: tbl_nacionalidades_atorOrderByWithRelationInput | tbl_nacionalidades_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_nacionalidades_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_ators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_nacionalidades_ators
    **/
    _count?: true | Tbl_nacionalidades_atorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_nacionalidades_atorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_nacionalidades_atorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_nacionalidades_atorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_nacionalidades_atorMaxAggregateInputType
  }

  export type GetTbl_nacionalidades_atorAggregateType<T extends Tbl_nacionalidades_atorAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_nacionalidades_ator]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_nacionalidades_ator[P]>
      : GetScalarType<T[P], AggregateTbl_nacionalidades_ator[P]>
  }




  export type tbl_nacionalidades_atorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_nacionalidades_atorWhereInput
    orderBy?: tbl_nacionalidades_atorOrderByWithAggregationInput | tbl_nacionalidades_atorOrderByWithAggregationInput[]
    by: Tbl_nacionalidades_atorScalarFieldEnum[] | Tbl_nacionalidades_atorScalarFieldEnum
    having?: tbl_nacionalidades_atorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_nacionalidades_atorCountAggregateInputType | true
    _avg?: Tbl_nacionalidades_atorAvgAggregateInputType
    _sum?: Tbl_nacionalidades_atorSumAggregateInputType
    _min?: Tbl_nacionalidades_atorMinAggregateInputType
    _max?: Tbl_nacionalidades_atorMaxAggregateInputType
  }

  export type Tbl_nacionalidades_atorGroupByOutputType = {
    id: number
    id_ator: number
    id_nacionalidade: number
    _count: Tbl_nacionalidades_atorCountAggregateOutputType | null
    _avg: Tbl_nacionalidades_atorAvgAggregateOutputType | null
    _sum: Tbl_nacionalidades_atorSumAggregateOutputType | null
    _min: Tbl_nacionalidades_atorMinAggregateOutputType | null
    _max: Tbl_nacionalidades_atorMaxAggregateOutputType | null
  }

  type GetTbl_nacionalidades_atorGroupByPayload<T extends tbl_nacionalidades_atorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_nacionalidades_atorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_nacionalidades_atorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_nacionalidades_atorGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_nacionalidades_atorGroupByOutputType[P]>
        }
      >
    >


  export type tbl_nacionalidades_atorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_ator?: boolean
    id_nacionalidade?: boolean
    tbl_atores?: boolean | tbl_atoresDefaultArgs<ExtArgs>
    tbl_nacionalidades?: boolean | tbl_nacionalidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_nacionalidades_ator"]>

  export type tbl_nacionalidades_atorSelectScalar = {
    id?: boolean
    id_ator?: boolean
    id_nacionalidade?: boolean
  }

  export type tbl_nacionalidades_atorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_atores?: boolean | tbl_atoresDefaultArgs<ExtArgs>
    tbl_nacionalidades?: boolean | tbl_nacionalidadesDefaultArgs<ExtArgs>
  }


  export type $tbl_nacionalidades_atorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_nacionalidades_ator"
    objects: {
      tbl_atores: Prisma.$tbl_atoresPayload<ExtArgs>
      tbl_nacionalidades: Prisma.$tbl_nacionalidadesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_ator: number
      id_nacionalidade: number
    }, ExtArgs["result"]["tbl_nacionalidades_ator"]>
    composites: {}
  }


  type tbl_nacionalidades_atorGetPayload<S extends boolean | null | undefined | tbl_nacionalidades_atorDefaultArgs> = $Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload, S>

  type tbl_nacionalidades_atorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_nacionalidades_atorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_nacionalidades_atorCountAggregateInputType | true
    }

  export interface tbl_nacionalidades_atorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_nacionalidades_ator'], meta: { name: 'tbl_nacionalidades_ator' } }
    /**
     * Find zero or one Tbl_nacionalidades_ator that matches the filter.
     * @param {tbl_nacionalidades_atorFindUniqueArgs} args - Arguments to find a Tbl_nacionalidades_ator
     * @example
     * // Get one Tbl_nacionalidades_ator
     * const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_nacionalidades_atorFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_atorFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_nacionalidades_ator that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_nacionalidades_atorFindUniqueOrThrowArgs} args - Arguments to find a Tbl_nacionalidades_ator
     * @example
     * // Get one Tbl_nacionalidades_ator
     * const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_nacionalidades_atorFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_atorFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_nacionalidades_ator that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_atorFindFirstArgs} args - Arguments to find a Tbl_nacionalidades_ator
     * @example
     * // Get one Tbl_nacionalidades_ator
     * const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_nacionalidades_atorFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_atorFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_nacionalidades_ator that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_atorFindFirstOrThrowArgs} args - Arguments to find a Tbl_nacionalidades_ator
     * @example
     * // Get one Tbl_nacionalidades_ator
     * const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_nacionalidades_atorFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_atorFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_nacionalidades_ators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_atorFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_nacionalidades_ators
     * const tbl_nacionalidades_ators = await prisma.tbl_nacionalidades_ator.findMany()
     * 
     * // Get first 10 Tbl_nacionalidades_ators
     * const tbl_nacionalidades_ators = await prisma.tbl_nacionalidades_ator.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_nacionalidades_atorWithIdOnly = await prisma.tbl_nacionalidades_ator.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_nacionalidades_atorFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_atorFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_nacionalidades_ator.
     * @param {tbl_nacionalidades_atorCreateArgs} args - Arguments to create a Tbl_nacionalidades_ator.
     * @example
     * // Create one Tbl_nacionalidades_ator
     * const Tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.create({
     *   data: {
     *     // ... data to create a Tbl_nacionalidades_ator
     *   }
     * })
     * 
    **/
    create<T extends tbl_nacionalidades_atorCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_atorCreateArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_nacionalidades_ators.
     *     @param {tbl_nacionalidades_atorCreateManyArgs} args - Arguments to create many Tbl_nacionalidades_ators.
     *     @example
     *     // Create many Tbl_nacionalidades_ators
     *     const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_nacionalidades_atorCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_atorCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_nacionalidades_ator.
     * @param {tbl_nacionalidades_atorDeleteArgs} args - Arguments to delete one Tbl_nacionalidades_ator.
     * @example
     * // Delete one Tbl_nacionalidades_ator
     * const Tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.delete({
     *   where: {
     *     // ... filter to delete one Tbl_nacionalidades_ator
     *   }
     * })
     * 
    **/
    delete<T extends tbl_nacionalidades_atorDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_atorDeleteArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_nacionalidades_ator.
     * @param {tbl_nacionalidades_atorUpdateArgs} args - Arguments to update one Tbl_nacionalidades_ator.
     * @example
     * // Update one Tbl_nacionalidades_ator
     * const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_nacionalidades_atorUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_atorUpdateArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_nacionalidades_ators.
     * @param {tbl_nacionalidades_atorDeleteManyArgs} args - Arguments to filter Tbl_nacionalidades_ators to delete.
     * @example
     * // Delete a few Tbl_nacionalidades_ators
     * const { count } = await prisma.tbl_nacionalidades_ator.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_nacionalidades_atorDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_atorDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_nacionalidades_ators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_atorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_nacionalidades_ators
     * const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_nacionalidades_atorUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_atorUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_nacionalidades_ator.
     * @param {tbl_nacionalidades_atorUpsertArgs} args - Arguments to update or create a Tbl_nacionalidades_ator.
     * @example
     * // Update or create a Tbl_nacionalidades_ator
     * const tbl_nacionalidades_ator = await prisma.tbl_nacionalidades_ator.upsert({
     *   create: {
     *     // ... data to create a Tbl_nacionalidades_ator
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_nacionalidades_ator we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_nacionalidades_atorUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_atorUpsertArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_atorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_atorPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_nacionalidades_ators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_atorCountArgs} args - Arguments to filter Tbl_nacionalidades_ators to count.
     * @example
     * // Count the number of Tbl_nacionalidades_ators
     * const count = await prisma.tbl_nacionalidades_ator.count({
     *   where: {
     *     // ... the filter for the Tbl_nacionalidades_ators we want to count
     *   }
     * })
    **/
    count<T extends tbl_nacionalidades_atorCountArgs>(
      args?: Subset<T, tbl_nacionalidades_atorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_nacionalidades_atorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_nacionalidades_ator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_nacionalidades_atorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_nacionalidades_atorAggregateArgs>(args: Subset<T, Tbl_nacionalidades_atorAggregateArgs>): Prisma.PrismaPromise<GetTbl_nacionalidades_atorAggregateType<T>>

    /**
     * Group by Tbl_nacionalidades_ator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_atorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_nacionalidades_atorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_nacionalidades_atorGroupByArgs['orderBy'] }
        : { orderBy?: tbl_nacionalidades_atorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_nacionalidades_atorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_nacionalidades_atorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_nacionalidades_ator model
   */
  readonly fields: tbl_nacionalidades_atorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_nacionalidades_ator.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_nacionalidades_atorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_atores<T extends tbl_atoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_atoresDefaultArgs<ExtArgs>>): Prisma__tbl_atoresClient<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_nacionalidades<T extends tbl_nacionalidadesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_nacionalidadesDefaultArgs<ExtArgs>>): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_nacionalidades_ator model
   */ 
  interface tbl_nacionalidades_atorFieldRefs {
    readonly id: FieldRef<"tbl_nacionalidades_ator", 'Int'>
    readonly id_ator: FieldRef<"tbl_nacionalidades_ator", 'Int'>
    readonly id_nacionalidade: FieldRef<"tbl_nacionalidades_ator", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_nacionalidades_ator findUnique
   */
  export type tbl_nacionalidades_atorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_ator to fetch.
     */
    where: tbl_nacionalidades_atorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_ator findUniqueOrThrow
   */
  export type tbl_nacionalidades_atorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_ator to fetch.
     */
    where: tbl_nacionalidades_atorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_ator findFirst
   */
  export type tbl_nacionalidades_atorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_ator to fetch.
     */
    where?: tbl_nacionalidades_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_ators to fetch.
     */
    orderBy?: tbl_nacionalidades_atorOrderByWithRelationInput | tbl_nacionalidades_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_nacionalidades_ators.
     */
    cursor?: tbl_nacionalidades_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_ators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_nacionalidades_ators.
     */
    distinct?: Tbl_nacionalidades_atorScalarFieldEnum | Tbl_nacionalidades_atorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades_ator findFirstOrThrow
   */
  export type tbl_nacionalidades_atorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_ator to fetch.
     */
    where?: tbl_nacionalidades_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_ators to fetch.
     */
    orderBy?: tbl_nacionalidades_atorOrderByWithRelationInput | tbl_nacionalidades_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_nacionalidades_ators.
     */
    cursor?: tbl_nacionalidades_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_ators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_nacionalidades_ators.
     */
    distinct?: Tbl_nacionalidades_atorScalarFieldEnum | Tbl_nacionalidades_atorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades_ator findMany
   */
  export type tbl_nacionalidades_atorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_ators to fetch.
     */
    where?: tbl_nacionalidades_atorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_ators to fetch.
     */
    orderBy?: tbl_nacionalidades_atorOrderByWithRelationInput | tbl_nacionalidades_atorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_nacionalidades_ators.
     */
    cursor?: tbl_nacionalidades_atorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_ators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_ators.
     */
    skip?: number
    distinct?: Tbl_nacionalidades_atorScalarFieldEnum | Tbl_nacionalidades_atorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades_ator create
   */
  export type tbl_nacionalidades_atorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_nacionalidades_ator.
     */
    data: XOR<tbl_nacionalidades_atorCreateInput, tbl_nacionalidades_atorUncheckedCreateInput>
  }


  /**
   * tbl_nacionalidades_ator createMany
   */
  export type tbl_nacionalidades_atorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_nacionalidades_ators.
     */
    data: tbl_nacionalidades_atorCreateManyInput | tbl_nacionalidades_atorCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_nacionalidades_ator update
   */
  export type tbl_nacionalidades_atorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_nacionalidades_ator.
     */
    data: XOR<tbl_nacionalidades_atorUpdateInput, tbl_nacionalidades_atorUncheckedUpdateInput>
    /**
     * Choose, which tbl_nacionalidades_ator to update.
     */
    where: tbl_nacionalidades_atorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_ator updateMany
   */
  export type tbl_nacionalidades_atorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_nacionalidades_ators.
     */
    data: XOR<tbl_nacionalidades_atorUpdateManyMutationInput, tbl_nacionalidades_atorUncheckedUpdateManyInput>
    /**
     * Filter which tbl_nacionalidades_ators to update
     */
    where?: tbl_nacionalidades_atorWhereInput
  }


  /**
   * tbl_nacionalidades_ator upsert
   */
  export type tbl_nacionalidades_atorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_nacionalidades_ator to update in case it exists.
     */
    where: tbl_nacionalidades_atorWhereUniqueInput
    /**
     * In case the tbl_nacionalidades_ator found by the `where` argument doesn't exist, create a new tbl_nacionalidades_ator with this data.
     */
    create: XOR<tbl_nacionalidades_atorCreateInput, tbl_nacionalidades_atorUncheckedCreateInput>
    /**
     * In case the tbl_nacionalidades_ator was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_nacionalidades_atorUpdateInput, tbl_nacionalidades_atorUncheckedUpdateInput>
  }


  /**
   * tbl_nacionalidades_ator delete
   */
  export type tbl_nacionalidades_atorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
    /**
     * Filter which tbl_nacionalidades_ator to delete.
     */
    where: tbl_nacionalidades_atorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_ator deleteMany
   */
  export type tbl_nacionalidades_atorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_nacionalidades_ators to delete
     */
    where?: tbl_nacionalidades_atorWhereInput
  }


  /**
   * tbl_nacionalidades_ator without action
   */
  export type tbl_nacionalidades_atorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_ator
     */
    select?: tbl_nacionalidades_atorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_atorInclude<ExtArgs> | null
  }



  /**
   * Model tbl_nacionalidades_diretor
   */

  export type AggregateTbl_nacionalidades_diretor = {
    _count: Tbl_nacionalidades_diretorCountAggregateOutputType | null
    _avg: Tbl_nacionalidades_diretorAvgAggregateOutputType | null
    _sum: Tbl_nacionalidades_diretorSumAggregateOutputType | null
    _min: Tbl_nacionalidades_diretorMinAggregateOutputType | null
    _max: Tbl_nacionalidades_diretorMaxAggregateOutputType | null
  }

  export type Tbl_nacionalidades_diretorAvgAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_diretorSumAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_diretorMinAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_diretorMaxAggregateOutputType = {
    id: number | null
    id_diretor: number | null
    id_nacionalidade: number | null
  }

  export type Tbl_nacionalidades_diretorCountAggregateOutputType = {
    id: number
    id_diretor: number
    id_nacionalidade: number
    _all: number
  }


  export type Tbl_nacionalidades_diretorAvgAggregateInputType = {
    id?: true
    id_diretor?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_diretorSumAggregateInputType = {
    id?: true
    id_diretor?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_diretorMinAggregateInputType = {
    id?: true
    id_diretor?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_diretorMaxAggregateInputType = {
    id?: true
    id_diretor?: true
    id_nacionalidade?: true
  }

  export type Tbl_nacionalidades_diretorCountAggregateInputType = {
    id?: true
    id_diretor?: true
    id_nacionalidade?: true
    _all?: true
  }

  export type Tbl_nacionalidades_diretorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_nacionalidades_diretor to aggregate.
     */
    where?: tbl_nacionalidades_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_diretors to fetch.
     */
    orderBy?: tbl_nacionalidades_diretorOrderByWithRelationInput | tbl_nacionalidades_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_nacionalidades_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_diretors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_nacionalidades_diretors
    **/
    _count?: true | Tbl_nacionalidades_diretorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_nacionalidades_diretorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_nacionalidades_diretorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_nacionalidades_diretorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_nacionalidades_diretorMaxAggregateInputType
  }

  export type GetTbl_nacionalidades_diretorAggregateType<T extends Tbl_nacionalidades_diretorAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_nacionalidades_diretor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_nacionalidades_diretor[P]>
      : GetScalarType<T[P], AggregateTbl_nacionalidades_diretor[P]>
  }




  export type tbl_nacionalidades_diretorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_nacionalidades_diretorWhereInput
    orderBy?: tbl_nacionalidades_diretorOrderByWithAggregationInput | tbl_nacionalidades_diretorOrderByWithAggregationInput[]
    by: Tbl_nacionalidades_diretorScalarFieldEnum[] | Tbl_nacionalidades_diretorScalarFieldEnum
    having?: tbl_nacionalidades_diretorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_nacionalidades_diretorCountAggregateInputType | true
    _avg?: Tbl_nacionalidades_diretorAvgAggregateInputType
    _sum?: Tbl_nacionalidades_diretorSumAggregateInputType
    _min?: Tbl_nacionalidades_diretorMinAggregateInputType
    _max?: Tbl_nacionalidades_diretorMaxAggregateInputType
  }

  export type Tbl_nacionalidades_diretorGroupByOutputType = {
    id: number
    id_diretor: number
    id_nacionalidade: number
    _count: Tbl_nacionalidades_diretorCountAggregateOutputType | null
    _avg: Tbl_nacionalidades_diretorAvgAggregateOutputType | null
    _sum: Tbl_nacionalidades_diretorSumAggregateOutputType | null
    _min: Tbl_nacionalidades_diretorMinAggregateOutputType | null
    _max: Tbl_nacionalidades_diretorMaxAggregateOutputType | null
  }

  type GetTbl_nacionalidades_diretorGroupByPayload<T extends tbl_nacionalidades_diretorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_nacionalidades_diretorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_nacionalidades_diretorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_nacionalidades_diretorGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_nacionalidades_diretorGroupByOutputType[P]>
        }
      >
    >


  export type tbl_nacionalidades_diretorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_diretor?: boolean
    id_nacionalidade?: boolean
    tbl_diretores?: boolean | tbl_diretoresDefaultArgs<ExtArgs>
    tbl_nacionalidades?: boolean | tbl_nacionalidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_nacionalidades_diretor"]>

  export type tbl_nacionalidades_diretorSelectScalar = {
    id?: boolean
    id_diretor?: boolean
    id_nacionalidade?: boolean
  }

  export type tbl_nacionalidades_diretorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_diretores?: boolean | tbl_diretoresDefaultArgs<ExtArgs>
    tbl_nacionalidades?: boolean | tbl_nacionalidadesDefaultArgs<ExtArgs>
  }


  export type $tbl_nacionalidades_diretorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_nacionalidades_diretor"
    objects: {
      tbl_diretores: Prisma.$tbl_diretoresPayload<ExtArgs>
      tbl_nacionalidades: Prisma.$tbl_nacionalidadesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_diretor: number
      id_nacionalidade: number
    }, ExtArgs["result"]["tbl_nacionalidades_diretor"]>
    composites: {}
  }


  type tbl_nacionalidades_diretorGetPayload<S extends boolean | null | undefined | tbl_nacionalidades_diretorDefaultArgs> = $Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload, S>

  type tbl_nacionalidades_diretorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_nacionalidades_diretorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_nacionalidades_diretorCountAggregateInputType | true
    }

  export interface tbl_nacionalidades_diretorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_nacionalidades_diretor'], meta: { name: 'tbl_nacionalidades_diretor' } }
    /**
     * Find zero or one Tbl_nacionalidades_diretor that matches the filter.
     * @param {tbl_nacionalidades_diretorFindUniqueArgs} args - Arguments to find a Tbl_nacionalidades_diretor
     * @example
     * // Get one Tbl_nacionalidades_diretor
     * const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_nacionalidades_diretorFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_diretorFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_nacionalidades_diretor that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_nacionalidades_diretorFindUniqueOrThrowArgs} args - Arguments to find a Tbl_nacionalidades_diretor
     * @example
     * // Get one Tbl_nacionalidades_diretor
     * const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_nacionalidades_diretorFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_diretorFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_nacionalidades_diretor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_diretorFindFirstArgs} args - Arguments to find a Tbl_nacionalidades_diretor
     * @example
     * // Get one Tbl_nacionalidades_diretor
     * const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_nacionalidades_diretorFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_diretorFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_nacionalidades_diretor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_diretorFindFirstOrThrowArgs} args - Arguments to find a Tbl_nacionalidades_diretor
     * @example
     * // Get one Tbl_nacionalidades_diretor
     * const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_nacionalidades_diretorFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_diretorFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_nacionalidades_diretors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_diretorFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_nacionalidades_diretors
     * const tbl_nacionalidades_diretors = await prisma.tbl_nacionalidades_diretor.findMany()
     * 
     * // Get first 10 Tbl_nacionalidades_diretors
     * const tbl_nacionalidades_diretors = await prisma.tbl_nacionalidades_diretor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_nacionalidades_diretorWithIdOnly = await prisma.tbl_nacionalidades_diretor.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_nacionalidades_diretorFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_diretorFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_nacionalidades_diretor.
     * @param {tbl_nacionalidades_diretorCreateArgs} args - Arguments to create a Tbl_nacionalidades_diretor.
     * @example
     * // Create one Tbl_nacionalidades_diretor
     * const Tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.create({
     *   data: {
     *     // ... data to create a Tbl_nacionalidades_diretor
     *   }
     * })
     * 
    **/
    create<T extends tbl_nacionalidades_diretorCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_diretorCreateArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_nacionalidades_diretors.
     *     @param {tbl_nacionalidades_diretorCreateManyArgs} args - Arguments to create many Tbl_nacionalidades_diretors.
     *     @example
     *     // Create many Tbl_nacionalidades_diretors
     *     const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_nacionalidades_diretorCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_diretorCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_nacionalidades_diretor.
     * @param {tbl_nacionalidades_diretorDeleteArgs} args - Arguments to delete one Tbl_nacionalidades_diretor.
     * @example
     * // Delete one Tbl_nacionalidades_diretor
     * const Tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.delete({
     *   where: {
     *     // ... filter to delete one Tbl_nacionalidades_diretor
     *   }
     * })
     * 
    **/
    delete<T extends tbl_nacionalidades_diretorDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_diretorDeleteArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_nacionalidades_diretor.
     * @param {tbl_nacionalidades_diretorUpdateArgs} args - Arguments to update one Tbl_nacionalidades_diretor.
     * @example
     * // Update one Tbl_nacionalidades_diretor
     * const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_nacionalidades_diretorUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_diretorUpdateArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_nacionalidades_diretors.
     * @param {tbl_nacionalidades_diretorDeleteManyArgs} args - Arguments to filter Tbl_nacionalidades_diretors to delete.
     * @example
     * // Delete a few Tbl_nacionalidades_diretors
     * const { count } = await prisma.tbl_nacionalidades_diretor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_nacionalidades_diretorDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_nacionalidades_diretorDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_nacionalidades_diretors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_diretorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_nacionalidades_diretors
     * const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_nacionalidades_diretorUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_diretorUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_nacionalidades_diretor.
     * @param {tbl_nacionalidades_diretorUpsertArgs} args - Arguments to update or create a Tbl_nacionalidades_diretor.
     * @example
     * // Update or create a Tbl_nacionalidades_diretor
     * const tbl_nacionalidades_diretor = await prisma.tbl_nacionalidades_diretor.upsert({
     *   create: {
     *     // ... data to create a Tbl_nacionalidades_diretor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_nacionalidades_diretor we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_nacionalidades_diretorUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_nacionalidades_diretorUpsertArgs<ExtArgs>>
    ): Prisma__tbl_nacionalidades_diretorClient<$Result.GetResult<Prisma.$tbl_nacionalidades_diretorPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_nacionalidades_diretors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_diretorCountArgs} args - Arguments to filter Tbl_nacionalidades_diretors to count.
     * @example
     * // Count the number of Tbl_nacionalidades_diretors
     * const count = await prisma.tbl_nacionalidades_diretor.count({
     *   where: {
     *     // ... the filter for the Tbl_nacionalidades_diretors we want to count
     *   }
     * })
    **/
    count<T extends tbl_nacionalidades_diretorCountArgs>(
      args?: Subset<T, tbl_nacionalidades_diretorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_nacionalidades_diretorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_nacionalidades_diretor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_nacionalidades_diretorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_nacionalidades_diretorAggregateArgs>(args: Subset<T, Tbl_nacionalidades_diretorAggregateArgs>): Prisma.PrismaPromise<GetTbl_nacionalidades_diretorAggregateType<T>>

    /**
     * Group by Tbl_nacionalidades_diretor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_nacionalidades_diretorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_nacionalidades_diretorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_nacionalidades_diretorGroupByArgs['orderBy'] }
        : { orderBy?: tbl_nacionalidades_diretorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_nacionalidades_diretorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_nacionalidades_diretorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_nacionalidades_diretor model
   */
  readonly fields: tbl_nacionalidades_diretorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_nacionalidades_diretor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_nacionalidades_diretorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_diretores<T extends tbl_diretoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_diretoresDefaultArgs<ExtArgs>>): Prisma__tbl_diretoresClient<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_nacionalidades<T extends tbl_nacionalidadesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_nacionalidadesDefaultArgs<ExtArgs>>): Prisma__tbl_nacionalidadesClient<$Result.GetResult<Prisma.$tbl_nacionalidadesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_nacionalidades_diretor model
   */ 
  interface tbl_nacionalidades_diretorFieldRefs {
    readonly id: FieldRef<"tbl_nacionalidades_diretor", 'Int'>
    readonly id_diretor: FieldRef<"tbl_nacionalidades_diretor", 'Int'>
    readonly id_nacionalidade: FieldRef<"tbl_nacionalidades_diretor", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbl_nacionalidades_diretor findUnique
   */
  export type tbl_nacionalidades_diretorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_diretor to fetch.
     */
    where: tbl_nacionalidades_diretorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_diretor findUniqueOrThrow
   */
  export type tbl_nacionalidades_diretorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_diretor to fetch.
     */
    where: tbl_nacionalidades_diretorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_diretor findFirst
   */
  export type tbl_nacionalidades_diretorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_diretor to fetch.
     */
    where?: tbl_nacionalidades_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_diretors to fetch.
     */
    orderBy?: tbl_nacionalidades_diretorOrderByWithRelationInput | tbl_nacionalidades_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_nacionalidades_diretors.
     */
    cursor?: tbl_nacionalidades_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_diretors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_nacionalidades_diretors.
     */
    distinct?: Tbl_nacionalidades_diretorScalarFieldEnum | Tbl_nacionalidades_diretorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades_diretor findFirstOrThrow
   */
  export type tbl_nacionalidades_diretorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_diretor to fetch.
     */
    where?: tbl_nacionalidades_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_diretors to fetch.
     */
    orderBy?: tbl_nacionalidades_diretorOrderByWithRelationInput | tbl_nacionalidades_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_nacionalidades_diretors.
     */
    cursor?: tbl_nacionalidades_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_diretors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_nacionalidades_diretors.
     */
    distinct?: Tbl_nacionalidades_diretorScalarFieldEnum | Tbl_nacionalidades_diretorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades_diretor findMany
   */
  export type tbl_nacionalidades_diretorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_nacionalidades_diretors to fetch.
     */
    where?: tbl_nacionalidades_diretorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_nacionalidades_diretors to fetch.
     */
    orderBy?: tbl_nacionalidades_diretorOrderByWithRelationInput | tbl_nacionalidades_diretorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_nacionalidades_diretors.
     */
    cursor?: tbl_nacionalidades_diretorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_nacionalidades_diretors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_nacionalidades_diretors.
     */
    skip?: number
    distinct?: Tbl_nacionalidades_diretorScalarFieldEnum | Tbl_nacionalidades_diretorScalarFieldEnum[]
  }


  /**
   * tbl_nacionalidades_diretor create
   */
  export type tbl_nacionalidades_diretorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_nacionalidades_diretor.
     */
    data: XOR<tbl_nacionalidades_diretorCreateInput, tbl_nacionalidades_diretorUncheckedCreateInput>
  }


  /**
   * tbl_nacionalidades_diretor createMany
   */
  export type tbl_nacionalidades_diretorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_nacionalidades_diretors.
     */
    data: tbl_nacionalidades_diretorCreateManyInput | tbl_nacionalidades_diretorCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_nacionalidades_diretor update
   */
  export type tbl_nacionalidades_diretorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_nacionalidades_diretor.
     */
    data: XOR<tbl_nacionalidades_diretorUpdateInput, tbl_nacionalidades_diretorUncheckedUpdateInput>
    /**
     * Choose, which tbl_nacionalidades_diretor to update.
     */
    where: tbl_nacionalidades_diretorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_diretor updateMany
   */
  export type tbl_nacionalidades_diretorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_nacionalidades_diretors.
     */
    data: XOR<tbl_nacionalidades_diretorUpdateManyMutationInput, tbl_nacionalidades_diretorUncheckedUpdateManyInput>
    /**
     * Filter which tbl_nacionalidades_diretors to update
     */
    where?: tbl_nacionalidades_diretorWhereInput
  }


  /**
   * tbl_nacionalidades_diretor upsert
   */
  export type tbl_nacionalidades_diretorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_nacionalidades_diretor to update in case it exists.
     */
    where: tbl_nacionalidades_diretorWhereUniqueInput
    /**
     * In case the tbl_nacionalidades_diretor found by the `where` argument doesn't exist, create a new tbl_nacionalidades_diretor with this data.
     */
    create: XOR<tbl_nacionalidades_diretorCreateInput, tbl_nacionalidades_diretorUncheckedCreateInput>
    /**
     * In case the tbl_nacionalidades_diretor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_nacionalidades_diretorUpdateInput, tbl_nacionalidades_diretorUncheckedUpdateInput>
  }


  /**
   * tbl_nacionalidades_diretor delete
   */
  export type tbl_nacionalidades_diretorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
    /**
     * Filter which tbl_nacionalidades_diretor to delete.
     */
    where: tbl_nacionalidades_diretorWhereUniqueInput
  }


  /**
   * tbl_nacionalidades_diretor deleteMany
   */
  export type tbl_nacionalidades_diretorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_nacionalidades_diretors to delete
     */
    where?: tbl_nacionalidades_diretorWhereInput
  }


  /**
   * tbl_nacionalidades_diretor without action
   */
  export type tbl_nacionalidades_diretorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_nacionalidades_diretor
     */
    select?: tbl_nacionalidades_diretorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_nacionalidades_diretorInclude<ExtArgs> | null
  }



  /**
   * Model tbl_sexo
   */

  export type AggregateTbl_sexo = {
    _count: Tbl_sexoCountAggregateOutputType | null
    _avg: Tbl_sexoAvgAggregateOutputType | null
    _sum: Tbl_sexoSumAggregateOutputType | null
    _min: Tbl_sexoMinAggregateOutputType | null
    _max: Tbl_sexoMaxAggregateOutputType | null
  }

  export type Tbl_sexoAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_sexoSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_sexoMinAggregateOutputType = {
    id: number | null
    sexo: string | null
  }

  export type Tbl_sexoMaxAggregateOutputType = {
    id: number | null
    sexo: string | null
  }

  export type Tbl_sexoCountAggregateOutputType = {
    id: number
    sexo: number
    _all: number
  }


  export type Tbl_sexoAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_sexoSumAggregateInputType = {
    id?: true
  }

  export type Tbl_sexoMinAggregateInputType = {
    id?: true
    sexo?: true
  }

  export type Tbl_sexoMaxAggregateInputType = {
    id?: true
    sexo?: true
  }

  export type Tbl_sexoCountAggregateInputType = {
    id?: true
    sexo?: true
    _all?: true
  }

  export type Tbl_sexoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sexo to aggregate.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_sexos
    **/
    _count?: true | Tbl_sexoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_sexoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_sexoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_sexoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_sexoMaxAggregateInputType
  }

  export type GetTbl_sexoAggregateType<T extends Tbl_sexoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_sexo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_sexo[P]>
      : GetScalarType<T[P], AggregateTbl_sexo[P]>
  }




  export type tbl_sexoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_sexoWhereInput
    orderBy?: tbl_sexoOrderByWithAggregationInput | tbl_sexoOrderByWithAggregationInput[]
    by: Tbl_sexoScalarFieldEnum[] | Tbl_sexoScalarFieldEnum
    having?: tbl_sexoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_sexoCountAggregateInputType | true
    _avg?: Tbl_sexoAvgAggregateInputType
    _sum?: Tbl_sexoSumAggregateInputType
    _min?: Tbl_sexoMinAggregateInputType
    _max?: Tbl_sexoMaxAggregateInputType
  }

  export type Tbl_sexoGroupByOutputType = {
    id: number
    sexo: string
    _count: Tbl_sexoCountAggregateOutputType | null
    _avg: Tbl_sexoAvgAggregateOutputType | null
    _sum: Tbl_sexoSumAggregateOutputType | null
    _min: Tbl_sexoMinAggregateOutputType | null
    _max: Tbl_sexoMaxAggregateOutputType | null
  }

  type GetTbl_sexoGroupByPayload<T extends tbl_sexoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_sexoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_sexoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_sexoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_sexoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_sexoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sexo?: boolean
    tbl_atores?: boolean | tbl_sexo$tbl_atoresArgs<ExtArgs>
    tbl_diretores?: boolean | tbl_sexo$tbl_diretoresArgs<ExtArgs>
    _count?: boolean | Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_sexo"]>

  export type tbl_sexoSelectScalar = {
    id?: boolean
    sexo?: boolean
  }

  export type tbl_sexoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_atores?: boolean | tbl_sexo$tbl_atoresArgs<ExtArgs>
    tbl_diretores?: boolean | tbl_sexo$tbl_diretoresArgs<ExtArgs>
    _count?: boolean | Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_sexoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_sexo"
    objects: {
      tbl_atores: Prisma.$tbl_atoresPayload<ExtArgs>[]
      tbl_diretores: Prisma.$tbl_diretoresPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sexo: string
    }, ExtArgs["result"]["tbl_sexo"]>
    composites: {}
  }


  type tbl_sexoGetPayload<S extends boolean | null | undefined | tbl_sexoDefaultArgs> = $Result.GetResult<Prisma.$tbl_sexoPayload, S>

  type tbl_sexoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_sexoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_sexoCountAggregateInputType | true
    }

  export interface tbl_sexoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_sexo'], meta: { name: 'tbl_sexo' } }
    /**
     * Find zero or one Tbl_sexo that matches the filter.
     * @param {tbl_sexoFindUniqueArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_sexoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_sexo that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbl_sexoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_sexoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_sexo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindFirstArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_sexoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_sexo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindFirstOrThrowArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_sexoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_sexos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_sexos
     * const tbl_sexos = await prisma.tbl_sexo.findMany()
     * 
     * // Get first 10 Tbl_sexos
     * const tbl_sexos = await prisma.tbl_sexo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_sexoWithIdOnly = await prisma.tbl_sexo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_sexoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_sexo.
     * @param {tbl_sexoCreateArgs} args - Arguments to create a Tbl_sexo.
     * @example
     * // Create one Tbl_sexo
     * const Tbl_sexo = await prisma.tbl_sexo.create({
     *   data: {
     *     // ... data to create a Tbl_sexo
     *   }
     * })
     * 
    **/
    create<T extends tbl_sexoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoCreateArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_sexos.
     *     @param {tbl_sexoCreateManyArgs} args - Arguments to create many Tbl_sexos.
     *     @example
     *     // Create many Tbl_sexos
     *     const tbl_sexo = await prisma.tbl_sexo.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbl_sexoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_sexo.
     * @param {tbl_sexoDeleteArgs} args - Arguments to delete one Tbl_sexo.
     * @example
     * // Delete one Tbl_sexo
     * const Tbl_sexo = await prisma.tbl_sexo.delete({
     *   where: {
     *     // ... filter to delete one Tbl_sexo
     *   }
     * })
     * 
    **/
    delete<T extends tbl_sexoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoDeleteArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_sexo.
     * @param {tbl_sexoUpdateArgs} args - Arguments to update one Tbl_sexo.
     * @example
     * // Update one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_sexoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoUpdateArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_sexos.
     * @param {tbl_sexoDeleteManyArgs} args - Arguments to filter Tbl_sexos to delete.
     * @example
     * // Delete a few Tbl_sexos
     * const { count } = await prisma.tbl_sexo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_sexoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_sexos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_sexos
     * const tbl_sexo = await prisma.tbl_sexo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_sexoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_sexo.
     * @param {tbl_sexoUpsertArgs} args - Arguments to update or create a Tbl_sexo.
     * @example
     * // Update or create a Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.upsert({
     *   create: {
     *     // ... data to create a Tbl_sexo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_sexo we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_sexoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoUpsertArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_sexos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoCountArgs} args - Arguments to filter Tbl_sexos to count.
     * @example
     * // Count the number of Tbl_sexos
     * const count = await prisma.tbl_sexo.count({
     *   where: {
     *     // ... the filter for the Tbl_sexos we want to count
     *   }
     * })
    **/
    count<T extends tbl_sexoCountArgs>(
      args?: Subset<T, tbl_sexoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_sexoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_sexo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_sexoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_sexoAggregateArgs>(args: Subset<T, Tbl_sexoAggregateArgs>): Prisma.PrismaPromise<GetTbl_sexoAggregateType<T>>

    /**
     * Group by Tbl_sexo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_sexoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_sexoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_sexoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_sexoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_sexoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_sexo model
   */
  readonly fields: tbl_sexoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_sexo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_sexoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_atores<T extends tbl_sexo$tbl_atoresArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_atoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_atoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_diretores<T extends tbl_sexo$tbl_diretoresArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_diretoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_diretoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_sexo model
   */ 
  interface tbl_sexoFieldRefs {
    readonly id: FieldRef<"tbl_sexo", 'Int'>
    readonly sexo: FieldRef<"tbl_sexo", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbl_sexo findUnique
   */
  export type tbl_sexoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where: tbl_sexoWhereUniqueInput
  }


  /**
   * tbl_sexo findUniqueOrThrow
   */
  export type tbl_sexoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where: tbl_sexoWhereUniqueInput
  }


  /**
   * tbl_sexo findFirst
   */
  export type tbl_sexoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sexos.
     */
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }


  /**
   * tbl_sexo findFirstOrThrow
   */
  export type tbl_sexoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sexos.
     */
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }


  /**
   * tbl_sexo findMany
   */
  export type tbl_sexoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexos to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }


  /**
   * tbl_sexo create
   */
  export type tbl_sexoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_sexo.
     */
    data: XOR<tbl_sexoCreateInput, tbl_sexoUncheckedCreateInput>
  }


  /**
   * tbl_sexo createMany
   */
  export type tbl_sexoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_sexos.
     */
    data: tbl_sexoCreateManyInput | tbl_sexoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbl_sexo update
   */
  export type tbl_sexoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_sexo.
     */
    data: XOR<tbl_sexoUpdateInput, tbl_sexoUncheckedUpdateInput>
    /**
     * Choose, which tbl_sexo to update.
     */
    where: tbl_sexoWhereUniqueInput
  }


  /**
   * tbl_sexo updateMany
   */
  export type tbl_sexoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_sexos.
     */
    data: XOR<tbl_sexoUpdateManyMutationInput, tbl_sexoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_sexos to update
     */
    where?: tbl_sexoWhereInput
  }


  /**
   * tbl_sexo upsert
   */
  export type tbl_sexoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_sexo to update in case it exists.
     */
    where: tbl_sexoWhereUniqueInput
    /**
     * In case the tbl_sexo found by the `where` argument doesn't exist, create a new tbl_sexo with this data.
     */
    create: XOR<tbl_sexoCreateInput, tbl_sexoUncheckedCreateInput>
    /**
     * In case the tbl_sexo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_sexoUpdateInput, tbl_sexoUncheckedUpdateInput>
  }


  /**
   * tbl_sexo delete
   */
  export type tbl_sexoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter which tbl_sexo to delete.
     */
    where: tbl_sexoWhereUniqueInput
  }


  /**
   * tbl_sexo deleteMany
   */
  export type tbl_sexoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sexos to delete
     */
    where?: tbl_sexoWhereInput
  }


  /**
   * tbl_sexo.tbl_atores
   */
  export type tbl_sexo$tbl_atoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_atores
     */
    select?: tbl_atoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_atoresInclude<ExtArgs> | null
    where?: tbl_atoresWhereInput
    orderBy?: tbl_atoresOrderByWithRelationInput | tbl_atoresOrderByWithRelationInput[]
    cursor?: tbl_atoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_atoresScalarFieldEnum | Tbl_atoresScalarFieldEnum[]
  }


  /**
   * tbl_sexo.tbl_diretores
   */
  export type tbl_sexo$tbl_diretoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_diretores
     */
    select?: tbl_diretoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_diretoresInclude<ExtArgs> | null
    where?: tbl_diretoresWhereInput
    orderBy?: tbl_diretoresOrderByWithRelationInput | tbl_diretoresOrderByWithRelationInput[]
    cursor?: tbl_diretoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_diretoresScalarFieldEnum | Tbl_diretoresScalarFieldEnum[]
  }


  /**
   * tbl_sexo without action
   */
  export type tbl_sexoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbl_sexoInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Tbl_filmesScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    sinopse: 'sinopse',
    duracao: 'duracao',
    data_lancamento: 'data_lancamento',
    data_relancamento: 'data_relancamento',
    foto_capa: 'foto_capa',
    valor_unitario: 'valor_unitario',
    id_classificacao: 'id_classificacao'
  };

  export type Tbl_filmesScalarFieldEnum = (typeof Tbl_filmesScalarFieldEnum)[keyof typeof Tbl_filmesScalarFieldEnum]


  export const Tbl_atoresScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    foto_ator: 'foto_ator',
    dt_nasc: 'dt_nasc',
    dt_falec: 'dt_falec',
    sobre: 'sobre',
    id_sexo: 'id_sexo'
  };

  export type Tbl_atoresScalarFieldEnum = (typeof Tbl_atoresScalarFieldEnum)[keyof typeof Tbl_atoresScalarFieldEnum]


  export const Tbl_classificacoesScalarFieldEnum: {
    id: 'id',
    sigla: 'sigla',
    classificacao: 'classificacao',
    legenda: 'legenda',
    imagem: 'imagem'
  };

  export type Tbl_classificacoesScalarFieldEnum = (typeof Tbl_classificacoesScalarFieldEnum)[keyof typeof Tbl_classificacoesScalarFieldEnum]


  export const Tbl_diretoresScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    foto_diretor: 'foto_diretor',
    dt_nasc: 'dt_nasc',
    dt_falec: 'dt_falec',
    sobre: 'sobre',
    id_sexo: 'id_sexo'
  };

  export type Tbl_diretoresScalarFieldEnum = (typeof Tbl_diretoresScalarFieldEnum)[keyof typeof Tbl_diretoresScalarFieldEnum]


  export const Tbl_filmes_atorScalarFieldEnum: {
    id: 'id',
    id_ator: 'id_ator',
    id_filme: 'id_filme'
  };

  export type Tbl_filmes_atorScalarFieldEnum = (typeof Tbl_filmes_atorScalarFieldEnum)[keyof typeof Tbl_filmes_atorScalarFieldEnum]


  export const Tbl_filmes_diretorScalarFieldEnum: {
    id: 'id',
    id_diretor: 'id_diretor',
    id_filme: 'id_filme'
  };

  export type Tbl_filmes_diretorScalarFieldEnum = (typeof Tbl_filmes_diretorScalarFieldEnum)[keyof typeof Tbl_filmes_diretorScalarFieldEnum]


  export const Tbl_genero_filmeScalarFieldEnum: {
    id: 'id',
    id_genero: 'id_genero',
    id_filme: 'id_filme'
  };

  export type Tbl_genero_filmeScalarFieldEnum = (typeof Tbl_genero_filmeScalarFieldEnum)[keyof typeof Tbl_genero_filmeScalarFieldEnum]


  export const Tbl_generosScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_generosScalarFieldEnum = (typeof Tbl_generosScalarFieldEnum)[keyof typeof Tbl_generosScalarFieldEnum]


  export const Tbl_nacionalidadesScalarFieldEnum: {
    id: 'id',
    pais_origem: 'pais_origem',
    nacionalidade: 'nacionalidade'
  };

  export type Tbl_nacionalidadesScalarFieldEnum = (typeof Tbl_nacionalidadesScalarFieldEnum)[keyof typeof Tbl_nacionalidadesScalarFieldEnum]


  export const Tbl_nacionalidades_atorScalarFieldEnum: {
    id: 'id',
    id_ator: 'id_ator',
    id_nacionalidade: 'id_nacionalidade'
  };

  export type Tbl_nacionalidades_atorScalarFieldEnum = (typeof Tbl_nacionalidades_atorScalarFieldEnum)[keyof typeof Tbl_nacionalidades_atorScalarFieldEnum]


  export const Tbl_nacionalidades_diretorScalarFieldEnum: {
    id: 'id',
    id_diretor: 'id_diretor',
    id_nacionalidade: 'id_nacionalidade'
  };

  export type Tbl_nacionalidades_diretorScalarFieldEnum = (typeof Tbl_nacionalidades_diretorScalarFieldEnum)[keyof typeof Tbl_nacionalidades_diretorScalarFieldEnum]


  export const Tbl_sexoScalarFieldEnum: {
    id: 'id',
    sexo: 'sexo'
  };

  export type Tbl_sexoScalarFieldEnum = (typeof Tbl_sexoScalarFieldEnum)[keyof typeof Tbl_sexoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type tbl_filmesWhereInput = {
    AND?: tbl_filmesWhereInput | tbl_filmesWhereInput[]
    OR?: tbl_filmesWhereInput[]
    NOT?: tbl_filmesWhereInput | tbl_filmesWhereInput[]
    id?: IntFilter<"tbl_filmes"> | number
    nome?: StringFilter<"tbl_filmes"> | string
    sinopse?: StringFilter<"tbl_filmes"> | string
    duracao?: DateTimeFilter<"tbl_filmes"> | Date | string
    data_lancamento?: DateTimeFilter<"tbl_filmes"> | Date | string
    data_relancamento?: DateTimeNullableFilter<"tbl_filmes"> | Date | string | null
    foto_capa?: StringFilter<"tbl_filmes"> | string
    valor_unitario?: FloatNullableFilter<"tbl_filmes"> | number | null
    id_classificacao?: IntFilter<"tbl_filmes"> | number
    tbl_classificacoes?: XOR<Tbl_classificacoesRelationFilter, tbl_classificacoesWhereInput>
    tbl_filmes_ator?: Tbl_filmes_atorListRelationFilter
    tbl_filmes_diretor?: Tbl_filmes_diretorListRelationFilter
    tbl_genero_filme?: Tbl_genero_filmeListRelationFilter
  }

  export type tbl_filmesOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    sinopse?: SortOrder
    duracao?: SortOrder
    data_lancamento?: SortOrder
    data_relancamento?: SortOrderInput | SortOrder
    foto_capa?: SortOrder
    valor_unitario?: SortOrderInput | SortOrder
    id_classificacao?: SortOrder
    tbl_classificacoes?: tbl_classificacoesOrderByWithRelationInput
    tbl_filmes_ator?: tbl_filmes_atorOrderByRelationAggregateInput
    tbl_filmes_diretor?: tbl_filmes_diretorOrderByRelationAggregateInput
    tbl_genero_filme?: tbl_genero_filmeOrderByRelationAggregateInput
  }

  export type tbl_filmesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_filmesWhereInput | tbl_filmesWhereInput[]
    OR?: tbl_filmesWhereInput[]
    NOT?: tbl_filmesWhereInput | tbl_filmesWhereInput[]
    nome?: StringFilter<"tbl_filmes"> | string
    sinopse?: StringFilter<"tbl_filmes"> | string
    duracao?: DateTimeFilter<"tbl_filmes"> | Date | string
    data_lancamento?: DateTimeFilter<"tbl_filmes"> | Date | string
    data_relancamento?: DateTimeNullableFilter<"tbl_filmes"> | Date | string | null
    foto_capa?: StringFilter<"tbl_filmes"> | string
    valor_unitario?: FloatNullableFilter<"tbl_filmes"> | number | null
    id_classificacao?: IntFilter<"tbl_filmes"> | number
    tbl_classificacoes?: XOR<Tbl_classificacoesRelationFilter, tbl_classificacoesWhereInput>
    tbl_filmes_ator?: Tbl_filmes_atorListRelationFilter
    tbl_filmes_diretor?: Tbl_filmes_diretorListRelationFilter
    tbl_genero_filme?: Tbl_genero_filmeListRelationFilter
  }, "id" | "id">

  export type tbl_filmesOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    sinopse?: SortOrder
    duracao?: SortOrder
    data_lancamento?: SortOrder
    data_relancamento?: SortOrderInput | SortOrder
    foto_capa?: SortOrder
    valor_unitario?: SortOrderInput | SortOrder
    id_classificacao?: SortOrder
    _count?: tbl_filmesCountOrderByAggregateInput
    _avg?: tbl_filmesAvgOrderByAggregateInput
    _max?: tbl_filmesMaxOrderByAggregateInput
    _min?: tbl_filmesMinOrderByAggregateInput
    _sum?: tbl_filmesSumOrderByAggregateInput
  }

  export type tbl_filmesScalarWhereWithAggregatesInput = {
    AND?: tbl_filmesScalarWhereWithAggregatesInput | tbl_filmesScalarWhereWithAggregatesInput[]
    OR?: tbl_filmesScalarWhereWithAggregatesInput[]
    NOT?: tbl_filmesScalarWhereWithAggregatesInput | tbl_filmesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_filmes"> | number
    nome?: StringWithAggregatesFilter<"tbl_filmes"> | string
    sinopse?: StringWithAggregatesFilter<"tbl_filmes"> | string
    duracao?: DateTimeWithAggregatesFilter<"tbl_filmes"> | Date | string
    data_lancamento?: DateTimeWithAggregatesFilter<"tbl_filmes"> | Date | string
    data_relancamento?: DateTimeNullableWithAggregatesFilter<"tbl_filmes"> | Date | string | null
    foto_capa?: StringWithAggregatesFilter<"tbl_filmes"> | string
    valor_unitario?: FloatNullableWithAggregatesFilter<"tbl_filmes"> | number | null
    id_classificacao?: IntWithAggregatesFilter<"tbl_filmes"> | number
  }

  export type tbl_atoresWhereInput = {
    AND?: tbl_atoresWhereInput | tbl_atoresWhereInput[]
    OR?: tbl_atoresWhereInput[]
    NOT?: tbl_atoresWhereInput | tbl_atoresWhereInput[]
    id?: IntFilter<"tbl_atores"> | number
    nome?: StringFilter<"tbl_atores"> | string
    foto_ator?: StringFilter<"tbl_atores"> | string
    dt_nasc?: DateTimeFilter<"tbl_atores"> | Date | string
    dt_falec?: DateTimeNullableFilter<"tbl_atores"> | Date | string | null
    sobre?: StringNullableFilter<"tbl_atores"> | string | null
    id_sexo?: IntFilter<"tbl_atores"> | number
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
    tbl_filmes_ator?: Tbl_filmes_atorListRelationFilter
    tbl_nacionalidades_ator?: Tbl_nacionalidades_atorListRelationFilter
  }

  export type tbl_atoresOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_ator?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    id_sexo?: SortOrder
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
    tbl_filmes_ator?: tbl_filmes_atorOrderByRelationAggregateInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorOrderByRelationAggregateInput
  }

  export type tbl_atoresWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_atoresWhereInput | tbl_atoresWhereInput[]
    OR?: tbl_atoresWhereInput[]
    NOT?: tbl_atoresWhereInput | tbl_atoresWhereInput[]
    nome?: StringFilter<"tbl_atores"> | string
    foto_ator?: StringFilter<"tbl_atores"> | string
    dt_nasc?: DateTimeFilter<"tbl_atores"> | Date | string
    dt_falec?: DateTimeNullableFilter<"tbl_atores"> | Date | string | null
    sobre?: StringNullableFilter<"tbl_atores"> | string | null
    id_sexo?: IntFilter<"tbl_atores"> | number
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
    tbl_filmes_ator?: Tbl_filmes_atorListRelationFilter
    tbl_nacionalidades_ator?: Tbl_nacionalidades_atorListRelationFilter
  }, "id">

  export type tbl_atoresOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_ator?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    id_sexo?: SortOrder
    _count?: tbl_atoresCountOrderByAggregateInput
    _avg?: tbl_atoresAvgOrderByAggregateInput
    _max?: tbl_atoresMaxOrderByAggregateInput
    _min?: tbl_atoresMinOrderByAggregateInput
    _sum?: tbl_atoresSumOrderByAggregateInput
  }

  export type tbl_atoresScalarWhereWithAggregatesInput = {
    AND?: tbl_atoresScalarWhereWithAggregatesInput | tbl_atoresScalarWhereWithAggregatesInput[]
    OR?: tbl_atoresScalarWhereWithAggregatesInput[]
    NOT?: tbl_atoresScalarWhereWithAggregatesInput | tbl_atoresScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_atores"> | number
    nome?: StringWithAggregatesFilter<"tbl_atores"> | string
    foto_ator?: StringWithAggregatesFilter<"tbl_atores"> | string
    dt_nasc?: DateTimeWithAggregatesFilter<"tbl_atores"> | Date | string
    dt_falec?: DateTimeNullableWithAggregatesFilter<"tbl_atores"> | Date | string | null
    sobre?: StringNullableWithAggregatesFilter<"tbl_atores"> | string | null
    id_sexo?: IntWithAggregatesFilter<"tbl_atores"> | number
  }

  export type tbl_classificacoesWhereInput = {
    AND?: tbl_classificacoesWhereInput | tbl_classificacoesWhereInput[]
    OR?: tbl_classificacoesWhereInput[]
    NOT?: tbl_classificacoesWhereInput | tbl_classificacoesWhereInput[]
    id?: IntFilter<"tbl_classificacoes"> | number
    sigla?: StringFilter<"tbl_classificacoes"> | string
    classificacao?: StringFilter<"tbl_classificacoes"> | string
    legenda?: StringFilter<"tbl_classificacoes"> | string
    imagem?: StringFilter<"tbl_classificacoes"> | string
    tbl_filmes?: Tbl_filmesListRelationFilter
  }

  export type tbl_classificacoesOrderByWithRelationInput = {
    id?: SortOrder
    sigla?: SortOrder
    classificacao?: SortOrder
    legenda?: SortOrder
    imagem?: SortOrder
    tbl_filmes?: tbl_filmesOrderByRelationAggregateInput
  }

  export type tbl_classificacoesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_classificacoesWhereInput | tbl_classificacoesWhereInput[]
    OR?: tbl_classificacoesWhereInput[]
    NOT?: tbl_classificacoesWhereInput | tbl_classificacoesWhereInput[]
    sigla?: StringFilter<"tbl_classificacoes"> | string
    classificacao?: StringFilter<"tbl_classificacoes"> | string
    legenda?: StringFilter<"tbl_classificacoes"> | string
    imagem?: StringFilter<"tbl_classificacoes"> | string
    tbl_filmes?: Tbl_filmesListRelationFilter
  }, "id">

  export type tbl_classificacoesOrderByWithAggregationInput = {
    id?: SortOrder
    sigla?: SortOrder
    classificacao?: SortOrder
    legenda?: SortOrder
    imagem?: SortOrder
    _count?: tbl_classificacoesCountOrderByAggregateInput
    _avg?: tbl_classificacoesAvgOrderByAggregateInput
    _max?: tbl_classificacoesMaxOrderByAggregateInput
    _min?: tbl_classificacoesMinOrderByAggregateInput
    _sum?: tbl_classificacoesSumOrderByAggregateInput
  }

  export type tbl_classificacoesScalarWhereWithAggregatesInput = {
    AND?: tbl_classificacoesScalarWhereWithAggregatesInput | tbl_classificacoesScalarWhereWithAggregatesInput[]
    OR?: tbl_classificacoesScalarWhereWithAggregatesInput[]
    NOT?: tbl_classificacoesScalarWhereWithAggregatesInput | tbl_classificacoesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_classificacoes"> | number
    sigla?: StringWithAggregatesFilter<"tbl_classificacoes"> | string
    classificacao?: StringWithAggregatesFilter<"tbl_classificacoes"> | string
    legenda?: StringWithAggregatesFilter<"tbl_classificacoes"> | string
    imagem?: StringWithAggregatesFilter<"tbl_classificacoes"> | string
  }

  export type tbl_diretoresWhereInput = {
    AND?: tbl_diretoresWhereInput | tbl_diretoresWhereInput[]
    OR?: tbl_diretoresWhereInput[]
    NOT?: tbl_diretoresWhereInput | tbl_diretoresWhereInput[]
    id?: IntFilter<"tbl_diretores"> | number
    nome?: StringFilter<"tbl_diretores"> | string
    foto_diretor?: StringFilter<"tbl_diretores"> | string
    dt_nasc?: DateTimeFilter<"tbl_diretores"> | Date | string
    dt_falec?: DateTimeNullableFilter<"tbl_diretores"> | Date | string | null
    sobre?: StringNullableFilter<"tbl_diretores"> | string | null
    id_sexo?: IntNullableFilter<"tbl_diretores"> | number | null
    tbl_sexo?: XOR<Tbl_sexoNullableRelationFilter, tbl_sexoWhereInput> | null
    tbl_filmes_diretor?: Tbl_filmes_diretorListRelationFilter
    tbl_nacionalidades_diretor?: Tbl_nacionalidades_diretorListRelationFilter
  }

  export type tbl_diretoresOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_diretor?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    id_sexo?: SortOrderInput | SortOrder
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
    tbl_filmes_diretor?: tbl_filmes_diretorOrderByRelationAggregateInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorOrderByRelationAggregateInput
  }

  export type tbl_diretoresWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_diretoresWhereInput | tbl_diretoresWhereInput[]
    OR?: tbl_diretoresWhereInput[]
    NOT?: tbl_diretoresWhereInput | tbl_diretoresWhereInput[]
    nome?: StringFilter<"tbl_diretores"> | string
    foto_diretor?: StringFilter<"tbl_diretores"> | string
    dt_nasc?: DateTimeFilter<"tbl_diretores"> | Date | string
    dt_falec?: DateTimeNullableFilter<"tbl_diretores"> | Date | string | null
    sobre?: StringNullableFilter<"tbl_diretores"> | string | null
    id_sexo?: IntNullableFilter<"tbl_diretores"> | number | null
    tbl_sexo?: XOR<Tbl_sexoNullableRelationFilter, tbl_sexoWhereInput> | null
    tbl_filmes_diretor?: Tbl_filmes_diretorListRelationFilter
    tbl_nacionalidades_diretor?: Tbl_nacionalidades_diretorListRelationFilter
  }, "id">

  export type tbl_diretoresOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_diretor?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    id_sexo?: SortOrderInput | SortOrder
    _count?: tbl_diretoresCountOrderByAggregateInput
    _avg?: tbl_diretoresAvgOrderByAggregateInput
    _max?: tbl_diretoresMaxOrderByAggregateInput
    _min?: tbl_diretoresMinOrderByAggregateInput
    _sum?: tbl_diretoresSumOrderByAggregateInput
  }

  export type tbl_diretoresScalarWhereWithAggregatesInput = {
    AND?: tbl_diretoresScalarWhereWithAggregatesInput | tbl_diretoresScalarWhereWithAggregatesInput[]
    OR?: tbl_diretoresScalarWhereWithAggregatesInput[]
    NOT?: tbl_diretoresScalarWhereWithAggregatesInput | tbl_diretoresScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_diretores"> | number
    nome?: StringWithAggregatesFilter<"tbl_diretores"> | string
    foto_diretor?: StringWithAggregatesFilter<"tbl_diretores"> | string
    dt_nasc?: DateTimeWithAggregatesFilter<"tbl_diretores"> | Date | string
    dt_falec?: DateTimeNullableWithAggregatesFilter<"tbl_diretores"> | Date | string | null
    sobre?: StringNullableWithAggregatesFilter<"tbl_diretores"> | string | null
    id_sexo?: IntNullableWithAggregatesFilter<"tbl_diretores"> | number | null
  }

  export type tbl_filmes_atorWhereInput = {
    AND?: tbl_filmes_atorWhereInput | tbl_filmes_atorWhereInput[]
    OR?: tbl_filmes_atorWhereInput[]
    NOT?: tbl_filmes_atorWhereInput | tbl_filmes_atorWhereInput[]
    id?: IntFilter<"tbl_filmes_ator"> | number
    id_ator?: IntFilter<"tbl_filmes_ator"> | number
    id_filme?: IntFilter<"tbl_filmes_ator"> | number
    tbl_filmes?: XOR<Tbl_filmesRelationFilter, tbl_filmesWhereInput>
    tbl_atores?: XOR<Tbl_atoresRelationFilter, tbl_atoresWhereInput>
  }

  export type tbl_filmes_atorOrderByWithRelationInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_filme?: SortOrder
    tbl_filmes?: tbl_filmesOrderByWithRelationInput
    tbl_atores?: tbl_atoresOrderByWithRelationInput
  }

  export type tbl_filmes_atorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_filmes_atorWhereInput | tbl_filmes_atorWhereInput[]
    OR?: tbl_filmes_atorWhereInput[]
    NOT?: tbl_filmes_atorWhereInput | tbl_filmes_atorWhereInput[]
    id_ator?: IntFilter<"tbl_filmes_ator"> | number
    id_filme?: IntFilter<"tbl_filmes_ator"> | number
    tbl_filmes?: XOR<Tbl_filmesRelationFilter, tbl_filmesWhereInput>
    tbl_atores?: XOR<Tbl_atoresRelationFilter, tbl_atoresWhereInput>
  }, "id">

  export type tbl_filmes_atorOrderByWithAggregationInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_filme?: SortOrder
    _count?: tbl_filmes_atorCountOrderByAggregateInput
    _avg?: tbl_filmes_atorAvgOrderByAggregateInput
    _max?: tbl_filmes_atorMaxOrderByAggregateInput
    _min?: tbl_filmes_atorMinOrderByAggregateInput
    _sum?: tbl_filmes_atorSumOrderByAggregateInput
  }

  export type tbl_filmes_atorScalarWhereWithAggregatesInput = {
    AND?: tbl_filmes_atorScalarWhereWithAggregatesInput | tbl_filmes_atorScalarWhereWithAggregatesInput[]
    OR?: tbl_filmes_atorScalarWhereWithAggregatesInput[]
    NOT?: tbl_filmes_atorScalarWhereWithAggregatesInput | tbl_filmes_atorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_filmes_ator"> | number
    id_ator?: IntWithAggregatesFilter<"tbl_filmes_ator"> | number
    id_filme?: IntWithAggregatesFilter<"tbl_filmes_ator"> | number
  }

  export type tbl_filmes_diretorWhereInput = {
    AND?: tbl_filmes_diretorWhereInput | tbl_filmes_diretorWhereInput[]
    OR?: tbl_filmes_diretorWhereInput[]
    NOT?: tbl_filmes_diretorWhereInput | tbl_filmes_diretorWhereInput[]
    id?: IntFilter<"tbl_filmes_diretor"> | number
    id_diretor?: IntFilter<"tbl_filmes_diretor"> | number
    id_filme?: IntFilter<"tbl_filmes_diretor"> | number
    tbl_filmes?: XOR<Tbl_filmesRelationFilter, tbl_filmesWhereInput>
    tbl_diretores?: XOR<Tbl_diretoresRelationFilter, tbl_diretoresWhereInput>
  }

  export type tbl_filmes_diretorOrderByWithRelationInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_filme?: SortOrder
    tbl_filmes?: tbl_filmesOrderByWithRelationInput
    tbl_diretores?: tbl_diretoresOrderByWithRelationInput
  }

  export type tbl_filmes_diretorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_filmes_diretorWhereInput | tbl_filmes_diretorWhereInput[]
    OR?: tbl_filmes_diretorWhereInput[]
    NOT?: tbl_filmes_diretorWhereInput | tbl_filmes_diretorWhereInput[]
    id_diretor?: IntFilter<"tbl_filmes_diretor"> | number
    id_filme?: IntFilter<"tbl_filmes_diretor"> | number
    tbl_filmes?: XOR<Tbl_filmesRelationFilter, tbl_filmesWhereInput>
    tbl_diretores?: XOR<Tbl_diretoresRelationFilter, tbl_diretoresWhereInput>
  }, "id">

  export type tbl_filmes_diretorOrderByWithAggregationInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_filme?: SortOrder
    _count?: tbl_filmes_diretorCountOrderByAggregateInput
    _avg?: tbl_filmes_diretorAvgOrderByAggregateInput
    _max?: tbl_filmes_diretorMaxOrderByAggregateInput
    _min?: tbl_filmes_diretorMinOrderByAggregateInput
    _sum?: tbl_filmes_diretorSumOrderByAggregateInput
  }

  export type tbl_filmes_diretorScalarWhereWithAggregatesInput = {
    AND?: tbl_filmes_diretorScalarWhereWithAggregatesInput | tbl_filmes_diretorScalarWhereWithAggregatesInput[]
    OR?: tbl_filmes_diretorScalarWhereWithAggregatesInput[]
    NOT?: tbl_filmes_diretorScalarWhereWithAggregatesInput | tbl_filmes_diretorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_filmes_diretor"> | number
    id_diretor?: IntWithAggregatesFilter<"tbl_filmes_diretor"> | number
    id_filme?: IntWithAggregatesFilter<"tbl_filmes_diretor"> | number
  }

  export type tbl_genero_filmeWhereInput = {
    AND?: tbl_genero_filmeWhereInput | tbl_genero_filmeWhereInput[]
    OR?: tbl_genero_filmeWhereInput[]
    NOT?: tbl_genero_filmeWhereInput | tbl_genero_filmeWhereInput[]
    id?: IntFilter<"tbl_genero_filme"> | number
    id_genero?: IntFilter<"tbl_genero_filme"> | number
    id_filme?: IntFilter<"tbl_genero_filme"> | number
    tbl_generos?: XOR<Tbl_generosRelationFilter, tbl_generosWhereInput>
    tbl_filmes?: XOR<Tbl_filmesRelationFilter, tbl_filmesWhereInput>
  }

  export type tbl_genero_filmeOrderByWithRelationInput = {
    id?: SortOrder
    id_genero?: SortOrder
    id_filme?: SortOrder
    tbl_generos?: tbl_generosOrderByWithRelationInput
    tbl_filmes?: tbl_filmesOrderByWithRelationInput
  }

  export type tbl_genero_filmeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_genero_filmeWhereInput | tbl_genero_filmeWhereInput[]
    OR?: tbl_genero_filmeWhereInput[]
    NOT?: tbl_genero_filmeWhereInput | tbl_genero_filmeWhereInput[]
    id_genero?: IntFilter<"tbl_genero_filme"> | number
    id_filme?: IntFilter<"tbl_genero_filme"> | number
    tbl_generos?: XOR<Tbl_generosRelationFilter, tbl_generosWhereInput>
    tbl_filmes?: XOR<Tbl_filmesRelationFilter, tbl_filmesWhereInput>
  }, "id">

  export type tbl_genero_filmeOrderByWithAggregationInput = {
    id?: SortOrder
    id_genero?: SortOrder
    id_filme?: SortOrder
    _count?: tbl_genero_filmeCountOrderByAggregateInput
    _avg?: tbl_genero_filmeAvgOrderByAggregateInput
    _max?: tbl_genero_filmeMaxOrderByAggregateInput
    _min?: tbl_genero_filmeMinOrderByAggregateInput
    _sum?: tbl_genero_filmeSumOrderByAggregateInput
  }

  export type tbl_genero_filmeScalarWhereWithAggregatesInput = {
    AND?: tbl_genero_filmeScalarWhereWithAggregatesInput | tbl_genero_filmeScalarWhereWithAggregatesInput[]
    OR?: tbl_genero_filmeScalarWhereWithAggregatesInput[]
    NOT?: tbl_genero_filmeScalarWhereWithAggregatesInput | tbl_genero_filmeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_genero_filme"> | number
    id_genero?: IntWithAggregatesFilter<"tbl_genero_filme"> | number
    id_filme?: IntWithAggregatesFilter<"tbl_genero_filme"> | number
  }

  export type tbl_generosWhereInput = {
    AND?: tbl_generosWhereInput | tbl_generosWhereInput[]
    OR?: tbl_generosWhereInput[]
    NOT?: tbl_generosWhereInput | tbl_generosWhereInput[]
    id?: IntFilter<"tbl_generos"> | number
    nome?: StringFilter<"tbl_generos"> | string
    tbl_genero_filme?: Tbl_genero_filmeListRelationFilter
  }

  export type tbl_generosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tbl_genero_filme?: tbl_genero_filmeOrderByRelationAggregateInput
  }

  export type tbl_generosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_generosWhereInput | tbl_generosWhereInput[]
    OR?: tbl_generosWhereInput[]
    NOT?: tbl_generosWhereInput | tbl_generosWhereInput[]
    nome?: StringFilter<"tbl_generos"> | string
    tbl_genero_filme?: Tbl_genero_filmeListRelationFilter
  }, "id">

  export type tbl_generosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: tbl_generosCountOrderByAggregateInput
    _avg?: tbl_generosAvgOrderByAggregateInput
    _max?: tbl_generosMaxOrderByAggregateInput
    _min?: tbl_generosMinOrderByAggregateInput
    _sum?: tbl_generosSumOrderByAggregateInput
  }

  export type tbl_generosScalarWhereWithAggregatesInput = {
    AND?: tbl_generosScalarWhereWithAggregatesInput | tbl_generosScalarWhereWithAggregatesInput[]
    OR?: tbl_generosScalarWhereWithAggregatesInput[]
    NOT?: tbl_generosScalarWhereWithAggregatesInput | tbl_generosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_generos"> | number
    nome?: StringWithAggregatesFilter<"tbl_generos"> | string
  }

  export type tbl_nacionalidadesWhereInput = {
    AND?: tbl_nacionalidadesWhereInput | tbl_nacionalidadesWhereInput[]
    OR?: tbl_nacionalidadesWhereInput[]
    NOT?: tbl_nacionalidadesWhereInput | tbl_nacionalidadesWhereInput[]
    id?: IntFilter<"tbl_nacionalidades"> | number
    pais_origem?: StringFilter<"tbl_nacionalidades"> | string
    nacionalidade?: StringFilter<"tbl_nacionalidades"> | string
    tbl_nacionalidades_ator?: Tbl_nacionalidades_atorListRelationFilter
    tbl_nacionalidades_diretor?: Tbl_nacionalidades_diretorListRelationFilter
  }

  export type tbl_nacionalidadesOrderByWithRelationInput = {
    id?: SortOrder
    pais_origem?: SortOrder
    nacionalidade?: SortOrder
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorOrderByRelationAggregateInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorOrderByRelationAggregateInput
  }

  export type tbl_nacionalidadesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_nacionalidadesWhereInput | tbl_nacionalidadesWhereInput[]
    OR?: tbl_nacionalidadesWhereInput[]
    NOT?: tbl_nacionalidadesWhereInput | tbl_nacionalidadesWhereInput[]
    pais_origem?: StringFilter<"tbl_nacionalidades"> | string
    nacionalidade?: StringFilter<"tbl_nacionalidades"> | string
    tbl_nacionalidades_ator?: Tbl_nacionalidades_atorListRelationFilter
    tbl_nacionalidades_diretor?: Tbl_nacionalidades_diretorListRelationFilter
  }, "id">

  export type tbl_nacionalidadesOrderByWithAggregationInput = {
    id?: SortOrder
    pais_origem?: SortOrder
    nacionalidade?: SortOrder
    _count?: tbl_nacionalidadesCountOrderByAggregateInput
    _avg?: tbl_nacionalidadesAvgOrderByAggregateInput
    _max?: tbl_nacionalidadesMaxOrderByAggregateInput
    _min?: tbl_nacionalidadesMinOrderByAggregateInput
    _sum?: tbl_nacionalidadesSumOrderByAggregateInput
  }

  export type tbl_nacionalidadesScalarWhereWithAggregatesInput = {
    AND?: tbl_nacionalidadesScalarWhereWithAggregatesInput | tbl_nacionalidadesScalarWhereWithAggregatesInput[]
    OR?: tbl_nacionalidadesScalarWhereWithAggregatesInput[]
    NOT?: tbl_nacionalidadesScalarWhereWithAggregatesInput | tbl_nacionalidadesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_nacionalidades"> | number
    pais_origem?: StringWithAggregatesFilter<"tbl_nacionalidades"> | string
    nacionalidade?: StringWithAggregatesFilter<"tbl_nacionalidades"> | string
  }

  export type tbl_nacionalidades_atorWhereInput = {
    AND?: tbl_nacionalidades_atorWhereInput | tbl_nacionalidades_atorWhereInput[]
    OR?: tbl_nacionalidades_atorWhereInput[]
    NOT?: tbl_nacionalidades_atorWhereInput | tbl_nacionalidades_atorWhereInput[]
    id?: IntFilter<"tbl_nacionalidades_ator"> | number
    id_ator?: IntFilter<"tbl_nacionalidades_ator"> | number
    id_nacionalidade?: IntFilter<"tbl_nacionalidades_ator"> | number
    tbl_atores?: XOR<Tbl_atoresRelationFilter, tbl_atoresWhereInput>
    tbl_nacionalidades?: XOR<Tbl_nacionalidadesRelationFilter, tbl_nacionalidadesWhereInput>
  }

  export type tbl_nacionalidades_atorOrderByWithRelationInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_nacionalidade?: SortOrder
    tbl_atores?: tbl_atoresOrderByWithRelationInput
    tbl_nacionalidades?: tbl_nacionalidadesOrderByWithRelationInput
  }

  export type tbl_nacionalidades_atorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_nacionalidades_atorWhereInput | tbl_nacionalidades_atorWhereInput[]
    OR?: tbl_nacionalidades_atorWhereInput[]
    NOT?: tbl_nacionalidades_atorWhereInput | tbl_nacionalidades_atorWhereInput[]
    id_ator?: IntFilter<"tbl_nacionalidades_ator"> | number
    id_nacionalidade?: IntFilter<"tbl_nacionalidades_ator"> | number
    tbl_atores?: XOR<Tbl_atoresRelationFilter, tbl_atoresWhereInput>
    tbl_nacionalidades?: XOR<Tbl_nacionalidadesRelationFilter, tbl_nacionalidadesWhereInput>
  }, "id">

  export type tbl_nacionalidades_atorOrderByWithAggregationInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_nacionalidade?: SortOrder
    _count?: tbl_nacionalidades_atorCountOrderByAggregateInput
    _avg?: tbl_nacionalidades_atorAvgOrderByAggregateInput
    _max?: tbl_nacionalidades_atorMaxOrderByAggregateInput
    _min?: tbl_nacionalidades_atorMinOrderByAggregateInput
    _sum?: tbl_nacionalidades_atorSumOrderByAggregateInput
  }

  export type tbl_nacionalidades_atorScalarWhereWithAggregatesInput = {
    AND?: tbl_nacionalidades_atorScalarWhereWithAggregatesInput | tbl_nacionalidades_atorScalarWhereWithAggregatesInput[]
    OR?: tbl_nacionalidades_atorScalarWhereWithAggregatesInput[]
    NOT?: tbl_nacionalidades_atorScalarWhereWithAggregatesInput | tbl_nacionalidades_atorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_nacionalidades_ator"> | number
    id_ator?: IntWithAggregatesFilter<"tbl_nacionalidades_ator"> | number
    id_nacionalidade?: IntWithAggregatesFilter<"tbl_nacionalidades_ator"> | number
  }

  export type tbl_nacionalidades_diretorWhereInput = {
    AND?: tbl_nacionalidades_diretorWhereInput | tbl_nacionalidades_diretorWhereInput[]
    OR?: tbl_nacionalidades_diretorWhereInput[]
    NOT?: tbl_nacionalidades_diretorWhereInput | tbl_nacionalidades_diretorWhereInput[]
    id?: IntFilter<"tbl_nacionalidades_diretor"> | number
    id_diretor?: IntFilter<"tbl_nacionalidades_diretor"> | number
    id_nacionalidade?: IntFilter<"tbl_nacionalidades_diretor"> | number
    tbl_diretores?: XOR<Tbl_diretoresRelationFilter, tbl_diretoresWhereInput>
    tbl_nacionalidades?: XOR<Tbl_nacionalidadesRelationFilter, tbl_nacionalidadesWhereInput>
  }

  export type tbl_nacionalidades_diretorOrderByWithRelationInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_nacionalidade?: SortOrder
    tbl_diretores?: tbl_diretoresOrderByWithRelationInput
    tbl_nacionalidades?: tbl_nacionalidadesOrderByWithRelationInput
  }

  export type tbl_nacionalidades_diretorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_nacionalidades_diretorWhereInput | tbl_nacionalidades_diretorWhereInput[]
    OR?: tbl_nacionalidades_diretorWhereInput[]
    NOT?: tbl_nacionalidades_diretorWhereInput | tbl_nacionalidades_diretorWhereInput[]
    id_diretor?: IntFilter<"tbl_nacionalidades_diretor"> | number
    id_nacionalidade?: IntFilter<"tbl_nacionalidades_diretor"> | number
    tbl_diretores?: XOR<Tbl_diretoresRelationFilter, tbl_diretoresWhereInput>
    tbl_nacionalidades?: XOR<Tbl_nacionalidadesRelationFilter, tbl_nacionalidadesWhereInput>
  }, "id">

  export type tbl_nacionalidades_diretorOrderByWithAggregationInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_nacionalidade?: SortOrder
    _count?: tbl_nacionalidades_diretorCountOrderByAggregateInput
    _avg?: tbl_nacionalidades_diretorAvgOrderByAggregateInput
    _max?: tbl_nacionalidades_diretorMaxOrderByAggregateInput
    _min?: tbl_nacionalidades_diretorMinOrderByAggregateInput
    _sum?: tbl_nacionalidades_diretorSumOrderByAggregateInput
  }

  export type tbl_nacionalidades_diretorScalarWhereWithAggregatesInput = {
    AND?: tbl_nacionalidades_diretorScalarWhereWithAggregatesInput | tbl_nacionalidades_diretorScalarWhereWithAggregatesInput[]
    OR?: tbl_nacionalidades_diretorScalarWhereWithAggregatesInput[]
    NOT?: tbl_nacionalidades_diretorScalarWhereWithAggregatesInput | tbl_nacionalidades_diretorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_nacionalidades_diretor"> | number
    id_diretor?: IntWithAggregatesFilter<"tbl_nacionalidades_diretor"> | number
    id_nacionalidade?: IntWithAggregatesFilter<"tbl_nacionalidades_diretor"> | number
  }

  export type tbl_sexoWhereInput = {
    AND?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    OR?: tbl_sexoWhereInput[]
    NOT?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    id?: IntFilter<"tbl_sexo"> | number
    sexo?: StringFilter<"tbl_sexo"> | string
    tbl_atores?: Tbl_atoresListRelationFilter
    tbl_diretores?: Tbl_diretoresListRelationFilter
  }

  export type tbl_sexoOrderByWithRelationInput = {
    id?: SortOrder
    sexo?: SortOrder
    tbl_atores?: tbl_atoresOrderByRelationAggregateInput
    tbl_diretores?: tbl_diretoresOrderByRelationAggregateInput
  }

  export type tbl_sexoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    OR?: tbl_sexoWhereInput[]
    NOT?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    sexo?: StringFilter<"tbl_sexo"> | string
    tbl_atores?: Tbl_atoresListRelationFilter
    tbl_diretores?: Tbl_diretoresListRelationFilter
  }, "id">

  export type tbl_sexoOrderByWithAggregationInput = {
    id?: SortOrder
    sexo?: SortOrder
    _count?: tbl_sexoCountOrderByAggregateInput
    _avg?: tbl_sexoAvgOrderByAggregateInput
    _max?: tbl_sexoMaxOrderByAggregateInput
    _min?: tbl_sexoMinOrderByAggregateInput
    _sum?: tbl_sexoSumOrderByAggregateInput
  }

  export type tbl_sexoScalarWhereWithAggregatesInput = {
    AND?: tbl_sexoScalarWhereWithAggregatesInput | tbl_sexoScalarWhereWithAggregatesInput[]
    OR?: tbl_sexoScalarWhereWithAggregatesInput[]
    NOT?: tbl_sexoScalarWhereWithAggregatesInput | tbl_sexoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_sexo"> | number
    sexo?: StringWithAggregatesFilter<"tbl_sexo"> | string
  }

  export type tbl_filmesCreateInput = {
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    tbl_classificacoes: tbl_classificacoesCreateNestedOneWithoutTbl_filmesInput
    tbl_filmes_ator?: tbl_filmes_atorCreateNestedManyWithoutTbl_filmesInput
    tbl_filmes_diretor?: tbl_filmes_diretorCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesUncheckedCreateInput = {
    id?: number
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    id_classificacao: number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_filmesInput
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    tbl_classificacoes?: tbl_classificacoesUpdateOneRequiredWithoutTbl_filmesNestedInput
    tbl_filmes_ator?: tbl_filmes_atorUpdateManyWithoutTbl_filmesNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_filmesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    id_classificacao?: IntFieldUpdateOperationsInput | number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedUpdateManyWithoutTbl_filmesNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_filmesCreateManyInput = {
    id?: number
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    id_classificacao: number
  }

  export type tbl_filmesUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type tbl_filmesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    id_classificacao?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_atoresCreateInput = {
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_atoresInput
    tbl_filmes_ator?: tbl_filmes_atorCreateNestedManyWithoutTbl_atoresInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresUncheckedCreateInput = {
    id?: number
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo: number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_atoresInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_atoresNestedInput
    tbl_filmes_ator?: tbl_filmes_atorUpdateManyWithoutTbl_atoresNestedInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_atoresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_atoresCreateManyInput = {
    id?: number
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo: number
  }

  export type tbl_atoresUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_atoresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_classificacoesCreateInput = {
    sigla: string
    classificacao: string
    legenda: string
    imagem: string
    tbl_filmes?: tbl_filmesCreateNestedManyWithoutTbl_classificacoesInput
  }

  export type tbl_classificacoesUncheckedCreateInput = {
    id?: number
    sigla: string
    classificacao: string
    legenda: string
    imagem: string
    tbl_filmes?: tbl_filmesUncheckedCreateNestedManyWithoutTbl_classificacoesInput
  }

  export type tbl_classificacoesUpdateInput = {
    sigla?: StringFieldUpdateOperationsInput | string
    classificacao?: StringFieldUpdateOperationsInput | string
    legenda?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    tbl_filmes?: tbl_filmesUpdateManyWithoutTbl_classificacoesNestedInput
  }

  export type tbl_classificacoesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    classificacao?: StringFieldUpdateOperationsInput | string
    legenda?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    tbl_filmes?: tbl_filmesUncheckedUpdateManyWithoutTbl_classificacoesNestedInput
  }

  export type tbl_classificacoesCreateManyInput = {
    id?: number
    sigla: string
    classificacao: string
    legenda: string
    imagem: string
  }

  export type tbl_classificacoesUpdateManyMutationInput = {
    sigla?: StringFieldUpdateOperationsInput | string
    classificacao?: StringFieldUpdateOperationsInput | string
    legenda?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_classificacoesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    classificacao?: StringFieldUpdateOperationsInput | string
    legenda?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_diretoresCreateInput = {
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_diretoresInput
    tbl_filmes_diretor?: tbl_filmes_diretorCreateNestedManyWithoutTbl_diretoresInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresUncheckedCreateInput = {
    id?: number
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo?: number | null
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_diretoresNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUpdateManyWithoutTbl_diretoresNestedInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_diretoresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_diretoresCreateManyInput = {
    id?: number
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo?: number | null
  }

  export type tbl_diretoresUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_diretoresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_filmes_atorCreateInput = {
    tbl_filmes: tbl_filmesCreateNestedOneWithoutTbl_filmes_atorInput
    tbl_atores: tbl_atoresCreateNestedOneWithoutTbl_filmes_atorInput
  }

  export type tbl_filmes_atorUncheckedCreateInput = {
    id?: number
    id_ator: number
    id_filme: number
  }

  export type tbl_filmes_atorUpdateInput = {
    tbl_filmes?: tbl_filmesUpdateOneRequiredWithoutTbl_filmes_atorNestedInput
    tbl_atores?: tbl_atoresUpdateOneRequiredWithoutTbl_filmes_atorNestedInput
  }

  export type tbl_filmes_atorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_atorCreateManyInput = {
    id?: number
    id_ator: number
    id_filme: number
  }

  export type tbl_filmes_atorUpdateManyMutationInput = {

  }

  export type tbl_filmes_atorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_diretorCreateInput = {
    tbl_filmes: tbl_filmesCreateNestedOneWithoutTbl_filmes_diretorInput
    tbl_diretores: tbl_diretoresCreateNestedOneWithoutTbl_filmes_diretorInput
  }

  export type tbl_filmes_diretorUncheckedCreateInput = {
    id?: number
    id_diretor: number
    id_filme: number
  }

  export type tbl_filmes_diretorUpdateInput = {
    tbl_filmes?: tbl_filmesUpdateOneRequiredWithoutTbl_filmes_diretorNestedInput
    tbl_diretores?: tbl_diretoresUpdateOneRequiredWithoutTbl_filmes_diretorNestedInput
  }

  export type tbl_filmes_diretorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_diretorCreateManyInput = {
    id?: number
    id_diretor: number
    id_filme: number
  }

  export type tbl_filmes_diretorUpdateManyMutationInput = {

  }

  export type tbl_filmes_diretorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_genero_filmeCreateInput = {
    tbl_generos: tbl_generosCreateNestedOneWithoutTbl_genero_filmeInput
    tbl_filmes: tbl_filmesCreateNestedOneWithoutTbl_genero_filmeInput
  }

  export type tbl_genero_filmeUncheckedCreateInput = {
    id?: number
    id_genero: number
    id_filme: number
  }

  export type tbl_genero_filmeUpdateInput = {
    tbl_generos?: tbl_generosUpdateOneRequiredWithoutTbl_genero_filmeNestedInput
    tbl_filmes?: tbl_filmesUpdateOneRequiredWithoutTbl_genero_filmeNestedInput
  }

  export type tbl_genero_filmeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_genero?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_genero_filmeCreateManyInput = {
    id?: number
    id_genero: number
    id_filme: number
  }

  export type tbl_genero_filmeUpdateManyMutationInput = {

  }

  export type tbl_genero_filmeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_genero?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_generosCreateInput = {
    nome: string
    tbl_genero_filme?: tbl_genero_filmeCreateNestedManyWithoutTbl_generosInput
  }

  export type tbl_generosUncheckedCreateInput = {
    id?: number
    nome: string
    tbl_genero_filme?: tbl_genero_filmeUncheckedCreateNestedManyWithoutTbl_generosInput
  }

  export type tbl_generosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_genero_filme?: tbl_genero_filmeUpdateManyWithoutTbl_generosNestedInput
  }

  export type tbl_generosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_genero_filme?: tbl_genero_filmeUncheckedUpdateManyWithoutTbl_generosNestedInput
  }

  export type tbl_generosCreateManyInput = {
    id?: number
    nome: string
  }

  export type tbl_generosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_generosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_nacionalidadesCreateInput = {
    pais_origem: string
    nacionalidade: string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorCreateNestedManyWithoutTbl_nacionalidadesInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorCreateNestedManyWithoutTbl_nacionalidadesInput
  }

  export type tbl_nacionalidadesUncheckedCreateInput = {
    id?: number
    pais_origem: string
    nacionalidade: string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedCreateNestedManyWithoutTbl_nacionalidadesInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedCreateNestedManyWithoutTbl_nacionalidadesInput
  }

  export type tbl_nacionalidadesUpdateInput = {
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUpdateManyWithoutTbl_nacionalidadesNestedInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUpdateManyWithoutTbl_nacionalidadesNestedInput
  }

  export type tbl_nacionalidadesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_nacionalidadesNestedInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_nacionalidadesNestedInput
  }

  export type tbl_nacionalidadesCreateManyInput = {
    id?: number
    pais_origem: string
    nacionalidade: string
  }

  export type tbl_nacionalidadesUpdateManyMutationInput = {
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_nacionalidadesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_nacionalidades_atorCreateInput = {
    tbl_atores: tbl_atoresCreateNestedOneWithoutTbl_nacionalidades_atorInput
    tbl_nacionalidades: tbl_nacionalidadesCreateNestedOneWithoutTbl_nacionalidades_atorInput
  }

  export type tbl_nacionalidades_atorUncheckedCreateInput = {
    id?: number
    id_ator: number
    id_nacionalidade: number
  }

  export type tbl_nacionalidades_atorUpdateInput = {
    tbl_atores?: tbl_atoresUpdateOneRequiredWithoutTbl_nacionalidades_atorNestedInput
    tbl_nacionalidades?: tbl_nacionalidadesUpdateOneRequiredWithoutTbl_nacionalidades_atorNestedInput
  }

  export type tbl_nacionalidades_atorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_atorCreateManyInput = {
    id?: number
    id_ator: number
    id_nacionalidade: number
  }

  export type tbl_nacionalidades_atorUpdateManyMutationInput = {

  }

  export type tbl_nacionalidades_atorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_diretorCreateInput = {
    tbl_diretores: tbl_diretoresCreateNestedOneWithoutTbl_nacionalidades_diretorInput
    tbl_nacionalidades: tbl_nacionalidadesCreateNestedOneWithoutTbl_nacionalidades_diretorInput
  }

  export type tbl_nacionalidades_diretorUncheckedCreateInput = {
    id?: number
    id_diretor: number
    id_nacionalidade: number
  }

  export type tbl_nacionalidades_diretorUpdateInput = {
    tbl_diretores?: tbl_diretoresUpdateOneRequiredWithoutTbl_nacionalidades_diretorNestedInput
    tbl_nacionalidades?: tbl_nacionalidadesUpdateOneRequiredWithoutTbl_nacionalidades_diretorNestedInput
  }

  export type tbl_nacionalidades_diretorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_diretorCreateManyInput = {
    id?: number
    id_diretor: number
    id_nacionalidade: number
  }

  export type tbl_nacionalidades_diretorUpdateManyMutationInput = {

  }

  export type tbl_nacionalidades_diretorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_sexoCreateInput = {
    sexo: string
    tbl_atores?: tbl_atoresCreateNestedManyWithoutTbl_sexoInput
    tbl_diretores?: tbl_diretoresCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateInput = {
    id?: number
    sexo: string
    tbl_atores?: tbl_atoresUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_diretores?: tbl_diretoresUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUpdateInput = {
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_atores?: tbl_atoresUpdateManyWithoutTbl_sexoNestedInput
    tbl_diretores?: tbl_diretoresUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_atores?: tbl_atoresUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_diretores?: tbl_diretoresUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoCreateManyInput = {
    id?: number
    sexo: string
  }

  export type tbl_sexoUpdateManyMutationInput = {
    sexo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sexoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Tbl_classificacoesRelationFilter = {
    is?: tbl_classificacoesWhereInput
    isNot?: tbl_classificacoesWhereInput
  }

  export type Tbl_filmes_atorListRelationFilter = {
    every?: tbl_filmes_atorWhereInput
    some?: tbl_filmes_atorWhereInput
    none?: tbl_filmes_atorWhereInput
  }

  export type Tbl_filmes_diretorListRelationFilter = {
    every?: tbl_filmes_diretorWhereInput
    some?: tbl_filmes_diretorWhereInput
    none?: tbl_filmes_diretorWhereInput
  }

  export type Tbl_genero_filmeListRelationFilter = {
    every?: tbl_genero_filmeWhereInput
    some?: tbl_genero_filmeWhereInput
    none?: tbl_genero_filmeWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbl_filmes_atorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_filmes_diretorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_genero_filmeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_filmesCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sinopse?: SortOrder
    duracao?: SortOrder
    data_lancamento?: SortOrder
    data_relancamento?: SortOrder
    foto_capa?: SortOrder
    valor_unitario?: SortOrder
    id_classificacao?: SortOrder
  }

  export type tbl_filmesAvgOrderByAggregateInput = {
    id?: SortOrder
    valor_unitario?: SortOrder
    id_classificacao?: SortOrder
  }

  export type tbl_filmesMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sinopse?: SortOrder
    duracao?: SortOrder
    data_lancamento?: SortOrder
    data_relancamento?: SortOrder
    foto_capa?: SortOrder
    valor_unitario?: SortOrder
    id_classificacao?: SortOrder
  }

  export type tbl_filmesMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sinopse?: SortOrder
    duracao?: SortOrder
    data_lancamento?: SortOrder
    data_relancamento?: SortOrder
    foto_capa?: SortOrder
    valor_unitario?: SortOrder
    id_classificacao?: SortOrder
  }

  export type tbl_filmesSumOrderByAggregateInput = {
    id?: SortOrder
    valor_unitario?: SortOrder
    id_classificacao?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Tbl_sexoRelationFilter = {
    is?: tbl_sexoWhereInput
    isNot?: tbl_sexoWhereInput
  }

  export type Tbl_nacionalidades_atorListRelationFilter = {
    every?: tbl_nacionalidades_atorWhereInput
    some?: tbl_nacionalidades_atorWhereInput
    none?: tbl_nacionalidades_atorWhereInput
  }

  export type tbl_nacionalidades_atorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_atoresCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_ator?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrder
    sobre?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_atoresAvgOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_atoresMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_ator?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrder
    sobre?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_atoresMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_ator?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrder
    sobre?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_atoresSumOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Tbl_filmesListRelationFilter = {
    every?: tbl_filmesWhereInput
    some?: tbl_filmesWhereInput
    none?: tbl_filmesWhereInput
  }

  export type tbl_filmesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_classificacoesCountOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    classificacao?: SortOrder
    legenda?: SortOrder
    imagem?: SortOrder
  }

  export type tbl_classificacoesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_classificacoesMaxOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    classificacao?: SortOrder
    legenda?: SortOrder
    imagem?: SortOrder
  }

  export type tbl_classificacoesMinOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    classificacao?: SortOrder
    legenda?: SortOrder
    imagem?: SortOrder
  }

  export type tbl_classificacoesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Tbl_sexoNullableRelationFilter = {
    is?: tbl_sexoWhereInput | null
    isNot?: tbl_sexoWhereInput | null
  }

  export type Tbl_nacionalidades_diretorListRelationFilter = {
    every?: tbl_nacionalidades_diretorWhereInput
    some?: tbl_nacionalidades_diretorWhereInput
    none?: tbl_nacionalidades_diretorWhereInput
  }

  export type tbl_nacionalidades_diretorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_diretoresCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_diretor?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrder
    sobre?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_diretoresAvgOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_diretoresMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_diretor?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrder
    sobre?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_diretoresMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto_diretor?: SortOrder
    dt_nasc?: SortOrder
    dt_falec?: SortOrder
    sobre?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_diretoresSumOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Tbl_filmesRelationFilter = {
    is?: tbl_filmesWhereInput
    isNot?: tbl_filmesWhereInput
  }

  export type Tbl_atoresRelationFilter = {
    is?: tbl_atoresWhereInput
    isNot?: tbl_atoresWhereInput
  }

  export type tbl_filmes_atorCountOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_atorAvgOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_atorMaxOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_atorMinOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_atorSumOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_filme?: SortOrder
  }

  export type Tbl_diretoresRelationFilter = {
    is?: tbl_diretoresWhereInput
    isNot?: tbl_diretoresWhereInput
  }

  export type tbl_filmes_diretorCountOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_diretorAvgOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_diretorMaxOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_diretorMinOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_filmes_diretorSumOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_filme?: SortOrder
  }

  export type Tbl_generosRelationFilter = {
    is?: tbl_generosWhereInput
    isNot?: tbl_generosWhereInput
  }

  export type tbl_genero_filmeCountOrderByAggregateInput = {
    id?: SortOrder
    id_genero?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_genero_filmeAvgOrderByAggregateInput = {
    id?: SortOrder
    id_genero?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_genero_filmeMaxOrderByAggregateInput = {
    id?: SortOrder
    id_genero?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_genero_filmeMinOrderByAggregateInput = {
    id?: SortOrder
    id_genero?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_genero_filmeSumOrderByAggregateInput = {
    id?: SortOrder
    id_genero?: SortOrder
    id_filme?: SortOrder
  }

  export type tbl_generosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_generosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_generosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_generosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_generosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_nacionalidadesCountOrderByAggregateInput = {
    id?: SortOrder
    pais_origem?: SortOrder
    nacionalidade?: SortOrder
  }

  export type tbl_nacionalidadesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_nacionalidadesMaxOrderByAggregateInput = {
    id?: SortOrder
    pais_origem?: SortOrder
    nacionalidade?: SortOrder
  }

  export type tbl_nacionalidadesMinOrderByAggregateInput = {
    id?: SortOrder
    pais_origem?: SortOrder
    nacionalidade?: SortOrder
  }

  export type tbl_nacionalidadesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_nacionalidadesRelationFilter = {
    is?: tbl_nacionalidadesWhereInput
    isNot?: tbl_nacionalidadesWhereInput
  }

  export type tbl_nacionalidades_atorCountOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_atorAvgOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_atorMaxOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_atorMinOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_atorSumOrderByAggregateInput = {
    id?: SortOrder
    id_ator?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_diretorCountOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_diretorAvgOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_diretorMaxOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_diretorMinOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type tbl_nacionalidades_diretorSumOrderByAggregateInput = {
    id?: SortOrder
    id_diretor?: SortOrder
    id_nacionalidade?: SortOrder
  }

  export type Tbl_atoresListRelationFilter = {
    every?: tbl_atoresWhereInput
    some?: tbl_atoresWhereInput
    none?: tbl_atoresWhereInput
  }

  export type Tbl_diretoresListRelationFilter = {
    every?: tbl_diretoresWhereInput
    some?: tbl_diretoresWhereInput
    none?: tbl_diretoresWhereInput
  }

  export type tbl_atoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_diretoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_sexoCountOrderByAggregateInput = {
    id?: SortOrder
    sexo?: SortOrder
  }

  export type tbl_sexoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_sexoMaxOrderByAggregateInput = {
    id?: SortOrder
    sexo?: SortOrder
  }

  export type tbl_sexoMinOrderByAggregateInput = {
    id?: SortOrder
    sexo?: SortOrder
  }

  export type tbl_sexoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_classificacoesCreateNestedOneWithoutTbl_filmesInput = {
    create?: XOR<tbl_classificacoesCreateWithoutTbl_filmesInput, tbl_classificacoesUncheckedCreateWithoutTbl_filmesInput>
    connectOrCreate?: tbl_classificacoesCreateOrConnectWithoutTbl_filmesInput
    connect?: tbl_classificacoesWhereUniqueInput
  }

  export type tbl_filmes_atorCreateNestedManyWithoutTbl_filmesInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_atorCreateWithoutTbl_filmesInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_filmesInputEnvelope
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
  }

  export type tbl_filmes_diretorCreateNestedManyWithoutTbl_filmesInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_diretorCreateWithoutTbl_filmesInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_filmesInputEnvelope
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
  }

  export type tbl_genero_filmeCreateNestedManyWithoutTbl_filmesInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput> | tbl_genero_filmeCreateWithoutTbl_filmesInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput | tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_filmesInputEnvelope
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
  }

  export type tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_filmesInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_atorCreateWithoutTbl_filmesInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_filmesInputEnvelope
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
  }

  export type tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_filmesInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_diretorCreateWithoutTbl_filmesInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_filmesInputEnvelope
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
  }

  export type tbl_genero_filmeUncheckedCreateNestedManyWithoutTbl_filmesInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput> | tbl_genero_filmeCreateWithoutTbl_filmesInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput | tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_filmesInputEnvelope
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_classificacoesUpdateOneRequiredWithoutTbl_filmesNestedInput = {
    create?: XOR<tbl_classificacoesCreateWithoutTbl_filmesInput, tbl_classificacoesUncheckedCreateWithoutTbl_filmesInput>
    connectOrCreate?: tbl_classificacoesCreateOrConnectWithoutTbl_filmesInput
    upsert?: tbl_classificacoesUpsertWithoutTbl_filmesInput
    connect?: tbl_classificacoesWhereUniqueInput
    update?: XOR<XOR<tbl_classificacoesUpdateToOneWithWhereWithoutTbl_filmesInput, tbl_classificacoesUpdateWithoutTbl_filmesInput>, tbl_classificacoesUncheckedUpdateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_atorUpdateManyWithoutTbl_filmesNestedInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_atorCreateWithoutTbl_filmesInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput[]
    upsert?: tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_filmesInputEnvelope
    set?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    disconnect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    delete?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    update?: tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_filmesInput[]
    updateMany?: tbl_filmes_atorUpdateManyWithWhereWithoutTbl_filmesInput | tbl_filmes_atorUpdateManyWithWhereWithoutTbl_filmesInput[]
    deleteMany?: tbl_filmes_atorScalarWhereInput | tbl_filmes_atorScalarWhereInput[]
  }

  export type tbl_filmes_diretorUpdateManyWithoutTbl_filmesNestedInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_diretorCreateWithoutTbl_filmesInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput[]
    upsert?: tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_filmesInputEnvelope
    set?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    disconnect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    delete?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    update?: tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_filmesInput[]
    updateMany?: tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_filmesInput | tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_filmesInput[]
    deleteMany?: tbl_filmes_diretorScalarWhereInput | tbl_filmes_diretorScalarWhereInput[]
  }

  export type tbl_genero_filmeUpdateManyWithoutTbl_filmesNestedInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput> | tbl_genero_filmeCreateWithoutTbl_filmesInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput | tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput[]
    upsert?: tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_filmesInput | tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_filmesInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_filmesInputEnvelope
    set?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    disconnect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    delete?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    update?: tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_filmesInput | tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_filmesInput[]
    updateMany?: tbl_genero_filmeUpdateManyWithWhereWithoutTbl_filmesInput | tbl_genero_filmeUpdateManyWithWhereWithoutTbl_filmesInput[]
    deleteMany?: tbl_genero_filmeScalarWhereInput | tbl_genero_filmeScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_filmes_atorUncheckedUpdateManyWithoutTbl_filmesNestedInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_atorCreateWithoutTbl_filmesInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput[]
    upsert?: tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_filmesInputEnvelope
    set?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    disconnect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    delete?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    update?: tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_filmesInput[]
    updateMany?: tbl_filmes_atorUpdateManyWithWhereWithoutTbl_filmesInput | tbl_filmes_atorUpdateManyWithWhereWithoutTbl_filmesInput[]
    deleteMany?: tbl_filmes_atorScalarWhereInput | tbl_filmes_atorScalarWhereInput[]
  }

  export type tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_filmesNestedInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput> | tbl_filmes_diretorCreateWithoutTbl_filmesInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput[]
    upsert?: tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_filmesInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_filmesInputEnvelope
    set?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    disconnect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    delete?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    update?: tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_filmesInput | tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_filmesInput[]
    updateMany?: tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_filmesInput | tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_filmesInput[]
    deleteMany?: tbl_filmes_diretorScalarWhereInput | tbl_filmes_diretorScalarWhereInput[]
  }

  export type tbl_genero_filmeUncheckedUpdateManyWithoutTbl_filmesNestedInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput> | tbl_genero_filmeCreateWithoutTbl_filmesInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput | tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput[]
    upsert?: tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_filmesInput | tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_filmesInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_filmesInputEnvelope
    set?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    disconnect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    delete?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    update?: tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_filmesInput | tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_filmesInput[]
    updateMany?: tbl_genero_filmeUpdateManyWithWhereWithoutTbl_filmesInput | tbl_genero_filmeUpdateManyWithWhereWithoutTbl_filmesInput[]
    deleteMany?: tbl_genero_filmeScalarWhereInput | tbl_genero_filmeScalarWhereInput[]
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_atoresInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_atoresInput, tbl_sexoUncheckedCreateWithoutTbl_atoresInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_atoresInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_filmes_atorCreateNestedManyWithoutTbl_atoresInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_filmes_atorCreateWithoutTbl_atoresInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput | tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_atoresInputEnvelope
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_atorCreateNestedManyWithoutTbl_atoresInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_nacionalidades_atorCreateWithoutTbl_atoresInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_atoresInputEnvelope
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
  }

  export type tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_atoresInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_filmes_atorCreateWithoutTbl_atoresInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput | tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_atoresInputEnvelope
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_atorUncheckedCreateNestedManyWithoutTbl_atoresInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_nacionalidades_atorCreateWithoutTbl_atoresInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_atoresInputEnvelope
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type tbl_sexoUpdateOneRequiredWithoutTbl_atoresNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_atoresInput, tbl_sexoUncheckedCreateWithoutTbl_atoresInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_atoresInput
    upsert?: tbl_sexoUpsertWithoutTbl_atoresInput
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_atoresInput, tbl_sexoUpdateWithoutTbl_atoresInput>, tbl_sexoUncheckedUpdateWithoutTbl_atoresInput>
  }

  export type tbl_filmes_atorUpdateManyWithoutTbl_atoresNestedInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_filmes_atorCreateWithoutTbl_atoresInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput | tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput[]
    upsert?: tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_atoresInput | tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_atoresInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_atoresInputEnvelope
    set?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    disconnect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    delete?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    update?: tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_atoresInput | tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_atoresInput[]
    updateMany?: tbl_filmes_atorUpdateManyWithWhereWithoutTbl_atoresInput | tbl_filmes_atorUpdateManyWithWhereWithoutTbl_atoresInput[]
    deleteMany?: tbl_filmes_atorScalarWhereInput | tbl_filmes_atorScalarWhereInput[]
  }

  export type tbl_nacionalidades_atorUpdateManyWithoutTbl_atoresNestedInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_nacionalidades_atorCreateWithoutTbl_atoresInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput[]
    upsert?: tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_atoresInput | tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_atoresInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_atoresInputEnvelope
    set?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    delete?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    update?: tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_atoresInput | tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_atoresInput[]
    updateMany?: tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_atoresInput | tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_atoresInput[]
    deleteMany?: tbl_nacionalidades_atorScalarWhereInput | tbl_nacionalidades_atorScalarWhereInput[]
  }

  export type tbl_filmes_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput = {
    create?: XOR<tbl_filmes_atorCreateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_filmes_atorCreateWithoutTbl_atoresInput[] | tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput | tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput[]
    upsert?: tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_atoresInput | tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_atoresInput[]
    createMany?: tbl_filmes_atorCreateManyTbl_atoresInputEnvelope
    set?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    disconnect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    delete?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    connect?: tbl_filmes_atorWhereUniqueInput | tbl_filmes_atorWhereUniqueInput[]
    update?: tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_atoresInput | tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_atoresInput[]
    updateMany?: tbl_filmes_atorUpdateManyWithWhereWithoutTbl_atoresInput | tbl_filmes_atorUpdateManyWithWhereWithoutTbl_atoresInput[]
    deleteMany?: tbl_filmes_atorScalarWhereInput | tbl_filmes_atorScalarWhereInput[]
  }

  export type tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput> | tbl_nacionalidades_atorCreateWithoutTbl_atoresInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput[]
    upsert?: tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_atoresInput | tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_atoresInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_atoresInputEnvelope
    set?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    delete?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    update?: tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_atoresInput | tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_atoresInput[]
    updateMany?: tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_atoresInput | tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_atoresInput[]
    deleteMany?: tbl_nacionalidades_atorScalarWhereInput | tbl_nacionalidades_atorScalarWhereInput[]
  }

  export type tbl_filmesCreateNestedManyWithoutTbl_classificacoesInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_classificacoesInput, tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput> | tbl_filmesCreateWithoutTbl_classificacoesInput[] | tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput[]
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput | tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput[]
    createMany?: tbl_filmesCreateManyTbl_classificacoesInputEnvelope
    connect?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
  }

  export type tbl_filmesUncheckedCreateNestedManyWithoutTbl_classificacoesInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_classificacoesInput, tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput> | tbl_filmesCreateWithoutTbl_classificacoesInput[] | tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput[]
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput | tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput[]
    createMany?: tbl_filmesCreateManyTbl_classificacoesInputEnvelope
    connect?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
  }

  export type tbl_filmesUpdateManyWithoutTbl_classificacoesNestedInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_classificacoesInput, tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput> | tbl_filmesCreateWithoutTbl_classificacoesInput[] | tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput[]
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput | tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput[]
    upsert?: tbl_filmesUpsertWithWhereUniqueWithoutTbl_classificacoesInput | tbl_filmesUpsertWithWhereUniqueWithoutTbl_classificacoesInput[]
    createMany?: tbl_filmesCreateManyTbl_classificacoesInputEnvelope
    set?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    disconnect?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    delete?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    connect?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    update?: tbl_filmesUpdateWithWhereUniqueWithoutTbl_classificacoesInput | tbl_filmesUpdateWithWhereUniqueWithoutTbl_classificacoesInput[]
    updateMany?: tbl_filmesUpdateManyWithWhereWithoutTbl_classificacoesInput | tbl_filmesUpdateManyWithWhereWithoutTbl_classificacoesInput[]
    deleteMany?: tbl_filmesScalarWhereInput | tbl_filmesScalarWhereInput[]
  }

  export type tbl_filmesUncheckedUpdateManyWithoutTbl_classificacoesNestedInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_classificacoesInput, tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput> | tbl_filmesCreateWithoutTbl_classificacoesInput[] | tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput[]
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput | tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput[]
    upsert?: tbl_filmesUpsertWithWhereUniqueWithoutTbl_classificacoesInput | tbl_filmesUpsertWithWhereUniqueWithoutTbl_classificacoesInput[]
    createMany?: tbl_filmesCreateManyTbl_classificacoesInputEnvelope
    set?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    disconnect?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    delete?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    connect?: tbl_filmesWhereUniqueInput | tbl_filmesWhereUniqueInput[]
    update?: tbl_filmesUpdateWithWhereUniqueWithoutTbl_classificacoesInput | tbl_filmesUpdateWithWhereUniqueWithoutTbl_classificacoesInput[]
    updateMany?: tbl_filmesUpdateManyWithWhereWithoutTbl_classificacoesInput | tbl_filmesUpdateManyWithWhereWithoutTbl_classificacoesInput[]
    deleteMany?: tbl_filmesScalarWhereInput | tbl_filmesScalarWhereInput[]
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_diretoresInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_diretoresInput, tbl_sexoUncheckedCreateWithoutTbl_diretoresInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_diretoresInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_filmes_diretorCreateNestedManyWithoutTbl_diretoresInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_filmes_diretorCreateWithoutTbl_diretoresInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_diretoresInputEnvelope
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_diretorCreateNestedManyWithoutTbl_diretoresInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_diretoresInputEnvelope
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
  }

  export type tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_filmes_diretorCreateWithoutTbl_diretoresInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_diretoresInputEnvelope
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_diretoresInputEnvelope
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
  }

  export type tbl_sexoUpdateOneWithoutTbl_diretoresNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_diretoresInput, tbl_sexoUncheckedCreateWithoutTbl_diretoresInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_diretoresInput
    upsert?: tbl_sexoUpsertWithoutTbl_diretoresInput
    disconnect?: tbl_sexoWhereInput | boolean
    delete?: tbl_sexoWhereInput | boolean
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_diretoresInput, tbl_sexoUpdateWithoutTbl_diretoresInput>, tbl_sexoUncheckedUpdateWithoutTbl_diretoresInput>
  }

  export type tbl_filmes_diretorUpdateManyWithoutTbl_diretoresNestedInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_filmes_diretorCreateWithoutTbl_diretoresInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    upsert?: tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput | tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_diretoresInputEnvelope
    set?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    disconnect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    delete?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    update?: tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput | tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput[]
    updateMany?: tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_diretoresInput | tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_diretoresInput[]
    deleteMany?: tbl_filmes_diretorScalarWhereInput | tbl_filmes_diretorScalarWhereInput[]
  }

  export type tbl_nacionalidades_diretorUpdateManyWithoutTbl_diretoresNestedInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    upsert?: tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput | tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_diretoresInputEnvelope
    set?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    delete?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    update?: tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput | tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput[]
    updateMany?: tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_diretoresInput | tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_diretoresInput[]
    deleteMany?: tbl_nacionalidades_diretorScalarWhereInput | tbl_nacionalidades_diretorScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput = {
    create?: XOR<tbl_filmes_diretorCreateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_filmes_diretorCreateWithoutTbl_diretoresInput[] | tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    upsert?: tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput | tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput[]
    createMany?: tbl_filmes_diretorCreateManyTbl_diretoresInputEnvelope
    set?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    disconnect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    delete?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    connect?: tbl_filmes_diretorWhereUniqueInput | tbl_filmes_diretorWhereUniqueInput[]
    update?: tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput | tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput[]
    updateMany?: tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_diretoresInput | tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_diretoresInput[]
    deleteMany?: tbl_filmes_diretorScalarWhereInput | tbl_filmes_diretorScalarWhereInput[]
  }

  export type tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput> | tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput[]
    upsert?: tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput | tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_diretoresInputEnvelope
    set?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    delete?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    update?: tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput | tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput[]
    updateMany?: tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_diretoresInput | tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_diretoresInput[]
    deleteMany?: tbl_nacionalidades_diretorScalarWhereInput | tbl_nacionalidades_diretorScalarWhereInput[]
  }

  export type tbl_filmesCreateNestedOneWithoutTbl_filmes_atorInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_filmes_atorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_atorInput>
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_filmes_atorInput
    connect?: tbl_filmesWhereUniqueInput
  }

  export type tbl_atoresCreateNestedOneWithoutTbl_filmes_atorInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_filmes_atorInput, tbl_atoresUncheckedCreateWithoutTbl_filmes_atorInput>
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_filmes_atorInput
    connect?: tbl_atoresWhereUniqueInput
  }

  export type tbl_filmesUpdateOneRequiredWithoutTbl_filmes_atorNestedInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_filmes_atorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_atorInput>
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_filmes_atorInput
    upsert?: tbl_filmesUpsertWithoutTbl_filmes_atorInput
    connect?: tbl_filmesWhereUniqueInput
    update?: XOR<XOR<tbl_filmesUpdateToOneWithWhereWithoutTbl_filmes_atorInput, tbl_filmesUpdateWithoutTbl_filmes_atorInput>, tbl_filmesUncheckedUpdateWithoutTbl_filmes_atorInput>
  }

  export type tbl_atoresUpdateOneRequiredWithoutTbl_filmes_atorNestedInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_filmes_atorInput, tbl_atoresUncheckedCreateWithoutTbl_filmes_atorInput>
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_filmes_atorInput
    upsert?: tbl_atoresUpsertWithoutTbl_filmes_atorInput
    connect?: tbl_atoresWhereUniqueInput
    update?: XOR<XOR<tbl_atoresUpdateToOneWithWhereWithoutTbl_filmes_atorInput, tbl_atoresUpdateWithoutTbl_filmes_atorInput>, tbl_atoresUncheckedUpdateWithoutTbl_filmes_atorInput>
  }

  export type tbl_filmesCreateNestedOneWithoutTbl_filmes_diretorInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_filmes_diretorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_diretorInput>
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_filmes_diretorInput
    connect?: tbl_filmesWhereUniqueInput
  }

  export type tbl_diretoresCreateNestedOneWithoutTbl_filmes_diretorInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_filmes_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_filmes_diretorInput>
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_filmes_diretorInput
    connect?: tbl_diretoresWhereUniqueInput
  }

  export type tbl_filmesUpdateOneRequiredWithoutTbl_filmes_diretorNestedInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_filmes_diretorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_diretorInput>
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_filmes_diretorInput
    upsert?: tbl_filmesUpsertWithoutTbl_filmes_diretorInput
    connect?: tbl_filmesWhereUniqueInput
    update?: XOR<XOR<tbl_filmesUpdateToOneWithWhereWithoutTbl_filmes_diretorInput, tbl_filmesUpdateWithoutTbl_filmes_diretorInput>, tbl_filmesUncheckedUpdateWithoutTbl_filmes_diretorInput>
  }

  export type tbl_diretoresUpdateOneRequiredWithoutTbl_filmes_diretorNestedInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_filmes_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_filmes_diretorInput>
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_filmes_diretorInput
    upsert?: tbl_diretoresUpsertWithoutTbl_filmes_diretorInput
    connect?: tbl_diretoresWhereUniqueInput
    update?: XOR<XOR<tbl_diretoresUpdateToOneWithWhereWithoutTbl_filmes_diretorInput, tbl_diretoresUpdateWithoutTbl_filmes_diretorInput>, tbl_diretoresUncheckedUpdateWithoutTbl_filmes_diretorInput>
  }

  export type tbl_generosCreateNestedOneWithoutTbl_genero_filmeInput = {
    create?: XOR<tbl_generosCreateWithoutTbl_genero_filmeInput, tbl_generosUncheckedCreateWithoutTbl_genero_filmeInput>
    connectOrCreate?: tbl_generosCreateOrConnectWithoutTbl_genero_filmeInput
    connect?: tbl_generosWhereUniqueInput
  }

  export type tbl_filmesCreateNestedOneWithoutTbl_genero_filmeInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_genero_filmeInput, tbl_filmesUncheckedCreateWithoutTbl_genero_filmeInput>
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_genero_filmeInput
    connect?: tbl_filmesWhereUniqueInput
  }

  export type tbl_generosUpdateOneRequiredWithoutTbl_genero_filmeNestedInput = {
    create?: XOR<tbl_generosCreateWithoutTbl_genero_filmeInput, tbl_generosUncheckedCreateWithoutTbl_genero_filmeInput>
    connectOrCreate?: tbl_generosCreateOrConnectWithoutTbl_genero_filmeInput
    upsert?: tbl_generosUpsertWithoutTbl_genero_filmeInput
    connect?: tbl_generosWhereUniqueInput
    update?: XOR<XOR<tbl_generosUpdateToOneWithWhereWithoutTbl_genero_filmeInput, tbl_generosUpdateWithoutTbl_genero_filmeInput>, tbl_generosUncheckedUpdateWithoutTbl_genero_filmeInput>
  }

  export type tbl_filmesUpdateOneRequiredWithoutTbl_genero_filmeNestedInput = {
    create?: XOR<tbl_filmesCreateWithoutTbl_genero_filmeInput, tbl_filmesUncheckedCreateWithoutTbl_genero_filmeInput>
    connectOrCreate?: tbl_filmesCreateOrConnectWithoutTbl_genero_filmeInput
    upsert?: tbl_filmesUpsertWithoutTbl_genero_filmeInput
    connect?: tbl_filmesWhereUniqueInput
    update?: XOR<XOR<tbl_filmesUpdateToOneWithWhereWithoutTbl_genero_filmeInput, tbl_filmesUpdateWithoutTbl_genero_filmeInput>, tbl_filmesUncheckedUpdateWithoutTbl_genero_filmeInput>
  }

  export type tbl_genero_filmeCreateNestedManyWithoutTbl_generosInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_generosInput, tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput> | tbl_genero_filmeCreateWithoutTbl_generosInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput | tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_generosInputEnvelope
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
  }

  export type tbl_genero_filmeUncheckedCreateNestedManyWithoutTbl_generosInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_generosInput, tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput> | tbl_genero_filmeCreateWithoutTbl_generosInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput | tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_generosInputEnvelope
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
  }

  export type tbl_genero_filmeUpdateManyWithoutTbl_generosNestedInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_generosInput, tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput> | tbl_genero_filmeCreateWithoutTbl_generosInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput | tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput[]
    upsert?: tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_generosInput | tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_generosInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_generosInputEnvelope
    set?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    disconnect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    delete?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    update?: tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_generosInput | tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_generosInput[]
    updateMany?: tbl_genero_filmeUpdateManyWithWhereWithoutTbl_generosInput | tbl_genero_filmeUpdateManyWithWhereWithoutTbl_generosInput[]
    deleteMany?: tbl_genero_filmeScalarWhereInput | tbl_genero_filmeScalarWhereInput[]
  }

  export type tbl_genero_filmeUncheckedUpdateManyWithoutTbl_generosNestedInput = {
    create?: XOR<tbl_genero_filmeCreateWithoutTbl_generosInput, tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput> | tbl_genero_filmeCreateWithoutTbl_generosInput[] | tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput[]
    connectOrCreate?: tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput | tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput[]
    upsert?: tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_generosInput | tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_generosInput[]
    createMany?: tbl_genero_filmeCreateManyTbl_generosInputEnvelope
    set?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    disconnect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    delete?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    connect?: tbl_genero_filmeWhereUniqueInput | tbl_genero_filmeWhereUniqueInput[]
    update?: tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_generosInput | tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_generosInput[]
    updateMany?: tbl_genero_filmeUpdateManyWithWhereWithoutTbl_generosInput | tbl_genero_filmeUpdateManyWithWhereWithoutTbl_generosInput[]
    deleteMany?: tbl_genero_filmeScalarWhereInput | tbl_genero_filmeScalarWhereInput[]
  }

  export type tbl_nacionalidades_atorCreateNestedManyWithoutTbl_nacionalidadesInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInputEnvelope
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_diretorCreateNestedManyWithoutTbl_nacionalidadesInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInputEnvelope
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_atorUncheckedCreateNestedManyWithoutTbl_nacionalidadesInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInputEnvelope
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_diretorUncheckedCreateNestedManyWithoutTbl_nacionalidadesInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInputEnvelope
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
  }

  export type tbl_nacionalidades_atorUpdateManyWithoutTbl_nacionalidadesNestedInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    upsert?: tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInputEnvelope
    set?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    delete?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    update?: tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    updateMany?: tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_nacionalidadesInput[]
    deleteMany?: tbl_nacionalidades_atorScalarWhereInput | tbl_nacionalidades_atorScalarWhereInput[]
  }

  export type tbl_nacionalidades_diretorUpdateManyWithoutTbl_nacionalidadesNestedInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    upsert?: tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInputEnvelope
    set?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    delete?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    update?: tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    updateMany?: tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_nacionalidadesInput[]
    deleteMany?: tbl_nacionalidades_diretorScalarWhereInput | tbl_nacionalidades_diretorScalarWhereInput[]
  }

  export type tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_nacionalidadesNestedInput = {
    create?: XOR<tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    upsert?: tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInputEnvelope
    set?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    delete?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    connect?: tbl_nacionalidades_atorWhereUniqueInput | tbl_nacionalidades_atorWhereUniqueInput[]
    update?: tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    updateMany?: tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_nacionalidadesInput | tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_nacionalidadesInput[]
    deleteMany?: tbl_nacionalidades_atorScalarWhereInput | tbl_nacionalidades_atorScalarWhereInput[]
  }

  export type tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_nacionalidadesNestedInput = {
    create?: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput> | tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput[] | tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput[]
    connectOrCreate?: tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput[]
    upsert?: tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    createMany?: tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInputEnvelope
    set?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    disconnect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    delete?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    connect?: tbl_nacionalidades_diretorWhereUniqueInput | tbl_nacionalidades_diretorWhereUniqueInput[]
    update?: tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput[]
    updateMany?: tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_nacionalidadesInput | tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_nacionalidadesInput[]
    deleteMany?: tbl_nacionalidades_diretorScalarWhereInput | tbl_nacionalidades_diretorScalarWhereInput[]
  }

  export type tbl_atoresCreateNestedOneWithoutTbl_nacionalidades_atorInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_nacionalidades_atorInput, tbl_atoresUncheckedCreateWithoutTbl_nacionalidades_atorInput>
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_nacionalidades_atorInput
    connect?: tbl_atoresWhereUniqueInput
  }

  export type tbl_nacionalidadesCreateNestedOneWithoutTbl_nacionalidades_atorInput = {
    create?: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_atorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_atorInput>
    connectOrCreate?: tbl_nacionalidadesCreateOrConnectWithoutTbl_nacionalidades_atorInput
    connect?: tbl_nacionalidadesWhereUniqueInput
  }

  export type tbl_atoresUpdateOneRequiredWithoutTbl_nacionalidades_atorNestedInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_nacionalidades_atorInput, tbl_atoresUncheckedCreateWithoutTbl_nacionalidades_atorInput>
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_nacionalidades_atorInput
    upsert?: tbl_atoresUpsertWithoutTbl_nacionalidades_atorInput
    connect?: tbl_atoresWhereUniqueInput
    update?: XOR<XOR<tbl_atoresUpdateToOneWithWhereWithoutTbl_nacionalidades_atorInput, tbl_atoresUpdateWithoutTbl_nacionalidades_atorInput>, tbl_atoresUncheckedUpdateWithoutTbl_nacionalidades_atorInput>
  }

  export type tbl_nacionalidadesUpdateOneRequiredWithoutTbl_nacionalidades_atorNestedInput = {
    create?: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_atorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_atorInput>
    connectOrCreate?: tbl_nacionalidadesCreateOrConnectWithoutTbl_nacionalidades_atorInput
    upsert?: tbl_nacionalidadesUpsertWithoutTbl_nacionalidades_atorInput
    connect?: tbl_nacionalidadesWhereUniqueInput
    update?: XOR<XOR<tbl_nacionalidadesUpdateToOneWithWhereWithoutTbl_nacionalidades_atorInput, tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_atorInput>, tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_atorInput>
  }

  export type tbl_diretoresCreateNestedOneWithoutTbl_nacionalidades_diretorInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_nacionalidades_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_nacionalidades_diretorInput
    connect?: tbl_diretoresWhereUniqueInput
  }

  export type tbl_nacionalidadesCreateNestedOneWithoutTbl_nacionalidades_diretorInput = {
    create?: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_diretorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
    connectOrCreate?: tbl_nacionalidadesCreateOrConnectWithoutTbl_nacionalidades_diretorInput
    connect?: tbl_nacionalidadesWhereUniqueInput
  }

  export type tbl_diretoresUpdateOneRequiredWithoutTbl_nacionalidades_diretorNestedInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_nacionalidades_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_nacionalidades_diretorInput
    upsert?: tbl_diretoresUpsertWithoutTbl_nacionalidades_diretorInput
    connect?: tbl_diretoresWhereUniqueInput
    update?: XOR<XOR<tbl_diretoresUpdateToOneWithWhereWithoutTbl_nacionalidades_diretorInput, tbl_diretoresUpdateWithoutTbl_nacionalidades_diretorInput>, tbl_diretoresUncheckedUpdateWithoutTbl_nacionalidades_diretorInput>
  }

  export type tbl_nacionalidadesUpdateOneRequiredWithoutTbl_nacionalidades_diretorNestedInput = {
    create?: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_diretorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
    connectOrCreate?: tbl_nacionalidadesCreateOrConnectWithoutTbl_nacionalidades_diretorInput
    upsert?: tbl_nacionalidadesUpsertWithoutTbl_nacionalidades_diretorInput
    connect?: tbl_nacionalidadesWhereUniqueInput
    update?: XOR<XOR<tbl_nacionalidadesUpdateToOneWithWhereWithoutTbl_nacionalidades_diretorInput, tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_diretorInput>, tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_diretorInput>
  }

  export type tbl_atoresCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_sexoInput, tbl_atoresUncheckedCreateWithoutTbl_sexoInput> | tbl_atoresCreateWithoutTbl_sexoInput[] | tbl_atoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_sexoInput | tbl_atoresCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_atoresCreateManyTbl_sexoInputEnvelope
    connect?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
  }

  export type tbl_diretoresCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_sexoInput, tbl_diretoresUncheckedCreateWithoutTbl_sexoInput> | tbl_diretoresCreateWithoutTbl_sexoInput[] | tbl_diretoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_sexoInput | tbl_diretoresCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_diretoresCreateManyTbl_sexoInputEnvelope
    connect?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
  }

  export type tbl_atoresUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_sexoInput, tbl_atoresUncheckedCreateWithoutTbl_sexoInput> | tbl_atoresCreateWithoutTbl_sexoInput[] | tbl_atoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_sexoInput | tbl_atoresCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_atoresCreateManyTbl_sexoInputEnvelope
    connect?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
  }

  export type tbl_diretoresUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_sexoInput, tbl_diretoresUncheckedCreateWithoutTbl_sexoInput> | tbl_diretoresCreateWithoutTbl_sexoInput[] | tbl_diretoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_sexoInput | tbl_diretoresCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_diretoresCreateManyTbl_sexoInputEnvelope
    connect?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
  }

  export type tbl_atoresUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_sexoInput, tbl_atoresUncheckedCreateWithoutTbl_sexoInput> | tbl_atoresCreateWithoutTbl_sexoInput[] | tbl_atoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_sexoInput | tbl_atoresCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_atoresUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_atoresUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_atoresCreateManyTbl_sexoInputEnvelope
    set?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    disconnect?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    delete?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    connect?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    update?: tbl_atoresUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_atoresUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_atoresUpdateManyWithWhereWithoutTbl_sexoInput | tbl_atoresUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_atoresScalarWhereInput | tbl_atoresScalarWhereInput[]
  }

  export type tbl_diretoresUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_sexoInput, tbl_diretoresUncheckedCreateWithoutTbl_sexoInput> | tbl_diretoresCreateWithoutTbl_sexoInput[] | tbl_diretoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_sexoInput | tbl_diretoresCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_diretoresUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_diretoresUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_diretoresCreateManyTbl_sexoInputEnvelope
    set?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    disconnect?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    delete?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    connect?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    update?: tbl_diretoresUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_diretoresUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_diretoresUpdateManyWithWhereWithoutTbl_sexoInput | tbl_diretoresUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_diretoresScalarWhereInput | tbl_diretoresScalarWhereInput[]
  }

  export type tbl_atoresUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_atoresCreateWithoutTbl_sexoInput, tbl_atoresUncheckedCreateWithoutTbl_sexoInput> | tbl_atoresCreateWithoutTbl_sexoInput[] | tbl_atoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_atoresCreateOrConnectWithoutTbl_sexoInput | tbl_atoresCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_atoresUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_atoresUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_atoresCreateManyTbl_sexoInputEnvelope
    set?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    disconnect?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    delete?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    connect?: tbl_atoresWhereUniqueInput | tbl_atoresWhereUniqueInput[]
    update?: tbl_atoresUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_atoresUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_atoresUpdateManyWithWhereWithoutTbl_sexoInput | tbl_atoresUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_atoresScalarWhereInput | tbl_atoresScalarWhereInput[]
  }

  export type tbl_diretoresUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_diretoresCreateWithoutTbl_sexoInput, tbl_diretoresUncheckedCreateWithoutTbl_sexoInput> | tbl_diretoresCreateWithoutTbl_sexoInput[] | tbl_diretoresUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_diretoresCreateOrConnectWithoutTbl_sexoInput | tbl_diretoresCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_diretoresUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_diretoresUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_diretoresCreateManyTbl_sexoInputEnvelope
    set?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    disconnect?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    delete?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    connect?: tbl_diretoresWhereUniqueInput | tbl_diretoresWhereUniqueInput[]
    update?: tbl_diretoresUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_diretoresUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_diretoresUpdateManyWithWhereWithoutTbl_sexoInput | tbl_diretoresUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_diretoresScalarWhereInput | tbl_diretoresScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type tbl_classificacoesCreateWithoutTbl_filmesInput = {
    sigla: string
    classificacao: string
    legenda: string
    imagem: string
  }

  export type tbl_classificacoesUncheckedCreateWithoutTbl_filmesInput = {
    id?: number
    sigla: string
    classificacao: string
    legenda: string
    imagem: string
  }

  export type tbl_classificacoesCreateOrConnectWithoutTbl_filmesInput = {
    where: tbl_classificacoesWhereUniqueInput
    create: XOR<tbl_classificacoesCreateWithoutTbl_filmesInput, tbl_classificacoesUncheckedCreateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_atorCreateWithoutTbl_filmesInput = {
    tbl_atores: tbl_atoresCreateNestedOneWithoutTbl_filmes_atorInput
  }

  export type tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput = {
    id?: number
    id_ator: number
  }

  export type tbl_filmes_atorCreateOrConnectWithoutTbl_filmesInput = {
    where: tbl_filmes_atorWhereUniqueInput
    create: XOR<tbl_filmes_atorCreateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_atorCreateManyTbl_filmesInputEnvelope = {
    data: tbl_filmes_atorCreateManyTbl_filmesInput | tbl_filmes_atorCreateManyTbl_filmesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_filmes_diretorCreateWithoutTbl_filmesInput = {
    tbl_diretores: tbl_diretoresCreateNestedOneWithoutTbl_filmes_diretorInput
  }

  export type tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput = {
    id?: number
    id_diretor: number
  }

  export type tbl_filmes_diretorCreateOrConnectWithoutTbl_filmesInput = {
    where: tbl_filmes_diretorWhereUniqueInput
    create: XOR<tbl_filmes_diretorCreateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_diretorCreateManyTbl_filmesInputEnvelope = {
    data: tbl_filmes_diretorCreateManyTbl_filmesInput | tbl_filmes_diretorCreateManyTbl_filmesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_genero_filmeCreateWithoutTbl_filmesInput = {
    tbl_generos: tbl_generosCreateNestedOneWithoutTbl_genero_filmeInput
  }

  export type tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput = {
    id?: number
    id_genero: number
  }

  export type tbl_genero_filmeCreateOrConnectWithoutTbl_filmesInput = {
    where: tbl_genero_filmeWhereUniqueInput
    create: XOR<tbl_genero_filmeCreateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput>
  }

  export type tbl_genero_filmeCreateManyTbl_filmesInputEnvelope = {
    data: tbl_genero_filmeCreateManyTbl_filmesInput | tbl_genero_filmeCreateManyTbl_filmesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_classificacoesUpsertWithoutTbl_filmesInput = {
    update: XOR<tbl_classificacoesUpdateWithoutTbl_filmesInput, tbl_classificacoesUncheckedUpdateWithoutTbl_filmesInput>
    create: XOR<tbl_classificacoesCreateWithoutTbl_filmesInput, tbl_classificacoesUncheckedCreateWithoutTbl_filmesInput>
    where?: tbl_classificacoesWhereInput
  }

  export type tbl_classificacoesUpdateToOneWithWhereWithoutTbl_filmesInput = {
    where?: tbl_classificacoesWhereInput
    data: XOR<tbl_classificacoesUpdateWithoutTbl_filmesInput, tbl_classificacoesUncheckedUpdateWithoutTbl_filmesInput>
  }

  export type tbl_classificacoesUpdateWithoutTbl_filmesInput = {
    sigla?: StringFieldUpdateOperationsInput | string
    classificacao?: StringFieldUpdateOperationsInput | string
    legenda?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_classificacoesUncheckedUpdateWithoutTbl_filmesInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    classificacao?: StringFieldUpdateOperationsInput | string
    legenda?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_filmesInput = {
    where: tbl_filmes_atorWhereUniqueInput
    update: XOR<tbl_filmes_atorUpdateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedUpdateWithoutTbl_filmesInput>
    create: XOR<tbl_filmes_atorCreateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedCreateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_filmesInput = {
    where: tbl_filmes_atorWhereUniqueInput
    data: XOR<tbl_filmes_atorUpdateWithoutTbl_filmesInput, tbl_filmes_atorUncheckedUpdateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_atorUpdateManyWithWhereWithoutTbl_filmesInput = {
    where: tbl_filmes_atorScalarWhereInput
    data: XOR<tbl_filmes_atorUpdateManyMutationInput, tbl_filmes_atorUncheckedUpdateManyWithoutTbl_filmesInput>
  }

  export type tbl_filmes_atorScalarWhereInput = {
    AND?: tbl_filmes_atorScalarWhereInput | tbl_filmes_atorScalarWhereInput[]
    OR?: tbl_filmes_atorScalarWhereInput[]
    NOT?: tbl_filmes_atorScalarWhereInput | tbl_filmes_atorScalarWhereInput[]
    id?: IntFilter<"tbl_filmes_ator"> | number
    id_ator?: IntFilter<"tbl_filmes_ator"> | number
    id_filme?: IntFilter<"tbl_filmes_ator"> | number
  }

  export type tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_filmesInput = {
    where: tbl_filmes_diretorWhereUniqueInput
    update: XOR<tbl_filmes_diretorUpdateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedUpdateWithoutTbl_filmesInput>
    create: XOR<tbl_filmes_diretorCreateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_filmesInput = {
    where: tbl_filmes_diretorWhereUniqueInput
    data: XOR<tbl_filmes_diretorUpdateWithoutTbl_filmesInput, tbl_filmes_diretorUncheckedUpdateWithoutTbl_filmesInput>
  }

  export type tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_filmesInput = {
    where: tbl_filmes_diretorScalarWhereInput
    data: XOR<tbl_filmes_diretorUpdateManyMutationInput, tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_filmesInput>
  }

  export type tbl_filmes_diretorScalarWhereInput = {
    AND?: tbl_filmes_diretorScalarWhereInput | tbl_filmes_diretorScalarWhereInput[]
    OR?: tbl_filmes_diretorScalarWhereInput[]
    NOT?: tbl_filmes_diretorScalarWhereInput | tbl_filmes_diretorScalarWhereInput[]
    id?: IntFilter<"tbl_filmes_diretor"> | number
    id_diretor?: IntFilter<"tbl_filmes_diretor"> | number
    id_filme?: IntFilter<"tbl_filmes_diretor"> | number
  }

  export type tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_filmesInput = {
    where: tbl_genero_filmeWhereUniqueInput
    update: XOR<tbl_genero_filmeUpdateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedUpdateWithoutTbl_filmesInput>
    create: XOR<tbl_genero_filmeCreateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedCreateWithoutTbl_filmesInput>
  }

  export type tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_filmesInput = {
    where: tbl_genero_filmeWhereUniqueInput
    data: XOR<tbl_genero_filmeUpdateWithoutTbl_filmesInput, tbl_genero_filmeUncheckedUpdateWithoutTbl_filmesInput>
  }

  export type tbl_genero_filmeUpdateManyWithWhereWithoutTbl_filmesInput = {
    where: tbl_genero_filmeScalarWhereInput
    data: XOR<tbl_genero_filmeUpdateManyMutationInput, tbl_genero_filmeUncheckedUpdateManyWithoutTbl_filmesInput>
  }

  export type tbl_genero_filmeScalarWhereInput = {
    AND?: tbl_genero_filmeScalarWhereInput | tbl_genero_filmeScalarWhereInput[]
    OR?: tbl_genero_filmeScalarWhereInput[]
    NOT?: tbl_genero_filmeScalarWhereInput | tbl_genero_filmeScalarWhereInput[]
    id?: IntFilter<"tbl_genero_filme"> | number
    id_genero?: IntFilter<"tbl_genero_filme"> | number
    id_filme?: IntFilter<"tbl_genero_filme"> | number
  }

  export type tbl_sexoCreateWithoutTbl_atoresInput = {
    sexo: string
    tbl_diretores?: tbl_diretoresCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_atoresInput = {
    id?: number
    sexo: string
    tbl_diretores?: tbl_diretoresUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_atoresInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_atoresInput, tbl_sexoUncheckedCreateWithoutTbl_atoresInput>
  }

  export type tbl_filmes_atorCreateWithoutTbl_atoresInput = {
    tbl_filmes: tbl_filmesCreateNestedOneWithoutTbl_filmes_atorInput
  }

  export type tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput = {
    id?: number
    id_filme: number
  }

  export type tbl_filmes_atorCreateOrConnectWithoutTbl_atoresInput = {
    where: tbl_filmes_atorWhereUniqueInput
    create: XOR<tbl_filmes_atorCreateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput>
  }

  export type tbl_filmes_atorCreateManyTbl_atoresInputEnvelope = {
    data: tbl_filmes_atorCreateManyTbl_atoresInput | tbl_filmes_atorCreateManyTbl_atoresInput[]
    skipDuplicates?: boolean
  }

  export type tbl_nacionalidades_atorCreateWithoutTbl_atoresInput = {
    tbl_nacionalidades: tbl_nacionalidadesCreateNestedOneWithoutTbl_nacionalidades_atorInput
  }

  export type tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput = {
    id?: number
    id_nacionalidade: number
  }

  export type tbl_nacionalidades_atorCreateOrConnectWithoutTbl_atoresInput = {
    where: tbl_nacionalidades_atorWhereUniqueInput
    create: XOR<tbl_nacionalidades_atorCreateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput>
  }

  export type tbl_nacionalidades_atorCreateManyTbl_atoresInputEnvelope = {
    data: tbl_nacionalidades_atorCreateManyTbl_atoresInput | tbl_nacionalidades_atorCreateManyTbl_atoresInput[]
    skipDuplicates?: boolean
  }

  export type tbl_sexoUpsertWithoutTbl_atoresInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_atoresInput, tbl_sexoUncheckedUpdateWithoutTbl_atoresInput>
    create: XOR<tbl_sexoCreateWithoutTbl_atoresInput, tbl_sexoUncheckedCreateWithoutTbl_atoresInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_atoresInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_atoresInput, tbl_sexoUncheckedUpdateWithoutTbl_atoresInput>
  }

  export type tbl_sexoUpdateWithoutTbl_atoresInput = {
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_diretores?: tbl_diretoresUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_atoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_diretores?: tbl_diretoresUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_filmes_atorUpsertWithWhereUniqueWithoutTbl_atoresInput = {
    where: tbl_filmes_atorWhereUniqueInput
    update: XOR<tbl_filmes_atorUpdateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedUpdateWithoutTbl_atoresInput>
    create: XOR<tbl_filmes_atorCreateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedCreateWithoutTbl_atoresInput>
  }

  export type tbl_filmes_atorUpdateWithWhereUniqueWithoutTbl_atoresInput = {
    where: tbl_filmes_atorWhereUniqueInput
    data: XOR<tbl_filmes_atorUpdateWithoutTbl_atoresInput, tbl_filmes_atorUncheckedUpdateWithoutTbl_atoresInput>
  }

  export type tbl_filmes_atorUpdateManyWithWhereWithoutTbl_atoresInput = {
    where: tbl_filmes_atorScalarWhereInput
    data: XOR<tbl_filmes_atorUpdateManyMutationInput, tbl_filmes_atorUncheckedUpdateManyWithoutTbl_atoresInput>
  }

  export type tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_atoresInput = {
    where: tbl_nacionalidades_atorWhereUniqueInput
    update: XOR<tbl_nacionalidades_atorUpdateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedUpdateWithoutTbl_atoresInput>
    create: XOR<tbl_nacionalidades_atorCreateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_atoresInput>
  }

  export type tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_atoresInput = {
    where: tbl_nacionalidades_atorWhereUniqueInput
    data: XOR<tbl_nacionalidades_atorUpdateWithoutTbl_atoresInput, tbl_nacionalidades_atorUncheckedUpdateWithoutTbl_atoresInput>
  }

  export type tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_atoresInput = {
    where: tbl_nacionalidades_atorScalarWhereInput
    data: XOR<tbl_nacionalidades_atorUpdateManyMutationInput, tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_atoresInput>
  }

  export type tbl_nacionalidades_atorScalarWhereInput = {
    AND?: tbl_nacionalidades_atorScalarWhereInput | tbl_nacionalidades_atorScalarWhereInput[]
    OR?: tbl_nacionalidades_atorScalarWhereInput[]
    NOT?: tbl_nacionalidades_atorScalarWhereInput | tbl_nacionalidades_atorScalarWhereInput[]
    id?: IntFilter<"tbl_nacionalidades_ator"> | number
    id_ator?: IntFilter<"tbl_nacionalidades_ator"> | number
    id_nacionalidade?: IntFilter<"tbl_nacionalidades_ator"> | number
  }

  export type tbl_filmesCreateWithoutTbl_classificacoesInput = {
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    tbl_filmes_ator?: tbl_filmes_atorCreateNestedManyWithoutTbl_filmesInput
    tbl_filmes_diretor?: tbl_filmes_diretorCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput = {
    id?: number
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    tbl_filmes_ator?: tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_filmesInput
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesCreateOrConnectWithoutTbl_classificacoesInput = {
    where: tbl_filmesWhereUniqueInput
    create: XOR<tbl_filmesCreateWithoutTbl_classificacoesInput, tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput>
  }

  export type tbl_filmesCreateManyTbl_classificacoesInputEnvelope = {
    data: tbl_filmesCreateManyTbl_classificacoesInput | tbl_filmesCreateManyTbl_classificacoesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_filmesUpsertWithWhereUniqueWithoutTbl_classificacoesInput = {
    where: tbl_filmesWhereUniqueInput
    update: XOR<tbl_filmesUpdateWithoutTbl_classificacoesInput, tbl_filmesUncheckedUpdateWithoutTbl_classificacoesInput>
    create: XOR<tbl_filmesCreateWithoutTbl_classificacoesInput, tbl_filmesUncheckedCreateWithoutTbl_classificacoesInput>
  }

  export type tbl_filmesUpdateWithWhereUniqueWithoutTbl_classificacoesInput = {
    where: tbl_filmesWhereUniqueInput
    data: XOR<tbl_filmesUpdateWithoutTbl_classificacoesInput, tbl_filmesUncheckedUpdateWithoutTbl_classificacoesInput>
  }

  export type tbl_filmesUpdateManyWithWhereWithoutTbl_classificacoesInput = {
    where: tbl_filmesScalarWhereInput
    data: XOR<tbl_filmesUpdateManyMutationInput, tbl_filmesUncheckedUpdateManyWithoutTbl_classificacoesInput>
  }

  export type tbl_filmesScalarWhereInput = {
    AND?: tbl_filmesScalarWhereInput | tbl_filmesScalarWhereInput[]
    OR?: tbl_filmesScalarWhereInput[]
    NOT?: tbl_filmesScalarWhereInput | tbl_filmesScalarWhereInput[]
    id?: IntFilter<"tbl_filmes"> | number
    nome?: StringFilter<"tbl_filmes"> | string
    sinopse?: StringFilter<"tbl_filmes"> | string
    duracao?: DateTimeFilter<"tbl_filmes"> | Date | string
    data_lancamento?: DateTimeFilter<"tbl_filmes"> | Date | string
    data_relancamento?: DateTimeNullableFilter<"tbl_filmes"> | Date | string | null
    foto_capa?: StringFilter<"tbl_filmes"> | string
    valor_unitario?: FloatNullableFilter<"tbl_filmes"> | number | null
    id_classificacao?: IntFilter<"tbl_filmes"> | number
  }

  export type tbl_sexoCreateWithoutTbl_diretoresInput = {
    sexo: string
    tbl_atores?: tbl_atoresCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_diretoresInput = {
    id?: number
    sexo: string
    tbl_atores?: tbl_atoresUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_diretoresInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_diretoresInput, tbl_sexoUncheckedCreateWithoutTbl_diretoresInput>
  }

  export type tbl_filmes_diretorCreateWithoutTbl_diretoresInput = {
    tbl_filmes: tbl_filmesCreateNestedOneWithoutTbl_filmes_diretorInput
  }

  export type tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput = {
    id?: number
    id_filme: number
  }

  export type tbl_filmes_diretorCreateOrConnectWithoutTbl_diretoresInput = {
    where: tbl_filmes_diretorWhereUniqueInput
    create: XOR<tbl_filmes_diretorCreateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput>
  }

  export type tbl_filmes_diretorCreateManyTbl_diretoresInputEnvelope = {
    data: tbl_filmes_diretorCreateManyTbl_diretoresInput | tbl_filmes_diretorCreateManyTbl_diretoresInput[]
    skipDuplicates?: boolean
  }

  export type tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput = {
    tbl_nacionalidades: tbl_nacionalidadesCreateNestedOneWithoutTbl_nacionalidades_diretorInput
  }

  export type tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput = {
    id?: number
    id_nacionalidade: number
  }

  export type tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_diretoresInput = {
    where: tbl_nacionalidades_diretorWhereUniqueInput
    create: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput>
  }

  export type tbl_nacionalidades_diretorCreateManyTbl_diretoresInputEnvelope = {
    data: tbl_nacionalidades_diretorCreateManyTbl_diretoresInput | tbl_nacionalidades_diretorCreateManyTbl_diretoresInput[]
    skipDuplicates?: boolean
  }

  export type tbl_sexoUpsertWithoutTbl_diretoresInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_diretoresInput, tbl_sexoUncheckedUpdateWithoutTbl_diretoresInput>
    create: XOR<tbl_sexoCreateWithoutTbl_diretoresInput, tbl_sexoUncheckedCreateWithoutTbl_diretoresInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_diretoresInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_diretoresInput, tbl_sexoUncheckedUpdateWithoutTbl_diretoresInput>
  }

  export type tbl_sexoUpdateWithoutTbl_diretoresInput = {
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_atores?: tbl_atoresUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_diretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_atores?: tbl_atoresUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_filmes_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput = {
    where: tbl_filmes_diretorWhereUniqueInput
    update: XOR<tbl_filmes_diretorUpdateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedUpdateWithoutTbl_diretoresInput>
    create: XOR<tbl_filmes_diretorCreateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedCreateWithoutTbl_diretoresInput>
  }

  export type tbl_filmes_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput = {
    where: tbl_filmes_diretorWhereUniqueInput
    data: XOR<tbl_filmes_diretorUpdateWithoutTbl_diretoresInput, tbl_filmes_diretorUncheckedUpdateWithoutTbl_diretoresInput>
  }

  export type tbl_filmes_diretorUpdateManyWithWhereWithoutTbl_diretoresInput = {
    where: tbl_filmes_diretorScalarWhereInput
    data: XOR<tbl_filmes_diretorUpdateManyMutationInput, tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_diretoresInput>
  }

  export type tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_diretoresInput = {
    where: tbl_nacionalidades_diretorWhereUniqueInput
    update: XOR<tbl_nacionalidades_diretorUpdateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedUpdateWithoutTbl_diretoresInput>
    create: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_diretoresInput>
  }

  export type tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_diretoresInput = {
    where: tbl_nacionalidades_diretorWhereUniqueInput
    data: XOR<tbl_nacionalidades_diretorUpdateWithoutTbl_diretoresInput, tbl_nacionalidades_diretorUncheckedUpdateWithoutTbl_diretoresInput>
  }

  export type tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_diretoresInput = {
    where: tbl_nacionalidades_diretorScalarWhereInput
    data: XOR<tbl_nacionalidades_diretorUpdateManyMutationInput, tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_diretoresInput>
  }

  export type tbl_nacionalidades_diretorScalarWhereInput = {
    AND?: tbl_nacionalidades_diretorScalarWhereInput | tbl_nacionalidades_diretorScalarWhereInput[]
    OR?: tbl_nacionalidades_diretorScalarWhereInput[]
    NOT?: tbl_nacionalidades_diretorScalarWhereInput | tbl_nacionalidades_diretorScalarWhereInput[]
    id?: IntFilter<"tbl_nacionalidades_diretor"> | number
    id_diretor?: IntFilter<"tbl_nacionalidades_diretor"> | number
    id_nacionalidade?: IntFilter<"tbl_nacionalidades_diretor"> | number
  }

  export type tbl_filmesCreateWithoutTbl_filmes_atorInput = {
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    tbl_classificacoes: tbl_classificacoesCreateNestedOneWithoutTbl_filmesInput
    tbl_filmes_diretor?: tbl_filmes_diretorCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesUncheckedCreateWithoutTbl_filmes_atorInput = {
    id?: number
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    id_classificacao: number
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesCreateOrConnectWithoutTbl_filmes_atorInput = {
    where: tbl_filmesWhereUniqueInput
    create: XOR<tbl_filmesCreateWithoutTbl_filmes_atorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_atorInput>
  }

  export type tbl_atoresCreateWithoutTbl_filmes_atorInput = {
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_atoresInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresUncheckedCreateWithoutTbl_filmes_atorInput = {
    id?: number
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo: number
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresCreateOrConnectWithoutTbl_filmes_atorInput = {
    where: tbl_atoresWhereUniqueInput
    create: XOR<tbl_atoresCreateWithoutTbl_filmes_atorInput, tbl_atoresUncheckedCreateWithoutTbl_filmes_atorInput>
  }

  export type tbl_filmesUpsertWithoutTbl_filmes_atorInput = {
    update: XOR<tbl_filmesUpdateWithoutTbl_filmes_atorInput, tbl_filmesUncheckedUpdateWithoutTbl_filmes_atorInput>
    create: XOR<tbl_filmesCreateWithoutTbl_filmes_atorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_atorInput>
    where?: tbl_filmesWhereInput
  }

  export type tbl_filmesUpdateToOneWithWhereWithoutTbl_filmes_atorInput = {
    where?: tbl_filmesWhereInput
    data: XOR<tbl_filmesUpdateWithoutTbl_filmes_atorInput, tbl_filmesUncheckedUpdateWithoutTbl_filmes_atorInput>
  }

  export type tbl_filmesUpdateWithoutTbl_filmes_atorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    tbl_classificacoes?: tbl_classificacoesUpdateOneRequiredWithoutTbl_filmesNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_filmesUncheckedUpdateWithoutTbl_filmes_atorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    id_classificacao?: IntFieldUpdateOperationsInput | number
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_atoresUpsertWithoutTbl_filmes_atorInput = {
    update: XOR<tbl_atoresUpdateWithoutTbl_filmes_atorInput, tbl_atoresUncheckedUpdateWithoutTbl_filmes_atorInput>
    create: XOR<tbl_atoresCreateWithoutTbl_filmes_atorInput, tbl_atoresUncheckedCreateWithoutTbl_filmes_atorInput>
    where?: tbl_atoresWhereInput
  }

  export type tbl_atoresUpdateToOneWithWhereWithoutTbl_filmes_atorInput = {
    where?: tbl_atoresWhereInput
    data: XOR<tbl_atoresUpdateWithoutTbl_filmes_atorInput, tbl_atoresUncheckedUpdateWithoutTbl_filmes_atorInput>
  }

  export type tbl_atoresUpdateWithoutTbl_filmes_atorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_atoresNestedInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_atoresUncheckedUpdateWithoutTbl_filmes_atorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_filmesCreateWithoutTbl_filmes_diretorInput = {
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    tbl_classificacoes: tbl_classificacoesCreateNestedOneWithoutTbl_filmesInput
    tbl_filmes_ator?: tbl_filmes_atorCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesUncheckedCreateWithoutTbl_filmes_diretorInput = {
    id?: number
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    id_classificacao: number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_filmesInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesCreateOrConnectWithoutTbl_filmes_diretorInput = {
    where: tbl_filmesWhereUniqueInput
    create: XOR<tbl_filmesCreateWithoutTbl_filmes_diretorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_diretorInput>
  }

  export type tbl_diretoresCreateWithoutTbl_filmes_diretorInput = {
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_diretoresInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresUncheckedCreateWithoutTbl_filmes_diretorInput = {
    id?: number
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo?: number | null
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresCreateOrConnectWithoutTbl_filmes_diretorInput = {
    where: tbl_diretoresWhereUniqueInput
    create: XOR<tbl_diretoresCreateWithoutTbl_filmes_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_filmes_diretorInput>
  }

  export type tbl_filmesUpsertWithoutTbl_filmes_diretorInput = {
    update: XOR<tbl_filmesUpdateWithoutTbl_filmes_diretorInput, tbl_filmesUncheckedUpdateWithoutTbl_filmes_diretorInput>
    create: XOR<tbl_filmesCreateWithoutTbl_filmes_diretorInput, tbl_filmesUncheckedCreateWithoutTbl_filmes_diretorInput>
    where?: tbl_filmesWhereInput
  }

  export type tbl_filmesUpdateToOneWithWhereWithoutTbl_filmes_diretorInput = {
    where?: tbl_filmesWhereInput
    data: XOR<tbl_filmesUpdateWithoutTbl_filmes_diretorInput, tbl_filmesUncheckedUpdateWithoutTbl_filmes_diretorInput>
  }

  export type tbl_filmesUpdateWithoutTbl_filmes_diretorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    tbl_classificacoes?: tbl_classificacoesUpdateOneRequiredWithoutTbl_filmesNestedInput
    tbl_filmes_ator?: tbl_filmes_atorUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_filmesUncheckedUpdateWithoutTbl_filmes_diretorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    id_classificacao?: IntFieldUpdateOperationsInput | number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_diretoresUpsertWithoutTbl_filmes_diretorInput = {
    update: XOR<tbl_diretoresUpdateWithoutTbl_filmes_diretorInput, tbl_diretoresUncheckedUpdateWithoutTbl_filmes_diretorInput>
    create: XOR<tbl_diretoresCreateWithoutTbl_filmes_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_filmes_diretorInput>
    where?: tbl_diretoresWhereInput
  }

  export type tbl_diretoresUpdateToOneWithWhereWithoutTbl_filmes_diretorInput = {
    where?: tbl_diretoresWhereInput
    data: XOR<tbl_diretoresUpdateWithoutTbl_filmes_diretorInput, tbl_diretoresUncheckedUpdateWithoutTbl_filmes_diretorInput>
  }

  export type tbl_diretoresUpdateWithoutTbl_filmes_diretorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_diretoresNestedInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_diretoresUncheckedUpdateWithoutTbl_filmes_diretorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_generosCreateWithoutTbl_genero_filmeInput = {
    nome: string
  }

  export type tbl_generosUncheckedCreateWithoutTbl_genero_filmeInput = {
    id?: number
    nome: string
  }

  export type tbl_generosCreateOrConnectWithoutTbl_genero_filmeInput = {
    where: tbl_generosWhereUniqueInput
    create: XOR<tbl_generosCreateWithoutTbl_genero_filmeInput, tbl_generosUncheckedCreateWithoutTbl_genero_filmeInput>
  }

  export type tbl_filmesCreateWithoutTbl_genero_filmeInput = {
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    tbl_classificacoes: tbl_classificacoesCreateNestedOneWithoutTbl_filmesInput
    tbl_filmes_ator?: tbl_filmes_atorCreateNestedManyWithoutTbl_filmesInput
    tbl_filmes_diretor?: tbl_filmes_diretorCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesUncheckedCreateWithoutTbl_genero_filmeInput = {
    id?: number
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
    id_classificacao: number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_filmesInput
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_filmesInput
  }

  export type tbl_filmesCreateOrConnectWithoutTbl_genero_filmeInput = {
    where: tbl_filmesWhereUniqueInput
    create: XOR<tbl_filmesCreateWithoutTbl_genero_filmeInput, tbl_filmesUncheckedCreateWithoutTbl_genero_filmeInput>
  }

  export type tbl_generosUpsertWithoutTbl_genero_filmeInput = {
    update: XOR<tbl_generosUpdateWithoutTbl_genero_filmeInput, tbl_generosUncheckedUpdateWithoutTbl_genero_filmeInput>
    create: XOR<tbl_generosCreateWithoutTbl_genero_filmeInput, tbl_generosUncheckedCreateWithoutTbl_genero_filmeInput>
    where?: tbl_generosWhereInput
  }

  export type tbl_generosUpdateToOneWithWhereWithoutTbl_genero_filmeInput = {
    where?: tbl_generosWhereInput
    data: XOR<tbl_generosUpdateWithoutTbl_genero_filmeInput, tbl_generosUncheckedUpdateWithoutTbl_genero_filmeInput>
  }

  export type tbl_generosUpdateWithoutTbl_genero_filmeInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_generosUncheckedUpdateWithoutTbl_genero_filmeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_filmesUpsertWithoutTbl_genero_filmeInput = {
    update: XOR<tbl_filmesUpdateWithoutTbl_genero_filmeInput, tbl_filmesUncheckedUpdateWithoutTbl_genero_filmeInput>
    create: XOR<tbl_filmesCreateWithoutTbl_genero_filmeInput, tbl_filmesUncheckedCreateWithoutTbl_genero_filmeInput>
    where?: tbl_filmesWhereInput
  }

  export type tbl_filmesUpdateToOneWithWhereWithoutTbl_genero_filmeInput = {
    where?: tbl_filmesWhereInput
    data: XOR<tbl_filmesUpdateWithoutTbl_genero_filmeInput, tbl_filmesUncheckedUpdateWithoutTbl_genero_filmeInput>
  }

  export type tbl_filmesUpdateWithoutTbl_genero_filmeInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    tbl_classificacoes?: tbl_classificacoesUpdateOneRequiredWithoutTbl_filmesNestedInput
    tbl_filmes_ator?: tbl_filmes_atorUpdateManyWithoutTbl_filmesNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_filmesUncheckedUpdateWithoutTbl_genero_filmeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    id_classificacao?: IntFieldUpdateOperationsInput | number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedUpdateManyWithoutTbl_filmesNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_genero_filmeCreateWithoutTbl_generosInput = {
    tbl_filmes: tbl_filmesCreateNestedOneWithoutTbl_genero_filmeInput
  }

  export type tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput = {
    id?: number
    id_filme: number
  }

  export type tbl_genero_filmeCreateOrConnectWithoutTbl_generosInput = {
    where: tbl_genero_filmeWhereUniqueInput
    create: XOR<tbl_genero_filmeCreateWithoutTbl_generosInput, tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput>
  }

  export type tbl_genero_filmeCreateManyTbl_generosInputEnvelope = {
    data: tbl_genero_filmeCreateManyTbl_generosInput | tbl_genero_filmeCreateManyTbl_generosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_genero_filmeUpsertWithWhereUniqueWithoutTbl_generosInput = {
    where: tbl_genero_filmeWhereUniqueInput
    update: XOR<tbl_genero_filmeUpdateWithoutTbl_generosInput, tbl_genero_filmeUncheckedUpdateWithoutTbl_generosInput>
    create: XOR<tbl_genero_filmeCreateWithoutTbl_generosInput, tbl_genero_filmeUncheckedCreateWithoutTbl_generosInput>
  }

  export type tbl_genero_filmeUpdateWithWhereUniqueWithoutTbl_generosInput = {
    where: tbl_genero_filmeWhereUniqueInput
    data: XOR<tbl_genero_filmeUpdateWithoutTbl_generosInput, tbl_genero_filmeUncheckedUpdateWithoutTbl_generosInput>
  }

  export type tbl_genero_filmeUpdateManyWithWhereWithoutTbl_generosInput = {
    where: tbl_genero_filmeScalarWhereInput
    data: XOR<tbl_genero_filmeUpdateManyMutationInput, tbl_genero_filmeUncheckedUpdateManyWithoutTbl_generosInput>
  }

  export type tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput = {
    tbl_atores: tbl_atoresCreateNestedOneWithoutTbl_nacionalidades_atorInput
  }

  export type tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput = {
    id?: number
    id_ator: number
  }

  export type tbl_nacionalidades_atorCreateOrConnectWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_atorWhereUniqueInput
    create: XOR<tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput>
  }

  export type tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInputEnvelope = {
    data: tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInput | tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput = {
    tbl_diretores: tbl_diretoresCreateNestedOneWithoutTbl_nacionalidades_diretorInput
  }

  export type tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput = {
    id?: number
    id_diretor: number
  }

  export type tbl_nacionalidades_diretorCreateOrConnectWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_diretorWhereUniqueInput
    create: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput>
  }

  export type tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInputEnvelope = {
    data: tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInput | tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_nacionalidades_atorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_atorWhereUniqueInput
    update: XOR<tbl_nacionalidades_atorUpdateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedUpdateWithoutTbl_nacionalidadesInput>
    create: XOR<tbl_nacionalidades_atorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedCreateWithoutTbl_nacionalidadesInput>
  }

  export type tbl_nacionalidades_atorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_atorWhereUniqueInput
    data: XOR<tbl_nacionalidades_atorUpdateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_atorUncheckedUpdateWithoutTbl_nacionalidadesInput>
  }

  export type tbl_nacionalidades_atorUpdateManyWithWhereWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_atorScalarWhereInput
    data: XOR<tbl_nacionalidades_atorUpdateManyMutationInput, tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_nacionalidadesInput>
  }

  export type tbl_nacionalidades_diretorUpsertWithWhereUniqueWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_diretorWhereUniqueInput
    update: XOR<tbl_nacionalidades_diretorUpdateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedUpdateWithoutTbl_nacionalidadesInput>
    create: XOR<tbl_nacionalidades_diretorCreateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedCreateWithoutTbl_nacionalidadesInput>
  }

  export type tbl_nacionalidades_diretorUpdateWithWhereUniqueWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_diretorWhereUniqueInput
    data: XOR<tbl_nacionalidades_diretorUpdateWithoutTbl_nacionalidadesInput, tbl_nacionalidades_diretorUncheckedUpdateWithoutTbl_nacionalidadesInput>
  }

  export type tbl_nacionalidades_diretorUpdateManyWithWhereWithoutTbl_nacionalidadesInput = {
    where: tbl_nacionalidades_diretorScalarWhereInput
    data: XOR<tbl_nacionalidades_diretorUpdateManyMutationInput, tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_nacionalidadesInput>
  }

  export type tbl_atoresCreateWithoutTbl_nacionalidades_atorInput = {
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_atoresInput
    tbl_filmes_ator?: tbl_filmes_atorCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresUncheckedCreateWithoutTbl_nacionalidades_atorInput = {
    id?: number
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo: number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresCreateOrConnectWithoutTbl_nacionalidades_atorInput = {
    where: tbl_atoresWhereUniqueInput
    create: XOR<tbl_atoresCreateWithoutTbl_nacionalidades_atorInput, tbl_atoresUncheckedCreateWithoutTbl_nacionalidades_atorInput>
  }

  export type tbl_nacionalidadesCreateWithoutTbl_nacionalidades_atorInput = {
    pais_origem: string
    nacionalidade: string
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorCreateNestedManyWithoutTbl_nacionalidadesInput
  }

  export type tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_atorInput = {
    id?: number
    pais_origem: string
    nacionalidade: string
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedCreateNestedManyWithoutTbl_nacionalidadesInput
  }

  export type tbl_nacionalidadesCreateOrConnectWithoutTbl_nacionalidades_atorInput = {
    where: tbl_nacionalidadesWhereUniqueInput
    create: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_atorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_atorInput>
  }

  export type tbl_atoresUpsertWithoutTbl_nacionalidades_atorInput = {
    update: XOR<tbl_atoresUpdateWithoutTbl_nacionalidades_atorInput, tbl_atoresUncheckedUpdateWithoutTbl_nacionalidades_atorInput>
    create: XOR<tbl_atoresCreateWithoutTbl_nacionalidades_atorInput, tbl_atoresUncheckedCreateWithoutTbl_nacionalidades_atorInput>
    where?: tbl_atoresWhereInput
  }

  export type tbl_atoresUpdateToOneWithWhereWithoutTbl_nacionalidades_atorInput = {
    where?: tbl_atoresWhereInput
    data: XOR<tbl_atoresUpdateWithoutTbl_nacionalidades_atorInput, tbl_atoresUncheckedUpdateWithoutTbl_nacionalidades_atorInput>
  }

  export type tbl_atoresUpdateWithoutTbl_nacionalidades_atorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_atoresNestedInput
    tbl_filmes_ator?: tbl_filmes_atorUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_atoresUncheckedUpdateWithoutTbl_nacionalidades_atorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_filmes_ator?: tbl_filmes_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_nacionalidadesUpsertWithoutTbl_nacionalidades_atorInput = {
    update: XOR<tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_atorInput, tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_atorInput>
    create: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_atorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_atorInput>
    where?: tbl_nacionalidadesWhereInput
  }

  export type tbl_nacionalidadesUpdateToOneWithWhereWithoutTbl_nacionalidades_atorInput = {
    where?: tbl_nacionalidadesWhereInput
    data: XOR<tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_atorInput, tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_atorInput>
  }

  export type tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_atorInput = {
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUpdateManyWithoutTbl_nacionalidadesNestedInput
  }

  export type tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_atorInput = {
    id?: IntFieldUpdateOperationsInput | number
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_nacionalidadesNestedInput
  }

  export type tbl_diretoresCreateWithoutTbl_nacionalidades_diretorInput = {
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_diretoresInput
    tbl_filmes_diretor?: tbl_filmes_diretorCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresUncheckedCreateWithoutTbl_nacionalidades_diretorInput = {
    id?: number
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    id_sexo?: number | null
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresCreateOrConnectWithoutTbl_nacionalidades_diretorInput = {
    where: tbl_diretoresWhereUniqueInput
    create: XOR<tbl_diretoresCreateWithoutTbl_nacionalidades_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
  }

  export type tbl_nacionalidadesCreateWithoutTbl_nacionalidades_diretorInput = {
    pais_origem: string
    nacionalidade: string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorCreateNestedManyWithoutTbl_nacionalidadesInput
  }

  export type tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_diretorInput = {
    id?: number
    pais_origem: string
    nacionalidade: string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedCreateNestedManyWithoutTbl_nacionalidadesInput
  }

  export type tbl_nacionalidadesCreateOrConnectWithoutTbl_nacionalidades_diretorInput = {
    where: tbl_nacionalidadesWhereUniqueInput
    create: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_diretorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
  }

  export type tbl_diretoresUpsertWithoutTbl_nacionalidades_diretorInput = {
    update: XOR<tbl_diretoresUpdateWithoutTbl_nacionalidades_diretorInput, tbl_diretoresUncheckedUpdateWithoutTbl_nacionalidades_diretorInput>
    create: XOR<tbl_diretoresCreateWithoutTbl_nacionalidades_diretorInput, tbl_diretoresUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
    where?: tbl_diretoresWhereInput
  }

  export type tbl_diretoresUpdateToOneWithWhereWithoutTbl_nacionalidades_diretorInput = {
    where?: tbl_diretoresWhereInput
    data: XOR<tbl_diretoresUpdateWithoutTbl_nacionalidades_diretorInput, tbl_diretoresUncheckedUpdateWithoutTbl_nacionalidades_diretorInput>
  }

  export type tbl_diretoresUpdateWithoutTbl_nacionalidades_diretorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_diretoresNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_diretoresUncheckedUpdateWithoutTbl_nacionalidades_diretorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_nacionalidadesUpsertWithoutTbl_nacionalidades_diretorInput = {
    update: XOR<tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_diretorInput, tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_diretorInput>
    create: XOR<tbl_nacionalidadesCreateWithoutTbl_nacionalidades_diretorInput, tbl_nacionalidadesUncheckedCreateWithoutTbl_nacionalidades_diretorInput>
    where?: tbl_nacionalidadesWhereInput
  }

  export type tbl_nacionalidadesUpdateToOneWithWhereWithoutTbl_nacionalidades_diretorInput = {
    where?: tbl_nacionalidadesWhereInput
    data: XOR<tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_diretorInput, tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_diretorInput>
  }

  export type tbl_nacionalidadesUpdateWithoutTbl_nacionalidades_diretorInput = {
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUpdateManyWithoutTbl_nacionalidadesNestedInput
  }

  export type tbl_nacionalidadesUncheckedUpdateWithoutTbl_nacionalidades_diretorInput = {
    id?: IntFieldUpdateOperationsInput | number
    pais_origem?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_nacionalidadesNestedInput
  }

  export type tbl_atoresCreateWithoutTbl_sexoInput = {
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_filmes_ator?: tbl_filmes_atorCreateNestedManyWithoutTbl_atoresInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresUncheckedCreateWithoutTbl_sexoInput = {
    id?: number
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_filmes_ator?: tbl_filmes_atorUncheckedCreateNestedManyWithoutTbl_atoresInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedCreateNestedManyWithoutTbl_atoresInput
  }

  export type tbl_atoresCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_atoresWhereUniqueInput
    create: XOR<tbl_atoresCreateWithoutTbl_sexoInput, tbl_atoresUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_atoresCreateManyTbl_sexoInputEnvelope = {
    data: tbl_atoresCreateManyTbl_sexoInput | tbl_atoresCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_diretoresCreateWithoutTbl_sexoInput = {
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_filmes_diretor?: tbl_filmes_diretorCreateNestedManyWithoutTbl_diretoresInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresUncheckedCreateWithoutTbl_sexoInput = {
    id?: number
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedCreateNestedManyWithoutTbl_diretoresInput
  }

  export type tbl_diretoresCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_diretoresWhereUniqueInput
    create: XOR<tbl_diretoresCreateWithoutTbl_sexoInput, tbl_diretoresUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_diretoresCreateManyTbl_sexoInputEnvelope = {
    data: tbl_diretoresCreateManyTbl_sexoInput | tbl_diretoresCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_atoresUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_atoresWhereUniqueInput
    update: XOR<tbl_atoresUpdateWithoutTbl_sexoInput, tbl_atoresUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_atoresCreateWithoutTbl_sexoInput, tbl_atoresUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_atoresUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_atoresWhereUniqueInput
    data: XOR<tbl_atoresUpdateWithoutTbl_sexoInput, tbl_atoresUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_atoresUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_atoresScalarWhereInput
    data: XOR<tbl_atoresUpdateManyMutationInput, tbl_atoresUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_atoresScalarWhereInput = {
    AND?: tbl_atoresScalarWhereInput | tbl_atoresScalarWhereInput[]
    OR?: tbl_atoresScalarWhereInput[]
    NOT?: tbl_atoresScalarWhereInput | tbl_atoresScalarWhereInput[]
    id?: IntFilter<"tbl_atores"> | number
    nome?: StringFilter<"tbl_atores"> | string
    foto_ator?: StringFilter<"tbl_atores"> | string
    dt_nasc?: DateTimeFilter<"tbl_atores"> | Date | string
    dt_falec?: DateTimeNullableFilter<"tbl_atores"> | Date | string | null
    sobre?: StringNullableFilter<"tbl_atores"> | string | null
    id_sexo?: IntFilter<"tbl_atores"> | number
  }

  export type tbl_diretoresUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_diretoresWhereUniqueInput
    update: XOR<tbl_diretoresUpdateWithoutTbl_sexoInput, tbl_diretoresUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_diretoresCreateWithoutTbl_sexoInput, tbl_diretoresUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_diretoresUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_diretoresWhereUniqueInput
    data: XOR<tbl_diretoresUpdateWithoutTbl_sexoInput, tbl_diretoresUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_diretoresUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_diretoresScalarWhereInput
    data: XOR<tbl_diretoresUpdateManyMutationInput, tbl_diretoresUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_diretoresScalarWhereInput = {
    AND?: tbl_diretoresScalarWhereInput | tbl_diretoresScalarWhereInput[]
    OR?: tbl_diretoresScalarWhereInput[]
    NOT?: tbl_diretoresScalarWhereInput | tbl_diretoresScalarWhereInput[]
    id?: IntFilter<"tbl_diretores"> | number
    nome?: StringFilter<"tbl_diretores"> | string
    foto_diretor?: StringFilter<"tbl_diretores"> | string
    dt_nasc?: DateTimeFilter<"tbl_diretores"> | Date | string
    dt_falec?: DateTimeNullableFilter<"tbl_diretores"> | Date | string | null
    sobre?: StringNullableFilter<"tbl_diretores"> | string | null
    id_sexo?: IntNullableFilter<"tbl_diretores"> | number | null
  }

  export type tbl_filmes_atorCreateManyTbl_filmesInput = {
    id?: number
    id_ator: number
  }

  export type tbl_filmes_diretorCreateManyTbl_filmesInput = {
    id?: number
    id_diretor: number
  }

  export type tbl_genero_filmeCreateManyTbl_filmesInput = {
    id?: number
    id_genero: number
  }

  export type tbl_filmes_atorUpdateWithoutTbl_filmesInput = {
    tbl_atores?: tbl_atoresUpdateOneRequiredWithoutTbl_filmes_atorNestedInput
  }

  export type tbl_filmes_atorUncheckedUpdateWithoutTbl_filmesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_atorUncheckedUpdateManyWithoutTbl_filmesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_diretorUpdateWithoutTbl_filmesInput = {
    tbl_diretores?: tbl_diretoresUpdateOneRequiredWithoutTbl_filmes_diretorNestedInput
  }

  export type tbl_filmes_diretorUncheckedUpdateWithoutTbl_filmesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_filmesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_genero_filmeUpdateWithoutTbl_filmesInput = {
    tbl_generos?: tbl_generosUpdateOneRequiredWithoutTbl_genero_filmeNestedInput
  }

  export type tbl_genero_filmeUncheckedUpdateWithoutTbl_filmesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_genero?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_genero_filmeUncheckedUpdateManyWithoutTbl_filmesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_genero?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_atorCreateManyTbl_atoresInput = {
    id?: number
    id_filme: number
  }

  export type tbl_nacionalidades_atorCreateManyTbl_atoresInput = {
    id?: number
    id_nacionalidade: number
  }

  export type tbl_filmes_atorUpdateWithoutTbl_atoresInput = {
    tbl_filmes?: tbl_filmesUpdateOneRequiredWithoutTbl_filmes_atorNestedInput
  }

  export type tbl_filmes_atorUncheckedUpdateWithoutTbl_atoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_atorUncheckedUpdateManyWithoutTbl_atoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_atorUpdateWithoutTbl_atoresInput = {
    tbl_nacionalidades?: tbl_nacionalidadesUpdateOneRequiredWithoutTbl_nacionalidades_atorNestedInput
  }

  export type tbl_nacionalidades_atorUncheckedUpdateWithoutTbl_atoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_atoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmesCreateManyTbl_classificacoesInput = {
    id?: number
    nome: string
    sinopse: string
    duracao: Date | string
    data_lancamento: Date | string
    data_relancamento?: Date | string | null
    foto_capa: string
    valor_unitario?: number | null
  }

  export type tbl_filmesUpdateWithoutTbl_classificacoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    tbl_filmes_ator?: tbl_filmes_atorUpdateManyWithoutTbl_filmesNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_filmesUncheckedUpdateWithoutTbl_classificacoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    tbl_filmes_ator?: tbl_filmes_atorUncheckedUpdateManyWithoutTbl_filmesNestedInput
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_filmesNestedInput
    tbl_genero_filme?: tbl_genero_filmeUncheckedUpdateManyWithoutTbl_filmesNestedInput
  }

  export type tbl_filmesUncheckedUpdateManyWithoutTbl_classificacoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sinopse?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_lancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    data_relancamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_capa?: StringFieldUpdateOperationsInput | string
    valor_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type tbl_filmes_diretorCreateManyTbl_diretoresInput = {
    id?: number
    id_filme: number
  }

  export type tbl_nacionalidades_diretorCreateManyTbl_diretoresInput = {
    id?: number
    id_nacionalidade: number
  }

  export type tbl_filmes_diretorUpdateWithoutTbl_diretoresInput = {
    tbl_filmes?: tbl_filmesUpdateOneRequiredWithoutTbl_filmes_diretorNestedInput
  }

  export type tbl_filmes_diretorUncheckedUpdateWithoutTbl_diretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_diretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_diretorUpdateWithoutTbl_diretoresInput = {
    tbl_nacionalidades?: tbl_nacionalidadesUpdateOneRequiredWithoutTbl_nacionalidades_diretorNestedInput
  }

  export type tbl_nacionalidades_diretorUncheckedUpdateWithoutTbl_diretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_diretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_nacionalidade?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_genero_filmeCreateManyTbl_generosInput = {
    id?: number
    id_filme: number
  }

  export type tbl_genero_filmeUpdateWithoutTbl_generosInput = {
    tbl_filmes?: tbl_filmesUpdateOneRequiredWithoutTbl_genero_filmeNestedInput
  }

  export type tbl_genero_filmeUncheckedUpdateWithoutTbl_generosInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_genero_filmeUncheckedUpdateManyWithoutTbl_generosInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_filme?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_atorCreateManyTbl_nacionalidadesInput = {
    id?: number
    id_ator: number
  }

  export type tbl_nacionalidades_diretorCreateManyTbl_nacionalidadesInput = {
    id?: number
    id_diretor: number
  }

  export type tbl_nacionalidades_atorUpdateWithoutTbl_nacionalidadesInput = {
    tbl_atores?: tbl_atoresUpdateOneRequiredWithoutTbl_nacionalidades_atorNestedInput
  }

  export type tbl_nacionalidades_atorUncheckedUpdateWithoutTbl_nacionalidadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_nacionalidadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ator?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_diretorUpdateWithoutTbl_nacionalidadesInput = {
    tbl_diretores?: tbl_diretoresUpdateOneRequiredWithoutTbl_nacionalidades_diretorNestedInput
  }

  export type tbl_nacionalidades_diretorUncheckedUpdateWithoutTbl_nacionalidadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_nacionalidadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_diretor?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_atoresCreateManyTbl_sexoInput = {
    id?: number
    nome: string
    foto_ator: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
  }

  export type tbl_diretoresCreateManyTbl_sexoInput = {
    id?: number
    nome: string
    foto_diretor: string
    dt_nasc: Date | string
    dt_falec?: Date | string | null
    sobre?: string | null
  }

  export type tbl_atoresUpdateWithoutTbl_sexoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_filmes_ator?: tbl_filmes_atorUpdateManyWithoutTbl_atoresNestedInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_atoresUncheckedUpdateWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_filmes_ator?: tbl_filmes_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput
    tbl_nacionalidades_ator?: tbl_nacionalidades_atorUncheckedUpdateManyWithoutTbl_atoresNestedInput
  }

  export type tbl_atoresUncheckedUpdateManyWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_ator?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_diretoresUpdateWithoutTbl_sexoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_filmes_diretor?: tbl_filmes_diretorUpdateManyWithoutTbl_diretoresNestedInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_diretoresUncheckedUpdateWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_filmes_diretor?: tbl_filmes_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput
    tbl_nacionalidades_diretor?: tbl_nacionalidades_diretorUncheckedUpdateManyWithoutTbl_diretoresNestedInput
  }

  export type tbl_diretoresUncheckedUpdateManyWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    foto_diretor?: StringFieldUpdateOperationsInput | string
    dt_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    dt_falec?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use Tbl_filmesCountOutputTypeDefaultArgs instead
     */
    export type Tbl_filmesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_filmesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_atoresCountOutputTypeDefaultArgs instead
     */
    export type Tbl_atoresCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_atoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_classificacoesCountOutputTypeDefaultArgs instead
     */
    export type Tbl_classificacoesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_classificacoesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_diretoresCountOutputTypeDefaultArgs instead
     */
    export type Tbl_diretoresCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_diretoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_generosCountOutputTypeDefaultArgs instead
     */
    export type Tbl_generosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_generosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_nacionalidadesCountOutputTypeDefaultArgs instead
     */
    export type Tbl_nacionalidadesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_nacionalidadesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_sexoCountOutputTypeDefaultArgs instead
     */
    export type Tbl_sexoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_filmesDefaultArgs instead
     */
    export type tbl_filmesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_filmesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_atoresDefaultArgs instead
     */
    export type tbl_atoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_atoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_classificacoesDefaultArgs instead
     */
    export type tbl_classificacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_classificacoesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_diretoresDefaultArgs instead
     */
    export type tbl_diretoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_diretoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_filmes_atorDefaultArgs instead
     */
    export type tbl_filmes_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_filmes_atorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_filmes_diretorDefaultArgs instead
     */
    export type tbl_filmes_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_filmes_diretorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_genero_filmeDefaultArgs instead
     */
    export type tbl_genero_filmeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_genero_filmeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_generosDefaultArgs instead
     */
    export type tbl_generosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_generosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_nacionalidadesDefaultArgs instead
     */
    export type tbl_nacionalidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_nacionalidadesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_nacionalidades_atorDefaultArgs instead
     */
    export type tbl_nacionalidades_atorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_nacionalidades_atorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_nacionalidades_diretorDefaultArgs instead
     */
    export type tbl_nacionalidades_diretorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_nacionalidades_diretorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_sexoDefaultArgs instead
     */
    export type tbl_sexoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_sexoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}